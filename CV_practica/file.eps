%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Alvaro Cabrera Jim\616nez) ()%%Title: (2894ICONOSinternet-1.eps)%%CreationDate: 21/05/13 09:28%%Canvassize: 16383%%BoundingBox: 0 0 3969 3969%%HiResBoundingBox: 0 0 3968.5 3968.5%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registro])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1984.5 1984 1984.5 1984%AI3_TileBox: 1704.75 1604.25 2263.75 2387.25%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 3968.5 3968.5%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -2695.1814 3795.9556 0.22 1834 898 18 0 0 44 149 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 28886 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA9FFFFFFA9FFFFFFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8FFA8%FFA8FF7D5227522752275227522752275227522752275227A8A8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFFFA8FD04FF52F827F827F827F827F827F827F827F827F827F8%2727FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFA9FD1FFFA9FFFFFFA9%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FF2727A8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8A8F828A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFF52F8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFA82727FFFFFFA8FFFFFFA8FD1BFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8A8FFA8FFA8FF2E27A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFF8%27A8FFA8FFA8FFA8FFA8FF7DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFF52F8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFA82727FFFFFFA8FD05FF5227F827F827F827F827F827F827F8%27F827F827F827F827F8277DFD1BFFA9FFFFFF5252275227522752275227%522752275227522752275227522752277DA8FFFFFFA8A8FFA8FFA8FF5227%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFF827A8FFA8FFA8FFA8FF7D27%527D7D7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7DA82727A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA827F827%F827F827F827F827F827F827F827F827F827F827F827F827F8A8A8FFA8FF%FFA8FFFFFFA852F8A8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA82727FFA8FF%FFFFA8FFFF7DF8A8FD17FF7DF8A8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FD04FFA9F852A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FF2727A8FFA8FFFFA8FFA8FFA8FF2727A8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8AFF828A8FFA8FFA8FFA8FF53277DFFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF5227A8FFA8FFA8FFA8FFA8FFA8%522728275227282752272752FFA8FFA8FFA8FFA82752FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA827F8A8A8FFA8FFFFA8FD04FF52F8%A8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA82727FD08FF7DF8A8FD17FF7DF8%AFFD09FF7DF827F827F827F827F827F8277DFD07FFF852FD04FFA9FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF2727A8FFA8FFFFA8FFA8FFA8FF27%27A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFF852A8FFA8FFA8FFA8FF7D%277DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF5227A8FFA8%FFA8FFA8FFA8FF5227F827F8272727F8272727F87DFFFFA8FFA8FFA82752%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA827F8A8A9FFA8%FD04FFA8FFFF52F8AFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA82727FFFF%FFA8FD04FF7DF8A8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%7DF8FFFFFFA8FFFFFFA8FFFF5227FFFFFFA8FFA8FFA8FFA8277DFFFFFFA8%FFFFA8F852FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF27%27A8FFFFFFA8A8FFA8FFA8FF2E27A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFF827A8FFA8FFA8FFA8FF52277DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FF5227A8FFA8FFA8FFA8FFA8FF277DFFFFA8FFA8FFA8FF%A8FF277DFFFFA8FFA8FFA82727FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA852F8A8A8FFA8FD04FFA8FFFF52F8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA9FFA82727FD08FF7DF8A8FD17FF7DF8FD0AFF5259FD0AFF%5259FD06FFA9F852FD06FFA9FFFFFFA8FFFFFFA8FFFFFFA8FD05FF2727A8%FFFFFFA8A8FFA8FFA8FF5227A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%F827A8FFA8FFA8FFA8FF52277DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FF5227A8FFA8FFA8FFA8FFA8FF277DFFFFA8FFA8FFA8FFA8FF%277DFFFFA8FFA8FFA82728FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA852F8A8A8FFA8FFFFA8FFFFFFA852F8A8FD04FFA8FFFFFFA8FF%FFFFA8FFFFFFA82727FFA9FFFFFFA8FFFF7DF8A8FFFFA8FFFFFFA8FFFFFF%A9FFFFFFA9FFFFFFA9FD04FF7DF8A8FD09FF527DFFA9FFFFFFA8FD04FF52%7DFFA8FD05FFF852FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FF2727A8FFA8FFFFA8FFA8FFA8FF2727A8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFF828A8FFA8FFA8FFA8FF59277DFFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FF5227A8FFA8FFA8FFA8FFA8FF277DFFFFA8FFA8FF%A8FFA8FF277DFFFFA8FFA8FFA82752FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA827F8A8A8FFA8FFFFA8FD04FF52F8A8FD04FFA8FFFF%FFA8FD07FFA82727FD08FF7DF8A8FD17FF7DF8FD0AFF527DFD0AFF527DFD%07FFF852FD0CFFA9FFFFFFA8FFFFFFA8FFFFFF2727A8FFA8FFFFA8FFA8FF%A8FF2727A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFF852A8FFA8FFA8FF%A8FF7D277DFFA9FFA8FFA9FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF5227%A8FFA8FFA8FFA8FFFFFF277DFFFFA8FFA8FFA8FFA9FF277DFFFFA8FFA8FF%A82752FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA827F8A8%A9FFA8FD04FFA8FFFF52F8AFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA827%27FFFFFFA8FD04FF7DF8A8FD17FF7DF8FD0AFF5252FD0AFF5252FFFFFFA8%FFFFA8F852FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF27%27A8FFFFFFA8A8FFA8FFA8FF2E27A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFF827A8FFA8FFA8FFA8FF7D27275227522E5227522E522E5252522752%2E52275252522752F827A8FFA8FFA8FFA8FFA8FF277DFFFFA8FFA8FFA8FF%A8FF277DFFFFA8FFA8FFA82727FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA852F8A8A8FFA8FD04FFA8FFFF52F8FFFFFFA8FFFFFFA9FD%09FFA82727FD09FF7D27F827F827F827F827F827F827F827F827F827F827%F827F852A8FD0AFF527DFD0AFF5259FD06FFAFF852FFFFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF2727A8FFFFFFA8A8FFA8FFA8FF5227%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFF827A8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFFFFFF827F82752FFA8FFA8FFA8FFA8FFFFFFA8FFA9FF%A8FFA9FFA8FF277DFFFFA9FFA8FFA8FFA8FF277DFFFFA8FFA8FFA827F827%2727F8272727F8272727F8272727F8272727F8272727F827F8A8A8FFA8FF%FFA8FFFFFFA852F8A8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA82727FD05FF%A9FD0CFFA87D27F827F8527DFD14FF527DFD0AFF527DFD07FF2727F827F8%27F827F827F827F827F827F827F827F827F827F827F827A8FFA8FFFFA8FF%A8FFA8FF2727A8FFA8FFFFFFA8FFFFFFA8FD07FFF828A8FFA8FFA8FFA8FF%A8FD08FFA8275227522752272752FD09FFA8FFA8FFA8FFA8FFA8FF277DFF%FFA8FFA8FFA8FFA8FF277DFFFFA8FFA8FFA827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F8A8A8FFA8FFFFA8FD04FF52F87D7D%A87DA87DA87DA87DA87DA87DA87DA87D2727FD09FF7D7D527D527D527D52%7D527D527D527D527D527D527D537D527DA8FD0AFF527DFD0AFF527DFD07%FF2727F827F827F827F827F827F827F827F827F827F827F827F827F827A8%FFA8FFFFA8FFA8FFA8FF5227F827F827F827F827F827F827F827F827F827%F852A8FFA8FFA8FFA8FF5227F827F827F827F827F827F827F827F827F827%F827F827F827F827A8FFA8FFFFFFA8FFFFFF27277DA87DA87DA87DA8A87D%F87DFFFFA8FFA8FFA827F827F827F827F827F827F827F827F827F827F827%F827F827F827F8A8FFFFA8FD04FFA8FFFF52F827F827F827F827F8522727%F827F827F827F82727FFFFFFA9FFFFFFA827F827F827F827F827F827F827%F827F827F827F827F827F827F827F87DFD09FF52F827F827F827F827F827%F8277DFD07FF525227522752275227522727F827F827F827275227522752%2752277DA8FFFFFFA8A8FFA8FFA8FF5227F827F827F827F8272752F827F8%27F827F827F828A8FFA8FFA8FFFFA8F827F827F827F827F827F827F827F8%27F827F827F827F827F827F82727FFFFFFA8FFA8FFA8FF5227F827F827A8%A8F827F827F87DFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA852F827F827F8%2752FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFF52F827F827F827F8%27F827F827F827F827F827F82727FD07FF5227F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827A8FD08FF52F827F827F8A87D27%F827F8277DFD11FF2727F827F827F852A8FD09FFA8FFFFFFA8A8FFA8FFA8%FF7D27F8272727F8272727F8272727F8272727F827F87DA8FFA8FFA8FFFF%7DFD0427F8272727F8272727F8272727F8272727F8272727F827002727A8%FFFFA8FFFFFFA8FFA827F8272727F8272727F82752FFA8FFA9FFA8FFA8FF%A8FFA8FFA8FFFF7DF827F827F827F827F8277DFFA8FFA8FFA8FFA8FFA8FF%A8FFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0B%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0FFFA8%FFFFFFA8FFFFFFA8FD0FFFA9FFA87D527D527D527D527D52A8FFFFA8FFFF%FFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FD73FFA9FFFFFFA8%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%A9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA8FFFF7D27FFFFFFA8FFFFFFA9FD%0FFF52A7FD14FF5227F8527DFD25FFA9FFFFFFA8FD05FFCBFFA8FFFFFFA8%FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA852F87DA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF2727A8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFFFA8F827F827F82752FFA8FFFFFFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7D%2727F8272052A8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA9FD04FF52F8A8FD%16FF2752FD14FF7D2752FFFFA8F827A8FD2AFF52F8F8F827F8F8F82752FF%FFFFA9FFFFFFA8A8FFA8FFA8FFA8FFA8FFFF52F8A8FD06FFA8FFA8FFA8FF%A8FFA8FFA9FFA8FFFFFF2752FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFF52F8A8FFFFFF7DF852FD04FFA8FFFFFFA8FFFFFFA876FD0F527DA8%FFA8FFA8FFA8FFA8FFA827F8F827A8A8A85227F8F852FFA8FFA8FFA8FFFF%A8FFFFFFA8FD04FF7DF8A8FFFFA87D52A8FFFFA9FD0DFF7D27FFA8522727%52A8FD0FFF2727FD05FF52F8A8FD0BFF52FD11F87DFD06FFA9FFFF52F827%7DFFA84B7DFFFF52F8F87DFFFFFFA8FFFFA8FFA8FFA8FFA8FFA8A8F87DFF%7DF8272727F87DFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8277D52F852A8FF27%52FFFFA8FFFFFFA8FFFFFFA8FFA8535227277D52A8FFFF7D2727FFA8FFFF%FFA8FFFFFFA8FF27FD04F82720272027F8272727FD04F827FFA8FFA8FFA8%FFA8A8F8F852FFFF76F852FFFFFF52F827A8FFA8FFA8FFFFA8FFFFFFA9FF%FFFF5252FF4BF87DA8FFFF5227FD0FFF272727FFFFFF7D277DFD0CFF52F8%27F827F82727FFFFFF272784FD0AFF51F827F82727FD06FFA82727F827F8%52FD08FF52F827FFFFFF52F852FF52A8A827F8A8FFFFA8FFFFA8FFA8FFA8%FFA8FFFF7D272727FFFFFFA852F8A8FFFFA8FFA8FFA8FFA9FFA8FD04FF7D%F827274B27277DFFFFFFA8FFFFFFA8FD05FF5227F827F827F852FFFFFFA8%F827A8FFFFFFA8FD05FF27F82752F8F827FD04FF7DF8F8F85227F827FFFF%FFA8FFA8FFFF52F852FFFFFF7DF827F8F827FF27F852FFA8FFA8FD04FFA8%FFFFFFA8FFFF27F8522752272727A8FD10FF277DFFA8A8FD10FF52F827F8%27F82727FD04FF52F852A8FD08FF52F87DFF52F8F8F8A8FF52F8F8F87DFF%52F852FD08FF27F87DFFA8FF76F8F82727A8FF52F87DFD04FFA8A8FFA8FF%A8FFA8FFA8A8F87D7D52527D7DFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A827A8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFF5227F827F827F852%A8FFFFFFA827F827527D7DFFA8FFFFFF27F852FFFF7DF8F8F827F8F8F8A8%FFFF27F827FFA8FFA8FFA8FFFF4BF87CFFFFA8FF27277DFFFFFF27F852FF%A8FFA8FD04FFA9FD05FF7651FD18FF27FD14FF53F827F827F82727FD06FF%7DF827F852FD05FF52F876FFFFFFA82727F8F827FD04FF52F852FD08FF52%F827FD09FFA827F8A8FD04FFA8A8FFA8FFA8FFA8FFFF524BFFA8FFA8FFA8%FFA8FFA8FFFFA87DA8A1A87DA8A1A87DA87D277DA8A8A87DA8A8A87DA8A8%FD05FFA8FFFFFF5227F827F827F852FD08FF7DA8A8FFA8FFFFFF27F852FF%A8FFFFFF272752FD05FF27F827FFA8FFA9FFA8FFFFA8F8F87DFFA8FFA8FF%A8FFFF52F827A8FFA8FFA8FFFFA8FFFFFFA8FFFFFF5252FFFFA8FFFFFFA9%FFFFFFA851F827F827F827F827F827F827F827F827F827F827F827F82727%A8FD07FFA8F8277D7D2727A8FD10FF4BF87DFD0DFF52F852FD09FF52F827%A8FD06FF7DF8F87DFFFFFFA8FFFFA8FFA8FFA8FFA8FFA85227FFA8FFA8FF%A8FFA8FFFF4BFD1BF8A8FD04FFA8FFFF27F8FFFF28F8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FF27F827A8FD0B7DA827F827FFA8FFA8FFA8FFA8FFA8%27F82752A8A8FF7D4BF8F84BFFA8FFA8FFA8FFFFA8FD04FFA8FD0727FD07%FFF827F8275252525152525251FD0D5227F8F876FD07FF2727FFFF2727FD%11FF27F827F827F827F827F827F827F827F827F852FD0AFFA852F8F8F827%F827F82752FD05FFA9FFFFA8FFA8FFFFA8F8FD0627F8F8A8FFFFA8FF7DFD%04F8A827A84BA852A8517D4BA152A74BA1527D527D527DF827F852FD06FF%A827F8FFFF27F8FD11FF52F8F827F8F8F827F8F8F827F8F8F827F8F852FF%FFFFA8FFA8FFA8FFA8FFA87D2704F827F8517DFFA8FFA8FFA8FFA8FD04FF%A8FFFD0427F852F82727054BFD04FFA8F827F82776FD145227F8F852FD07%FF2752FFFF5227FD12FFFD11A8FD0FFFA8A8A8FFFFFFA8FFFFFFA8FFFFFF%A8A8FFA8FFA82720F8F82727F8F827F827A8FFA8FF7D27F8F8F8A827A727%A14B7D27A84B7D277D517D4B7D527D527DF8F8F852FFFFA8FD05FFA8FFFF%FFA8FFA8FD07FFA8FFFFFFA8FFFFFFA8FD0FFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FD06FF2752F8272752F8%FD0427FD04FFA8F827F8277D527D527D527D527D527D527D527D527D5276%527D27F82752FD4DFFA9A8FFA8FFA8FD0927F851FFFFA8FF7D27F8F8F87D%277D277D527D277D277D277D277D277D527D517DF8F8F852FD11FF7D52FD%0FFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFF27F8F805F827F805F8F851FD04%FFA8F827F827F827F827F827F827F827F827F827F827F827F827F827F8F8%52FD10FF7DF827FD14FFA8FD13FFA9FFFFFFA82752FD05FFA8FFFFFFA8FF%FFA8FFA8FFA827F805F8F8F805F8F8F852FFFFA8FF7DFD04F8A8A8CAA8A8%A8FFA8A8A8FFA8A8A8FFA8A8A8FFFF76F8F8F852FD04FFA8FD0AFF53F827%00FD05FFA8FFFFFFA8FFFFFFA8FFFFA85252F827F85252A8FFFFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8A8FFA8F827A8FF84FFA8FFA8FFA8FFA8FFFFA9%FFFFFF2727F827F827F827F82751FD05FFF827F827527D527D527D527D52%7D527D527D527D527D527D2727F8F87DFD06FFA87DFFA87DFFFF7D7DF827%F827FD0FFF7DF827F827F827F827F87DFD0EFFA852F8A8A82727FF52277D%FD05FFA9FFFFA8FFA8FFA827F827F8F8F827F8F8F852FFFFA8FFFF52FD1B%F8FD07FFF8277D52F87D5227F827F82727FD0EFF7DF827F87D7DA87D52F8%27F87DFFFFA8FFFFFFA8FFA9FFA8FFFF52F8277DA8F852FF52F8277DFFA8%FFA8FFA8FD04FFA8FF27F8F827F827F827F8F827FD06FF52F827F827F827%F827F827F827F827F827F827F827F827F82727A8FD07FF27F87D52275252%F827F827F827FD0DFF7DF82727A8FD06FF2727F884FD0BFFA8F8277DFFA8%2727FFFF52F827A8FFA8FFFFFFA8A8FFA8FFA827F8F8F805F8F8F805F852%A8FFA8FFA8FFFFFFA8FFA8CBA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FD05FFA8FFFFFFF8277D52F87D2827F827F827F8FFFFFFA8FFFFFFA8FD%05FF2727F8AFFFFFA8FFA8FFA87DF827F87DA8FFFFFFA8FFA8FFA8FF5227%27FFFFA8F827A8FFA827F8A8FFFFA8FFA8FD06FF2727F827F827F827F8F8%27FD28FF27F87D52275352F827F827F827FD0CFFA827F87DFD06FFA827F8%27F827F82752FD08FF52F87DFFFFA82727FFFFFF52277DFD05FFA9A8FFA8%FFA84BF8F8F827F8F8F827F852FFFFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FD0BFFF8277D52F87D2827F827F827F8FD0C%FF7EF8277DFFFFFFA8FFFFA8F827277D5227F82727FFFFFFA8FFFFFF2727%7DFFA8FF2753A8FFFF52F87DFFFFA8FFA8FFFFA8FFFFFF7D27F827F827F8%27F8277DFFA9FD26FF27F88452275252F827F827F827FD0AFF5228F827F8%A8FD07FFA884FFFFFFA87DF82752FD06FF52F87DFD08FF27277DFFFFFFA8%FFFFA8FFA8FFA8FF5227FD05F8277DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD05FF7D7DA8A859FF%A87D5227F82721FD05FFA8FFFFA8F827F827F82752FFA8FFFFFFA8FFFFFF%A8FFA8FFA852F827A8FFA8FFA8FF5327F8FFFFFFA8FFA8FF7D27F8A8A8FF%A8FFA8FFFFA9FD05FFA8A87DA87DA8A8FD33FF7D27F827FD08FF2727F87D%7D52F827A8FD0DFF7D27F8A8FD06FFF82752FD05FFA827F852FD04FFA9FF%FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD17FF7D27F8FD07FF7D27F87DFFFFA8%277DFD05FFA8FFFFFFA8FD04FF7DF8277DFFA9FFA8FFFF7DF827277D7DA8%5227F827A8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD33FF%A8A8FD07FF7DF827A8FD13FF2727F8FD08FF7DF827F827F827F827A8FFFF%FFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FD07FFA8FFFFFFA8FF%FFFFA8FFFFFFA8FD07FFA8FFFFFF7D27F852A8FD07FFA8FFFFFFA8FFFFFF%A8A82727F853FFFFA8FFA8FFA8FFFFA85227F827277DA8FFA8FFA8FFA8FF%A8FD04FFA9FD29FF7D5252FD1DFF5227F8275252527D5252525952525259%FD0452F827F852FD0EFFA8FD0BFFA9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D%272727F8FD1DFF5227F827F827F827F827F827F827F827F827F827F852A8%FFA8FFA8FFA8FFA8FFA8FD07FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA9FD1AFF2852FFA92752FD1DFFA87D527D527D52%7D5227F827527D527D527D7DFD0BFFA8FFFFA87D7D7DA8A8FFFFFFA8FFFF%FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FF217DFFFF7D27A8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD09FF2727F8A8%FD08FFA8FFA8FFA8FFA8FFA8FFA852F8272727F82752FFA8FFA8FFA8FFA8%FFFFA9FD2AFF277DFFFFFF277DFD22FFA8525227F82752527DFD0FFFA827%F87D27FFA852522752FD05FFA9FFFFA8FFA8FFA8FFA8FFA8FFA8FD07FFA8%FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFA8A8FFFFFFA8FF5252FFFFFF%5227FD1BFFA8FFFFFFA8FFFFFF5227F827F82727A8FD04FFA8FFFFFFA8FF%A8FFA8FFA827F85252527DA8277D212752FFA8FFA8FFA8FD04FFA8FFFFFF%A8FD05FF7D7D52A8FFFFA8FD11FF7D27A8FD04FFA8F8FFFFFF7D27FD24FF%5227F82727FD10FF7D272752272752522728522727A8FFA8FFFFFFA8A8FF%A8FFA8FFA8FFA8FFFF7DF827F827F852A8FFA8FFA8FFA8FFFFFFA8FFA8FF%A8FFA8FFA8FF2727A8FFA8FFA8277DFFFFA8F8FD05FFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF522727FFFFFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FF277D28FF52A8FFFF527EA852527DFFFF%A8FFA8FD04FFA9FD06FF7DF827277D2727F852FD08FF522821527DFD07FF%F852FD04FF5227FFFF7D27FD26FF7DFD11FFA8527D53FF527DFFFF7D7DFF%27A852FD05FFA8A8FFA8FFA8FFA8FFA8A8F82752FFFFFF7D27F8A8FFFFA8%FFFFAF2727F827F82727FFFFFFA8FFFFA8F852FD04FFF87DFFA8F8FD05FF%A8FFA8A8A8FFA8A8A8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FF%FFFFA8FFFFFFA8FFA8FFA8FFFFA827282752F8522852272752272752A8FF%A8FFA8FFFFA8FFFFFFA8FFFFFF7D2727FD05FF52277DFD05FF2827277DA8%7D272752FD06FFA8F852FFFFFF7DF8FF7D27FD06FFA827F827F82700277D%FD29FFA8527D52A8527DFFFF7D59FF527D52FFFFFFA8FFFFA8FFA8FFA8FF%A8FFA8A97DFFA8FFA8FFFF52F87DFFFFA8FF7D27F8A8FFFFFFA8F827A8FF%A8FFA8FFFFA8F852A8FFFF52F85252FFFFFFA8FFFF52F827F827F827F827%F827F87DFD04FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FF277D27FF5284FFFF52A88459527DA8FFA8FFA8%FFFFA8FFFFFFA9FD0BFF27277DFD04FF7DF852FD05FF52F8A8FD08FFF827%A8FFFF52F859FD06FF5227F827F827F827F827F82727FD26FFA827527D52%527D7D5252522752A8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8A87DA87DA87D%A85227F8FFFFFFA8FF7D2727FD057D272759FFFFFFA8FD05FF272727A827%27F827527D7DA87D27F827F827F827F8277DA87DA9FD04FFA8FFFFFFA8FF%FFFFA8FD05FFA8A8A8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFF52F827%52277D7D2752F8277DFFA8FFA8FFA8FD04FFA8FFFFFF7D27F827F827F827%F827F87DFD04FFA827F827F827F827F827F827A8FD09FF84520052A8FF7D%522727F8272727F827F827F82727FD13FFA852F827F8270052A8FD0DFFA8%FFA852F85227FF7D52272759FFFFFFA8FFFFFFA8A8FFA8FFA8FFA827F827%F827F827F827F82752FFA8FFFF7DF827F827F852F827F827F87DFFFFA8FF%A8FFA8FFA8FFFFFFA8FD05FFA8FFA852F827F827F827F827F827F87DFFFF%A8FFFFFFA8FFA8FFA8FFFFFF5227F827F827F827F82752FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA87DF8272727F8527DFFA8FFA8FFA8FFA8FD04FFA8FF%FFA8F827F82752FFA827F827F852FD04FF7D27F82721FFFFA82127F8277D%FD15FF5227F827F827F827F827F82728FD0DFF2727F8277DA8A8A87D27F8%2728FD11FFA8A87DFD07FFA8FFFFFFA8A8FFA8FFA8FFA827F827F8A8FFFF%5227F82752FFA8FFFF7DF827F852FFFFFF27F827F87DFD04FFA8FFFFFFA8%FFFFFFA8FFFFFFA8FD04FF7DF827F827F827F8527D847DFFFFFFA8FFFFFF%A8FFFFFFA8FF5227F852A8FD05FFA852F82752FFFFFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FD04FFAF2127F827%7DFFA852F827F852FFFFA8FF7D27F827F87DFF7DF827F8277DFD16FFA8FD%067DA8FD0FFFA827F827A8FD06FFAF5227F82752A8FD06FFA8FFFFFFA8FD%07FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA827F827F827A87DF827F8%272EFFA8FFFF7DF827F82721A9F827F827F884FFFFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FD09FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8F8%277DFFA8FFA8FFFFA8F827F827F827F827A8FFA8FFA8FFA8FFA8FFA8FFA8%A87DFFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FD05FF2727F827F8A85227F827%F852FD04FF7D27F827F827A827F827F8277DFD2DFF7D27F8A8FD04FFA8FF%FF52F87D7D7D2727F827A8FD09FF5227F82752FD05FFA9FFFFFFA8FFFFA8%FFA8FFA8FFA827F827F8277D52F827F82752FFA8FFFF7DF827F82727A821%27F827F8A8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7D52F827F8277DFFA8FFA82752%FFA8A8FD04FF5227F852A8FFA8FFA8FFFFA8F827F827F852A8FFFFFFA8FF%A8FFA8FFA8FD04FFA8FFFFA8F827F827F8522727F827F852FD04FF7D27F8%27F8272127F827F8277DFD29FF7D27F827F827F852FFFFA827F82753FD07%FF5227F8A8FD06FF2727F8527DA8A8FF7D7DA8FFFFFFA8FFFFFFA8A8FFA8%FFA8FFA827F827F827F827F827F82752FFA8FFFFA8F827F827F827F827F8%27F8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA827F82759A85227F8A8A827F827F82752%FFA8FFA8FFFF7DF8277DFFA8FFA8FF5927F87DA8FFFFFF7D27F852A8FFA8%FFA8FFA8FD04FFA8FFFFFF7D52FD082752FD06FFA8527D527D527D527D52%A8FD29FFA8F8277DFFFFFF52A8A827F827F827F8277DFD05FF7D27F8A8FD%05FF52F852FD04FFA852F827F87DFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFFFFFA8FFA8FD0DFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FD0FFFA8FFFFFFA8FFFFFF7D27F8A8FD06FF7DA8F827F87D84A8%FFFFA8FFA827F827A8FFA8FFA9FF272752FFA8FFFF7DF827F827F87DFFFF%A8FFA8FFFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FD0BFFA8%FFFFFFA8FFFFFFA8FD0BFFA8FFA9FFA8FFA9FFA8FD0AFFA8F82727A8FD07%FF27F8277DFD05FF7D52F8277DFFFFFFA8FFFF52F852FFFFA8FF5227F827%F8277DFFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF27F8F827F820F827F820F827A8FFA8%FFA8FFA852F827F827F827F827F827F87DFFFFA8FFA8FFA8FFFF59F827F8%27275227522752F827F827275227520027F82752FFA8FFA8FFA8FF5227F8%7DFFFFA8FF7D27F87DFFFFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFFA8FFFFFF%A9FD15FF7DFD0CF852FD06FFF852FD09A85227FD0AFF7D0027F827F827F8%27F827F827F827F827F827F8277DFD08FFA8F827277DA8FF7E52F827A8FF%A9FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFFF76F8F8277D525252765252F8F827FFA8FFA9%FFA8277DFD09FF5227A8FFA8FFFFFFA8FFA8FFFFFFFD117DA8A8FFA9FFA8%FFA8FFA8FFFF7DF827F827F827F8277DFFA8FFA8FFA8FFA8FD04FFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF52%F8F8FD08FF27F852FD06FFF87DFD09FF7D27FD1FFFA8FFFFFFA8FFFFFFA8%FFFFA82727F827F8287DFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF52F827A8FF%A8FFA8FFA8FF20F827FFA8FFA8FFA82752FFA8FFA8FFA8FFA8FF5227A8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFFFFF7D7D597EA8FFA8FFA8FFA8FFA8FFA8FD04FF%A8FFFFFFA8FFFFFFA8FD17FF52F8F8FD08FF27F852FD06FFF87DFD09FF7D%27FD33FFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF52F827A8FFA8FFA8FFA8FF26%F827FFA8FFA8FFA82753FFA8FFA8FFA8FFA8FF5227A8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFF%A8FFFFFFA9FFFD0552FD09FFA8FFFFFFA8FF52F8F8FD08FF27F852FD06FF%F87DFD09FF7D27FD11FFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FF7D5227%52A8FF7D27F827F8277DFFA8FFA87D7DFFA8FFA8FFA8FFFF76F8F87DFFA8%FFA8FFFFA8F8F827FFA8FFA8FFA827277D537D7D7D527D7D7D2128A8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA87D52767DFFA8FFA8FFA8FFA8FFA8FFFFA8FD%04FF7D5252F827F8525252F827F827F82752525228F8275259A8FD05FF52%F8F8FD0727F8F8F852FD06FF2727F827F827F827F827F82727FD29FFA9FF%7D27FD04F827FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FF2727F827F827F827%F827527D5227F827F827F827F827F8FFA8FFA8FFFF76FD0CF84BFFA8FFA8%FFA827F8272752272727522727F852A8FFA8FFA8FFA8FFA8FFA8FFA8A87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DFFA8FFA8FFA8FFA8FF76FD08%F8CAA8FFA8FFA8FFA8FD04FFA8FFFF52F827F827F827F8527EA87D7D847D%F827F827F827F827A8FFA8FFFFFF52FD04F827525227FD04F852FFFFA9FF%FFFFFD0427F827F827F852272727FFFFFFA9FFFFFFA9FD04FF52F827F827%F827F827F827F827F827F827F827F8277DFFA8FFFFFFA8FFA827F8F8F84B%27F8F8F827FFFFFFA8FFFFFFA8A8FFA8FFA8FF5227F827F827F8528427F8%27F8277D7DF827F827F827F8FFA8FFA8FFFF52F8F8F852A8FFFFFF52F8F8%F827FFA8FFA8FFA827F852F827F827F827F827F828A8FFA8FFA8FFA8FFA8%FFFFFF5227272827522727275227272752272727522727F87DFFFFA8FFA8%FFA87DF8F8F8A1FFFF4BF8F8F8A8FFA8FFA8FFA8FD04FFA8FFFF52F827F8%27F827A827F8A8A8A82727A852F827F827F827A8FD05FF52F8F852FD06FF%52F8F852FD06FF27522727F8A8A87DF827275227FD0AFFA85252F8A8FD08%FFA9FFFFFFA8FFFFFF52277DFFA9FFFFFFA8FF52F8F852FD04FFF8F8F8A8%FFFFA8FFFFFFA8A8FFA8FFA8FF5227F827F827527DF87DFFFFFFA8F8527D%27F827F827F8FFA8FFA8FFFF52F8F8A8FFA82720A8FFFFF8F827FFA8FFA8%FFA8272727F852FFFFFF28F8272727A8FFA8FFA8FFA8FFFF84F827F8277D%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF52F884FFFFA8FFA8FFFF52F8F827%FFA8FFA827F8F87DFFA8FFA8FFA8FFFFA8FFFFFFA852F827F827F87D5227%FFFFA8FFFF5227A8F827F827F827A8FFFFFFA8FF52F8F8FFFF52F8F827FF%FF27F852FD06FF2752F82752FFFFFF2727212727FD05FFA8FFFFFF7D2752%52F8A8FFFFA8FFFFFFA8FFFFFFA8FD05FF27277DFFFFFFA8FFFFFF76F8F8%F876FFFF52F8F8F8FFA8FFFFFFA8FFFFA8FFA8FFA8FF2727F827F8277D7D%F8AFA8FFA8FF27277D27F827F82700FFA8FFA8FFA876F8F8A8FF7DF8F87D%FFFFF8F827FFA8FFA8FFA8272727F8277DA85227F8272752A8FFA8FFA8FF%A8FFFF7DF85227277DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF2727F87DA8FF%A8FFA8FFA8FFFD05F827F8F8F851FFFFA8FFA8FFA8FFFFA8FD04FF52F827%F827F8527D2752FFFFFF7D277D7DF827F827F827A8FD05FF52F8F87DFFFF%A8A8FFFF7DF8F852FD06FFFD0427F827F827F8FD0427FD09FF7D27F827F8%A8FD0EFF5227F8277DFFFFFFA8FD04FF7DFD07F827A8FFA8FFFFFFA8FFFF%A8FFA8FFA8FF5227F827F827F8A85227277D522727A82727F827F82727FF%A8FFA8FFFF76F8F8F8A8FD04FFA8F8F8F84BFFA8FFA8FFA827F8522727F8%27F8272727F852A8FFA8FFA8FFA8FFA8FF7D7D27277DFFA8FFA8FFA8FFA8%FFA8FFA8FF2E27F827F87DFFFFA8FFA8FFA8FFA827FD06F827FFA8FFA8FF%A8FFA8FD04FFA8FFFF52F8532727F82727A87D27F82752A85227F827F827%F827A8FFA8FFFFFF52FD04F8527D7D5227F8F8F852FFFFA8FFFFFF2727F8%27275227522727F82727FFFFFFA8FFFFFFA8FD04FF52F8FD0D522727F827%F8277DFFA8FFFFFFA8FFFFFF52FD06F8A8FD04FFA8FFFFFFA8A8FFA8FFA8%FF52272727F827F827F87D7DA87D7D2727F827F827F827F8FFA8FFA8FFFF%76FD0CF827FFA8FFA8FFA827F827F827F8272727F827F827A8FFA8FFA8FF%A8FFA8FFA8FF2727F827F827F827F827F827F827F827F827F827F87DFFFF%A8FFA8FFA8FFA8FFFD05F851FFFFA8FFA8FFA8FFA8FD04FFA8FFFF52F827%F827F827F827F8272727F827F827F827F827F827A8FFA8FFFFFFA827F8F8%F827F8F8F827F8F8F8A8FD06FF52FD0B277DFD0DFFFD0EA884A8A8A884A8%A8FFA8FFFFFFA8FD04FF7DF8F8F827A8FFA8FFFFFFA8FFFFFFA8A8FFA8FF%A8FFA8A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DFFA8FFA8FF%A8FFA8A87DA87DA87DA87DA87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA827F8F827FFA8FFA8FFA8FF%A8FFA8FFFFA8FFFFFFA8FD17FFA8FFFFFFA8FD0FFFA8FFFFFFA8FD0FFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFF52F8F8A8FD04FFA8FFFFFFA8FFFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFF852A8FFA8FFA8FFA8%FFA8FFA8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFA9FD1BFFA9FF%FFFFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FD07FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Calcando) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Plugin de envolventes de Adobe) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Plugin Pintura interactiva de Adobe) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Plugin Fusiones de Adobe) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\227n de Adobe) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\227n de Adobe) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Plugin Pincel caligr\207fico de Adobe) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (S\222mbolos de Adobe) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Forma compuesta de Adobe) (PathFinderS.aip)%AI5_End_NonPrinting--1 Bn%AI5_BeginGradient: (Unnamed gradient 12)(Unnamed gradient 12) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6>0 %_Br[0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 Bs0 0 0 0.1 1 50 100 %_BS%_0 0 0 0.1 1 50 100 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-2334.5 6302.9351 m-2120.8999 6302.9351 L-2120.8999 6295.1343 L-2334.5 6295.1343 L-2334.5 6302.9351 Ln0 O0 0 0 1 k-2334.5 6299.0352 m-2324.4856 6301.5269 -2317.6863 6302.8755 -2305.7007 6302.9351 c-2292.7185 6303 -2227.6997 6302.9351 y-2162.6816 6303 -2149.6997 6302.9351 v-2137.7124 6302.8755 -2130.9136 6301.5269 -2120.8999 6299.0352 C-2130.9136 6296.5435 -2137.7124 6295.1948 -2149.6997 6295.1343 c-2162.6816 6295.0688 -2227.6997 6295.1343 y-2292.7185 6295.0688 -2305.7007 6295.1343 v-2317.6863 6295.1948 -2324.4856 6296.5435 -2334.5 6299.0352 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6109.2451 10175.5 L-6109.2451 10154.7842 L-6207 10154.7842 L-6207 10175.5 Ln0 O0 g1 XR-6109.5586 10170.8184 m-6124.8247 10157.0303 -6142.5537 10177.9492 -6157.9277 10165.666 C-6156.4199 10160.0137 -6150.7598 10166.9678 -6148.5176 10162.3213 C-6148.4341 10160.7207 -6151.6313 10162.2207 -6151.5127 10160.1006 C-6149.6245 10156.6914 -6144.8955 10157.1885 -6143.5664 10161.2373 C-6137.3115 10159.2676 -6130.7734 10153.3242 -6124.7847 10155.1172 C-6123.2671 10156.4678 -6124.0708 10157.6514 -6123.6211 10158.9277 C-6116.2871 10154.4922 -6107.4644 10163.6279 -6109.5586 10170.8184 Cf-6153.2842 10172.4326 m-6153.8247 10172.8086 -6152.9277 10173.9199 -6153.2529 10174.4082 C-6155.3237 10173.6563 -6157.6919 10169.5781 -6159.4731 10166.8105 C-6159.2632 10168.3398 -6160.6641 10169.6641 -6162.0781 10167.4326 C-6162.2383 10166.6152 -6161.3667 10166.3281 -6161.6729 10165.4365 C-6162.8306 10163.8682 -6163.8472 10165.3535 -6164.7798 10165.125 C-6165.3184 10164.3613 -6165.6143 10163.7188 -6165.6816 10163.1943 C-6159.5537 10160.374 -6152.9263 10172.1768 -6146.7456 10172.6025 C-6146.9048 10175.6152 -6150.8555 10177.3008 -6153.2842 10172.4326 Cfuu0 XR-6150.1602 10167.1602 m-6165.0142 10160.6201 -6186.4731 10164.8418 -6202.3687 10164.8193 c-6208.2988 10164.8125 -6197.8965 10164.8213 -6203.8267 10164.8262 cN0 O0 g-6147.8052 10165.9395 m-6165.1475 10158.7637 -6184.9341 10163.5557 -6203.0532 10163.4863 C-6203.8608 10164.373 -6204.6685 10165.2617 -6205.4751 10166.1475 C-6204.6973 10166.1475 -6203.9194 10166.1465 -6203.1421 10166.1533 C-6202.3345 10165.2656 -6201.5273 10164.3789 -6200.7202 10163.4922 C-6201.3516 10163.5029 -6201.9844 10163.4951 -6202.6157 10163.4951 c-6204.3735 10163.498 -6208.9165 10166.1621 -6205.0376 10166.1572 c-6204.4063 10166.1572 -6203.7734 10166.1641 -6203.1421 10166.1533 c-6201.4155 10166.1279 -6196.8184 10163.5234 -6200.7202 10163.4922 c-6201.4976 10163.4834 -6202.2759 10163.4863 -6203.0532 10163.4863 c-6204.8081 10163.4854 -6209.3574 10166.1328 -6205.4751 10166.1475 c-6188.1177 10166.2148 -6169.1025 10161.5137 -6152.5151 10168.3789 c-6151.1035 10168.9639 -6145.8081 10166.7666 -6147.8052 10165.9395 c-6147.8052 10165.9395 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 158)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6195.0078 10175.5 L-6195.0078 10164.8633 L-6207 10164.8633 L-6207 10175.5 Ln-6206.3218 10164.8633 m-6206.3218 10168.8125 L-6206.3218 10169.8477 L-6206.3218 10170.4863 L-6206.3218 10171.5859 L-6206.3218 10175.5 L-6195.6865 10175.5 L-6195.6865 10171.5859 L-6195.6865 10170.4863 L-6195.6865 10169.8477 L-6195.6865 10168.8125 L-6195.6865 10164.8633 L-6206.3218 10164.8633 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-6195.0078 10171.5859 m-6195.0078 10170.9395 L-6207 10170.9414 L-6207 10171.5859 L-6207 10171.6504 L-6195.0078 10171.6494 L-6195.0078 10171.5859 Lf-6195.0078 10168.8125 m-6207 10168.8125 L-6207 10169.5215 L-6195.0078 10169.5215 L-6195.0078 10168.8125 Lf0.15 1 0.9 0.1 k-6195.0078 10170.5518 m-6207 10170.5518 L-6207 10170.9414 L-6195.0078 10170.9395 L-6195.0078 10170.5518 Lf-6195.0078 10169.8477 m-6195.0078 10169.5215 L-6207 10169.5215 L-6207 10169.8477 L-6207 10169.9121 L-6195.0078 10169.9121 L-6195.0078 10169.8477 Lf0 1 1 0 k-6195.0078 10170.4863 m-6195.0078 10169.9121 L-6207 10169.9121 L-6207 10170.4863 L-6207 10170.5518 L-6195.0078 10170.5518 L-6195.0078 10170.4863 LfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 160)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10174.3047 m-6196.3638 10174.3047 L-6196.3638 10163.6689 L-6207 10163.6689 L-6207 10174.3047 Ln-6207 10163.6689 m-6207 10167.5586 L-6207 10168.2686 L-6207 10168.6514 L-6207 10169.2939 L-6207 10169.6816 L-6207 10170.3906 L-6207 10174.3047 L-6196.3638 10174.3047 L-6196.3638 10163.6689 L-6207 10163.6689 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-6200.9585 10175.5 m-6200.2515 10175.5 L-6200.2607 10170.4561 L-6194.5229 10170.4551 L-6194.5229 10169.7441 L-6200.9707 10169.7471 L-6200.9585 10175.5 Lf-6202.6055 10168.0342 m-6202.8696 10168.2969 -6203.0215 10168.6631 -6203.0215 10169.0361 C-6203.0073 10175.5 L-6202.2979 10175.5 L-6202.3125 10169.0361 L-6202.3125 10168.8496 -6202.2363 10168.6689 -6202.1045 10168.5352 c-6201.9717 10168.4033 -6201.7891 10168.3281 -6201.6021 10168.3281 C-6194.5229 10168.3281 L-6194.5229 10167.6182 L-6201.6021 10167.6182 L-6201.9761 10167.6182 -6202.3418 10167.7695 -6202.6055 10168.0342 cf0.15 1 0.9 0.1 k-6201.2827 10175.5 m-6200.9585 10175.5 L-6200.9707 10169.7471 L-6194.5229 10169.7441 L-6194.5229 10169.3555 L-6201.2827 10169.3555 L-6201.2827 10175.5 Lf-6202.1045 10168.5352 m-6202.2363 10168.6689 -6202.3125 10168.8496 -6202.3125 10169.0361 C-6202.2979 10175.5 L-6201.9219 10175.5 L-6201.9219 10169.0361 L-6201.9219 10168.9521 -6201.8877 10168.8711 -6201.8281 10168.8105 c-6201.7695 10168.7529 -6201.6865 10168.7188 -6201.6025 10168.7188 C-6194.5229 10168.7188 L-6194.5229 10168.3281 L-6201.6021 10168.3281 L-6201.7891 10168.3281 -6201.9717 10168.4033 -6202.1045 10168.5352 cf0 1 1 0 k-6201.8281 10168.8105 m-6201.8877 10168.8711 -6201.9219 10168.9521 -6201.9219 10169.0361 C-6201.9219 10175.5 L-6201.2827 10175.5 L-6201.2827 10169.3555 L-6194.5229 10169.3555 L-6194.5229 10168.7188 L-6201.6025 10168.7188 L-6201.6865 10168.7188 -6201.7695 10168.7529 -6201.8281 10168.8105 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 161)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6195.0078 10175.5 L-6195.0078 10164.8633 L-6207 10164.8633 L-6207 10175.5 Ln-6206.0117 10164.8633 m-6206.0117 10168.8125 L-6206.0117 10169.8477 L-6206.0117 10170.4863 L-6206.0117 10171.5859 L-6206.0117 10175.5 L-6195.3765 10175.5 L-6195.3765 10171.5859 L-6195.3765 10170.4863 L-6195.3765 10169.8477 L-6195.3765 10168.8125 L-6195.3765 10164.8633 L-6206.0117 10164.8633 Ln0 O0.15 1 0.9 0.1 k-6195.0078 10170.5518 m-6207 10170.5518 L-6207 10170.9414 L-6195.0078 10170.9395 L-6195.0078 10170.5518 Lf-6195.0078 10169.8477 m-6195.0078 10169.5215 L-6207 10169.5215 L-6207 10169.8477 L-6207 10169.9121 L-6195.0078 10169.9121 L-6195.0078 10169.8477 Lf0 1 1 0 k-6195.0078 10170.4863 m-6195.0078 10169.9121 L-6207 10169.9121 L-6207 10170.4863 L-6207 10170.5518 L-6195.0078 10170.5518 L-6195.0078 10170.4863 Lf1 Ap0.746094 0.675781 0.667969 0.898438 k-6205.2715 10171.6504 m-6207 10171.6504 L-6207 10168.8125 L-6205.2715 10168.8125 L-6205.2715 10171.6504 Lf0.15 1 0.9 0.1 k-6204.5967 10171.6338 m-6205.4492 10171.6338 L-6205.4492 10168.7969 L-6204.5967 10168.7969 L-6204.5967 10171.6338 Lf0 Ap0.746094 0.675781 0.667969 0.898438 k-6195.0078 10171.5859 m-6195.0078 10170.9395 L-6207 10170.9414 L-6207 10171.5859 L-6207 10171.6504 L-6195.0078 10171.6494 L-6195.0078 10171.5859 Lf-6195.0078 10168.8125 m-6207 10168.8125 L-6207 10169.5215 L-6195.0078 10169.5215 L-6195.0078 10168.8125 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 162)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6207 10175.5 m-6195.6099 10175.5 L-6195.6099 10164.8633 L-6207 10164.8633 L-6207 10175.5 Ln-6206.2461 10171.5859 m-6206.2461 10175.5 L-6195.6099 10175.5 L-6195.6099 10164.8633 L-6206.2461 10164.8633 L-6206.2461 10168.7549 L-6206.2461 10171.5859 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-6200.6245 10171.5215 m-6200.6245 10170.8779 L-6207 10170.8779 L-6207 10171.5215 L-6207 10171.5859 L-6200.6245 10171.5859 L-6200.6245 10171.5215 Lf-6200.6245 10168.748 m-6207 10168.748 L-6207 10169.458 L-6200.6245 10169.458 L-6200.6245 10168.748 Lf0.15 1 0.9 0.1 k-6200.6245 10170.4863 m-6207 10170.4863 L-6207 10170.8779 L-6200.6245 10170.8779 L-6200.6245 10170.4863 Lf-6200.6245 10169.7832 m-6200.6245 10169.458 L-6207 10169.458 L-6207 10169.7832 L-6207 10169.8486 L-6200.6245 10169.8486 L-6200.6245 10169.7832 Lf0 1 1 0 k-6200.6245 10170.4209 m-6200.6245 10169.8486 L-6207 10169.8486 L-6207 10170.4209 L-6207 10170.4863 L-6200.6245 10170.4863 L-6200.6245 10170.4209 LfU-6206.2461 10175.5 m-6195.6099 10175.5 L-6195.6099 10164.8633 L-6206.2461 10164.8633 L-6206.2461 10175.5 Ln-6195.7241 10170.1816 m-6203.8125 10174.8516 LN0 O0.746094 0.675781 0.667969 0.898438 k-6203.4814 10169.46 m-6203.4814 10166.6406 L-6197.3535 10170.1777 L-6203.4814 10173.7158 L-6203.4814 10170.8779 L-6203.8125 10170.8779 L-6203.8125 10171.5859 L-6203.8125 10174.8516 L-6195.7241 10170.1816 L-6203.8125 10165.5127 L-6203.8125 10168.7529 L-6203.8125 10169.46 L-6203.4814 10169.46 Lf0.15 1 0.9 0.1 k-6203.4814 10173.7158 m-6197.3535 10170.1777 L-6203.4814 10166.6406 L-6203.4814 10169.46 L-6203.4814 10169.8477 L-6203.3472 10169.8477 L-6203.2148 10169.4756 -6202.8633 10169.207 -6202.4453 10169.207 c-6201.9155 10169.207 -6201.4849 10169.6367 -6201.4849 10170.1689 c-6201.4849 10170.6973 -6201.9155 10171.1279 -6202.4453 10171.1279 c-6202.8633 10171.1279 -6203.2148 10170.8594 -6203.3472 10170.4863 C-6203.4814 10170.4863 L-6203.4814 10170.8779 L-6203.4814 10173.7158 Lf0 1 1 0 k-6202.4453 10171.1279 m-6201.9155 10171.1279 -6201.4849 10170.6973 -6201.4849 10170.1689 c-6201.4849 10169.6367 -6201.9155 10169.207 -6202.4453 10169.207 c-6202.8633 10169.207 -6203.2148 10169.4756 -6203.3472 10169.8477 c-6203.3828 10169.9473 -6203.4058 10170.0537 -6203.4058 10170.1689 c-6203.4058 10170.2793 -6203.3828 10170.3848 -6203.3472 10170.4863 c-6203.2148 10170.8594 -6202.8633 10171.1279 -6202.4453 10171.1279 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6206.8833 10175.4551 m-6115.0479 10175.4551 L-6115.0479 10171.1758 L-6206.8833 10171.1758 L-6206.8833 10175.4551 Ln0 O0 0 0 1 k-6206.6631 10172.7754 m-6207 10172.8418 -6206.4814 10173.0313 -6206.8833 10172.8887 C-6206.8379 10172.7705 -6206.7725 10172.6816 -6206.6631 10172.7754 Cf-6116.1675 10172.9414 m-6117.2524 10173.7041 -6118.6816 10172.9336 -6119.8701 10173.4199 C-6120.0098 10173.4521 -6119.8345 10173.0029 -6120.1484 10173.1025 C-6121.3008 10173.6953 -6123.1162 10173.3418 -6124.5195 10172.8848 C-6124.4346 10172.7666 L-6124.7017 10172.6816 -6125.0283 10173.0723 -6125.3115 10173.0176 C-6125.3135 10172.9395 -6125.2207 10172.9063 -6125.2861 10172.7988 C-6125.3574 10173.0352 -6125.7983 10172.9082 -6125.9185 10173.0859 C-6126.0303 10172.9922 -6126.0195 10172.8047 -6126.1641 10172.7012 C-6126.3262 10172.9697 L-6126.7769 10173.6094 -6127.4209 10172.9258 -6128.0361 10173.2559 C-6128.0063 10173.1934 -6127.9453 10173.1445 -6127.9941 10173.0859 C-6128.9814 10173.4727 -6130.2168 10173.4004 -6131.3208 10173.5439 C-6131.2769 10173.4482 -6131.2363 10173.2754 -6131.3008 10173.1689 C-6131.3555 10173.4512 -6131.6963 10173.5225 -6131.9922 10173.5781 C-6132.1255 10173.2871 -6132.4995 10173.8438 -6132.8467 10173.6836 C-6132.8169 10173.6191 L-6133.0732 10173.9238 -6133.1973 10173.4434 -6133.4053 10173.8086 C-6133.5684 10173.5801 L-6133.6807 10173.9902 -6133.9395 10173.3672 -6134.1514 10173.5762 C-6134.1445 10173.6602 L-6134.3442 10173.7598 -6134.4482 10173.5537 -6134.6338 10173.623 C-6134.6514 10173.5762 L-6135.0854 10173.6836 -6135.3379 10173.4551 -6135.3271 10173.7754 C-6135.4795 10173.5186 -6134.9063 10173.6582 -6135.1455 10173.2852 C-6136.5732 10173.6152 -6138.0459 10173.5508 -6139.4834 10173.5566 C-6139.6465 10173.4277 -6139.7505 10173.3887 -6139.7871 10173.2676 C-6139.9307 10173.332 -6140.3281 10173.3262 -6140.4585 10173.4902 C-6140.4102 10173.4834 -6140.5513 10173.3262 -6140.6274 10173.3105 C-6140.8887 10173.1895 -6140.9131 10173.6621 -6141.2002 10173.5186 C-6141.0859 10173.4336 -6141.0469 10173.3301 -6141.0854 10173.2109 C-6141.3301 10173.4609 -6141.6577 10173.4209 -6141.9473 10173.5029 C-6141.9023 10173.4482 -6141.8325 10173.416 -6141.8433 10173.3154 C-6142.1602 10173.5986 -6142.4209 10173.2559 -6142.6982 10173.4346 C-6142.5947 10173.25 L-6143.0415 10173.0254 -6142.7266 10173.6367 -6143.1128 10173.5039 C-6143.02 10173.4453 -6143.0527 10173.373 -6143.0361 10173.2979 C-6143.3965 10173.6338 -6143.9795 10173.5225 -6144.3389 10173.6367 C-6144.3174 10173.6113 -6144.3232 10173.5605 Y-6144.7148 10173.6025 -6145.1245 10173.498 -6145.5552 10173.6445 C-6145.7119 10173.5625 -6145.5039 10173.1934 -6145.9185 10173.2617 C-6145.9033 10173.6328 -6146.6221 10173.4141 -6146.3779 10173.8359 C-6146.7319 10173.7734 -6147.2925 10173.6338 -6147.5283 10173.7598 C-6147.3691 10173.6191 -6147.7007 10173.3066 -6147.4063 10173.2754 C-6147.6289 10173.0498 L-6147.5957 10172.8984 -6147.3999 10173.1016 -6147.4707 10172.9102 C-6147.6182 10172.9258 -6148.0479 10173.0723 -6148.1797 10173.0117 C-6148.4531 10173.2393 -6148.7041 10173.6641 -6149.1465 10173.7109 C-6148.9385 10173.5664 -6149.2646 10173.3018 -6149.1235 10173.2383 C-6149.7407 10173.9492 L-6149.8877 10173.9668 -6149.7725 10173.6563 -6149.9854 10173.7529 C-6149.9746 10173.8516 -6150.0674 10173.9121 -6150.1318 10173.9922 C-6150.1875 10173.9492 -6150.7441 10174.0859 -6150.8081 10173.7188 C-6150.8735 10173.5762 -6150.5684 10173.6426 -6150.7314 10173.5117 C-6151.0029 10173.5156 -6151.0151 10173.6406 -6151.2871 10173.6465 C-6151.2925 10173.5977 L-6151.4717 10173.5439 -6151.8213 10173.7529 -6151.6265 10173.9551 C-6151.5015 10173.9668 -6151.6738 10173.7354 -6151.4888 10173.8418 C-6151.6152 10174.0537 -6151.9312 10174.1133 -6152.2031 10174.1172 C-6152.1104 10174.0586 -6152.1216 10173.9609 -6152.0845 10173.8574 C-6152.4497 10174.1445 -6152.8369 10174.2354 -6153.2451 10174.3555 C-6153.2515 10174.5293 -6153.0928 10174.0391 -6153.0327 10174.1309 C-6153.5557 10173.8896 -6154.1128 10174.4727 -6154.5479 10174.1201 C-6154.4766 10174.0898 -6154.5098 10174.3672 -6154.5146 10174.3184 C-6154.7666 10174.2969 -6154.7549 10174.0449 -6154.9189 10174.1377 C-6154.9355 10173.9902 -6155.1255 10174.1855 -6155.2944 10174.2305 C-6155.3818 10174.3369 -6155.3384 10174.1582 -6155.1914 10174.1426 C-6155.4268 10174.2676 -6156.3691 10174.4941 -6156.9131 10174.2793 C-6156.9023 10174.3779 -6157.2471 10174.6377 -6157.3721 10174.6279 C-6157.3232 10174.3984 L-6157.4375 10174.2617 -6157.7422 10174.4189 -6157.7632 10174.2227 C-6158.0303 10174.5 -6156.7344 10173.9863 -6157.0957 10174.2002 C-6157.1895 10174.0098 -6157.5991 10174.5645 -6157.5215 10174.2529 C-6157.7725 10174.2617 -6158.0161 10174.5186 -6158.2559 10174.3047 C-6158.1865 10174.3418 -6158.0522 10173.9873 -6158.2549 10174.0039 C-6158.6123 10174.0449 -6158.3564 10174.1133 -6158.6465 10174.1895 C-6158.8281 10174.2832 L-6158.8398 10174.5059 -6159.1475 10174.2529 -6159.0146 10174.5029 C-6159.0586 10174.3184 -6159.5337 10174.6152 -6159.4971 10174.2461 C-6159.4473 10173.9551 L-6159.6016 10173.9766 -6159.7002 10174.2617 -6159.8213 10174.3896 C-6159.8418 10174.3633 -6159.8823 10174.3047 -6159.8745 10174.2578 C-6159.8994 10174.7031 -6160.2432 10174.2207 -6160.4268 10174.5645 C-6160.7505 10174.4102 -6161.2495 10174.5508 -6161.4023 10174.2734 C-6161.6514 10174.4082 -6161.8784 10174.5684 -6162.1621 10174.4727 C-6162.1055 10174.4307 -6162.0283 10174.4189 -6162.0122 10174.3223 C-6162.1904 10174.1914 -6162.2344 10174.3086 -6162.3975 10174.3809 C-6162.3608 10174.3145 -6162.7539 10174.1201 -6162.9521 10173.9629 C-6163.1992 10174.0957 -6163.1143 10174.3359 -6163.1392 10174.4824 C-6163.3652 10174.0439 -6163.8379 10174.7656 -6164.1211 10174.3672 C-6164.0352 10174.3066 -6163.7598 10174.1514 -6163.9658 10174.041 C-6164.1919 10173.6025 -6164.4219 10174.3652 -6164.7861 10174.1543 C-6164.6968 10174.5186 L-6164.8594 10174.2939 -6165.2334 10174.7305 -6165.1963 10174.3594 C-6165.3184 10174.4902 -6165.6265 10174.2383 -6165.5859 10174.5938 C-6166.1846 10174.2939 -6167.0425 10174.7754 -6167.4102 10174.1377 C-6167.4961 10174.1973 -6167.7104 10174.1367 -6167.6665 10174.3193 C-6167.5239 10174.5176 -6167.4673 10174.1777 -6167.4141 10174.3125 C-6167.4912 10174.3232 -6167.5078 10174.4209 -6167.5161 10174.4697 C-6167.7021 10174.3887 -6167.8486 10174.3633 -6167.6729 10174.0674 C-6168.0869 10173.8477 -6168.1001 10174.6719 -6168.6274 10174.5332 C-6168.6035 10174.3857 -6168.6436 10174.3301 -6168.7979 10174.3535 C-6169.0903 10174.6055 L-6169.4312 10174.5469 -6169.2842 10174.2705 -6169.2925 10174.0215 C-6169.4746 10174.0645 -6169.6973 10174.0527 -6169.7803 10174.2383 C-6170.0015 10173.9258 L-6169.8398 10174.1514 -6170.1514 10174.0762 -6170.2368 10174.1367 C-6170.1514 10174.0762 L-6170.1846 10173.9697 -6170.3955 10174.0352 -6170.5024 10174.0664 C-6170.4766 10174.2207 -6170.2617 10174.2832 -6170.1445 10174.3281 C-6170.2373 10174.4375 -6170.3823 10174.4121 -6170.5059 10174.541 C-6170.4648 10174.2969 -6170.8027 10174.3672 -6170.9473 10174.3418 C-6171.1133 10174.2891 -6171.1348 10174.5605 -6171.1831 10174.5527 C-6171.1875 10174.4258 -6171.4541 10174.5313 -6171.3247 10174.3535 C-6171.2681 10174.3125 -6171.1953 10174.4766 -6171.1016 10174.3652 C-6171.2109 10174.2705 -6171.1982 10174.0498 -6171.4258 10174.2109 C-6171.5967 10174.332 -6171.3818 10174.6934 -6171.7061 10174.5391 C-6171.6211 10174.4785 -6171.6055 10174.3809 -6171.5391 10174.2939 C-6171.8433 10174.166 L-6171.8564 10174.3887 L-6171.8975 10174.332 -6171.8691 10174.3125 -6171.8877 10174.2832 C-6171.9785 10174.5176 -6172.3521 10174.3555 -6172.4209 10174.6191 C-6172.5742 10174.6426 -6172.7441 10174.4648 -6172.8906 10174.4395 C-6172.8623 10174.4199 L-6173.0415 10174.2891 -6173.2793 10174.375 -6173.4297 10174.5254 C-6173.4219 10174.4766 L-6173.5195 10174.46 -6173.7505 10174.4941 -6173.8735 10174.625 C-6174.1201 10174.457 -6173.9561 10173.7842 -6174.2295 10174.0645 C-6174.48 10174.0723 -6174.6221 10174.4727 -6174.5215 10174.6152 C-6174.9717 10174.4648 -6175.4834 10174.8281 -6175.9009 10174.4824 C-6175.9658 10174.5723 -6175.9248 10174.6289 -6176.0586 10174.6816 C-6176.7197 10174.5938 -6177.4551 10174.9453 -6177.9814 10174.5078 C-6177.79 10174.4141 -6177.9688 10174.2852 -6177.9727 10174.1582 C-6178.1309 10174.3574 -6178.1631 10173.9512 -6178.2197 10174.2939 C-6178.2041 10174.4941 -6178.2197 10174.5918 -6178.0337 10174.6729 C-6178.4282 10174.7813 -6179.0283 10174.7813 -6179.2471 10174.5938 C-6179.1377 10174.6865 -6179.2227 10174.748 -6179.3086 10174.8086 C-6179.2803 10174.4873 -6179.5713 10174.4395 -6179.7915 10174.5527 C-6179.8223 10174.748 L-6179.9658 10174.5469 L-6180.0503 10174.6094 -6180.0591 10174.957 -6180.2773 10174.7695 C-6180.2891 10174.6934 -6180.3018 10174.6162 -6180.3418 10174.5605 C-6180.5693 10174.7207 -6180.8906 10174.9922 -6181.1377 10174.8262 C-6181.3398 10174.541 L-6181.4453 10174.5723 -6181.6235 10174.7441 -6181.4375 10174.8262 C-6181.8594 10174.6543 -6182.1309 10174.6328 -6182.2646 10174.3857 C-6182.9912 10174.9873 -6184.0459 10175.0117 -6184.8906 10174.9688 C-6184.8652 10174.8223 L-6185.0923 10174.6855 -6184.9834 10175.0781 -6185.1416 10174.9766 C-6185.0684 10174.8369 -6185.3145 10174.6729 -6185.1362 10174.5029 C-6185.4609 10174.3477 -6185.5547 10174.7559 -6185.7656 10174.8223 C-6185.7979 10175.0146 -6185.5957 10174.6992 -6185.6367 10174.9434 C-6185.6729 10175.0117 -6186.0859 10174.7939 -6186.1362 10175.0859 C-6186.2178 10174.9697 -6186.1543 10174.7559 -6186.1104 10174.6377 C-6186.3086 10174.7793 L-6186.5513 10174.4395 -6185.7559 10174.1719 -6186.0107 10173.7529 C-6186.1934 10173.7988 L-6186.3682 10173.4941 -6185.71 10173.4551 -6186.1689 10173.3506 C-6186.3682 10173.4941 -6186.5381 10173.916 -6186.3608 10174.0449 C-6186.7754 10174.125 -6186.5527 10174.7383 -6186.9985 10174.7139 C-6187.1201 10174.5439 -6186.6416 10174.6729 -6186.7275 10174.4336 C-6186.9375 10174.1992 -6187.1484 10174.5645 -6187.3354 10174.4824 C-6187.1279 10174.5918 -6187.3032 10174.8857 -6187.4375 10174.9395 C-6187.6641 10174.8018 -6187.29 10174.6641 -6187.6113 10174.6338 C-6187.6641 10174.8018 -6187.9595 10174.9277 -6187.7041 10175.0449 C-6187.8203 10175.4258 -6188.0381 10174.9395 -6188.2129 10175.2344 C-6188.3174 10174.9668 -6187.8823 10174.6152 -6188.2354 10174.4814 C-6188.1792 10174.7393 -6188.6704 10174.832 -6188.4839 10175.2148 C-6188.6221 10175.1406 -6188.6367 10174.9375 -6188.5361 10174.7793 C-6188.7334 10174.6201 -6189.0151 10175.25 -6189.0801 10174.7383 C-6189.1479 10175.0029 L-6189.21 10174.916 -6189.2983 10174.8516 -6189.3994 10174.71 C-6189.5732 10174.7041 -6189.96 10175.0664 -6189.9443 10174.6689 C-6190 10174.71 -6190.3975 10174.6914 -6190.2441 10174.9668 C-6189.9971 10175.1348 -6189.96 10174.7656 -6189.8223 10175.1377 C-6189.9971 10174.8359 -6190.1787 10175.1777 -6190.3213 10175.2793 C-6190.3447 10175.125 L-6190.4297 10175.1855 -6190.6255 10175.1514 -6190.6787 10175.3184 C-6190.6133 10175.2305 -6190.6475 10175.125 -6190.7148 10175.0879 C-6190.8042 10175.3223 L-6191.1494 10175.4395 -6190.8857 10174.9102 -6191.2217 10174.9785 C-6190.9663 10174.7969 L-6191.0225 10174.8359 -6191.1367 10174.6162 -6191.2979 10174.6895 C-6191.3604 10174.9033 -6191.4775 10175.1602 -6191.5313 10175.3262 C-6191.7207 10175.4199 -6191.6162 10175.0859 -6191.8027 10175.3047 C-6191.5586 10175.0469 L-6191.5215 10174.9766 -6191.7231 10174.6934 -6191.9761 10174.6992 C-6192.1377 10174.7734 -6192.3887 10175.082 -6192.1338 10175.1992 C-6192.2607 10175.2031 -6192.4385 10175.0723 -6192.3379 10174.916 C-6192.6255 10174.9902 -6192.2998 10175.1465 -6192.5479 10175.2793 C-6192.6494 10175.1367 -6192.9658 10174.9336 -6193.1563 10174.7266 C-6192.8975 10174.3682 L-6193.0693 10174.3652 L-6192.8467 10174.0781 -6193.1826 10174.1465 -6193.0566 10173.8438 C-6193.1743 10173.7969 -6193.3169 10173.8994 -6193.4307 10173.9785 C-6193.0864 10174.4629 -6193.8159 10174.6406 -6193.7158 10175.082 C-6194.1875 10175.2031 -6194.0107 10174.0078 -6194.5024 10174.6992 C-6194.4219 10174.8145 -6194.6533 10175.1504 -6194.3564 10175.0225 C-6194.6494 10174.9746 -6194.5557 10175.4658 -6194.9014 10175.2832 C-6194.6455 10175.1016 -6195.1763 10174.8359 -6194.8066 10174.5723 C-6194.8311 10174.7188 -6194.6001 10174.6836 -6194.5435 10174.6426 C-6194.6641 10174.4727 -6194.5186 10174.1973 -6194.8184 10174.1973 C-6195.0015 10174.2393 -6195.2524 10174.248 -6195.2158 10174.4785 C-6195.2085 10174.7314 -6194.9365 10174.4512 -6195.0537 10174.707 C-6195.4185 10174.7949 -6195.4795 10174.4102 -6195.6304 10174.8594 C-6195.3999 10174.8232 -6195.3423 10175.0859 -6195.3467 10175.2578 C-6195.6143 10175.3633 L-6195.5625 10175.1953 L-6195.9922 10175.0742 -6195.6895 10175.5 -6196.1055 10175.4551 C-6196.3008 10175.123 L-6196.2017 10174.8369 -6195.6953 10175.25 -6195.7695 10174.7842 C-6196.04 10174.7656 -6196.1299 10175.0029 -6196.3848 10174.8818 C-6196.3281 10174.8418 -6196.2505 10174.8301 -6196.1943 10174.7891 C-6196.2915 10174.7734 -6196.3877 10174.1563 -6196.7734 10174.5176 C-6196.9727 10174.6582 -6196.8262 10174.6836 -6196.8311 10174.8574 C-6197.2656 10174.9102 -6197.3955 10175.0879 -6197.6753 10175.1152 C-6197.6177 10174.7754 -6198.1699 10175.082 -6197.8608 10174.7344 C-6197.7188 10174.9336 -6197.0903 10174.9141 -6196.9365 10174.5898 C-6197.0947 10174.1865 -6196.5952 10174.6465 -6196.5024 10174.2383 C-6196.8506 10174.2285 -6196.8335 10173.832 -6196.8896 10173.5723 C-6196.9863 10173.5537 -6197.0801 10173.6641 -6197.1377 10173.7041 C-6197.1787 10173.9492 -6197.0522 10173.9453 -6197.0449 10174.1973 C-6197.4336 10174.1309 -6197.8081 10174.2676 -6198.0225 10174.5059 C-6198.1523 10174.3848 -6198.1113 10174.1406 -6197.9575 10174.1172 C-6198.4199 10174.1895 -6198.9141 10174.1563 -6199.3535 10174.082 C-6199.0693 10174.4814 -6199.8433 10174.1758 -6199.6494 10174.5078 C-6199.4141 10174.5977 -6199.2119 10174.8818 -6199.3418 10175.0605 C-6199.4888 10175.0352 -6199.3369 10174.8857 -6199.3984 10174.8008 C-6199.5859 10175.0186 -6199.6895 10174.4512 -6199.8735 10174.7949 C-6199.4512 10174.666 -6199.7915 10174.3086 -6199.7139 10173.9961 C-6200.0186 10174.1719 -6199.7007 10173.7734 -6200.0024 10173.7734 C-6200.3057 10173.9473 -6200.6787 10174.0859 -6201.0161 10174.1514 C-6201.4399 10173.8555 -6202.0898 10174.1465 -6202.4683 10174.1582 C-6202.6665 10174 -6202.5322 10173.6465 -6202.7471 10173.5859 C-6202.9995 10173.5918 -6202.5601 10173.9668 -6202.9336 10173.8047 C-6202.8975 10173.7344 L-6203.0107 10173.8164 -6203.5825 10173.4941 -6203.6929 10174.0029 C-6203.5776 10173.6191 L-6203.6475 10173.5859 -6203.7119 10173.6719 -6203.7695 10173.7129 C-6203.7725 10173.5879 -6203.8535 10173.4746 -6203.7402 10173.3926 C-6203.9707 10173.1289 -6204.2241 10173.4346 -6204.4746 10173.4453 C-6204.3135 10173.6719 L-6204.7422 10173.8496 -6205.0293 10173.625 -6205.4443 10173.7041 C-6205.4316 10173.4824 L-6205.6787 10173.6152 L-6205.6182 10173.4004 -6205.8447 10173.2617 -6205.9751 10173.4414 C-6205.3335 10172.8984 L-6205.1553 10173.0293 -6205.5283 10173.166 -6205.4165 10173.3848 C-6205.3213 10173.5762 -6204.9375 10173.5156 -6204.8755 10173.3018 C-6205.0225 10173.2773 -6205.0293 10173.3262 -6205.1436 10173.4063 C-6205.1919 10173.0977 -6204.9688 10173.1094 -6204.8584 10172.9033 C-6204.9355 10172.916 -6205.0449 10172.8223 -6205.0615 10172.9199 C-6204.9102 10172.7695 -6204.7578 10172.7461 -6204.5059 10172.7383 C-6204.6763 10172.8594 -6204.4131 10172.9297 -6204.4775 10173.0176 C-6204.4575 10172.7461 -6204.2168 10172.6621 -6203.9053 10172.7383 C-6203.6831 10173.0527 -6203.3208 10172.5361 -6202.96 10172.623 C-6203.1064 10172.8984 -6203.2935 10173.1191 -6203.5127 10173.2305 C-6203.2861 10173.3682 -6203.2607 10173.2227 -6203.0337 10173.3613 C-6202.9238 10173.1563 -6202.8457 10172.8418 -6202.5503 10172.7168 C-6202.5342 10172.9199 L-6202.2666 10172.8164 -6202.2666 10172.5156 -6201.9258 10172.5723 C-6201.3418 10172.6719 -6200.7407 10172.6719 -6200.2949 10172.6973 C-6200.2783 10172.8994 L-6200.0303 10172.4658 -6199.4521 10172.7393 -6199.1182 10172.5469 C-6198.5503 10172.7422 -6197.8848 10172.3535 -6197.5938 10172.7031 C-6196.5913 10172.5469 -6195.7148 10172.3945 -6194.6768 10172.4688 C-6194.8516 10172.7637 L-6194.6655 10172.5469 -6194.7305 10172.9336 -6194.5479 10172.8896 C-6194.7578 10172.6543 -6194.2949 10172.5859 -6194.1665 10172.4033 C-6193.7041 10172.6328 -6193.1104 10172.3828 -6192.7007 10172.1758 C-6192.6846 10172.3789 L-6192.2705 10171.998 -6191.7759 10172.332 -6191.2598 10172.3945 C-6191.2007 10172.4785 -6191.1074 10172.6689 -6190.9536 10172.6465 C-6190.6738 10172.3184 -6190.5273 10172.3418 -6190.1167 10172.1367 C-6189.8169 10172.1367 -6189.3301 10172.2178 -6189.0254 10172.3457 C-6187.8975 10171.8848 -6186.7456 10172.1797 -6185.5732 10171.9023 C-6185.4888 10172.1406 L-6184.3521 10171.6309 -6182.9541 10172.0938 -6181.9839 10171.832 C-6182.0776 10172.2393 L-6181.7734 10172.3652 -6181.3843 10172.1328 -6181.4619 10171.8438 C-6181.1567 10171.9688 -6180.7007 10171.6465 -6180.5068 10171.9814 C-6180.1953 10172.0566 -6180.1255 10171.7939 -6179.8662 10171.7383 C-6179.2422 10171.8926 -6179.0107 10171.8574 -6178.4224 10171.7813 C-6178.5684 10171.7559 L-6178.6328 10171.8457 -6178.6387 10172.0186 -6178.4922 10172.0449 C-6178.2725 10171.9316 -6177.6846 10172.1543 -6177.9033 10171.6689 C-6177.2754 10171.9492 -6176.4385 10171.4395 -6175.8271 10171.8184 C-6175.8789 10171.6855 -6175.7246 10171.6602 -6175.6602 10171.5703 C-6175.1089 10171.5645 -6174.5293 10171.8359 -6174.0898 10171.6094 C-6174.0024 10171.6758 -6174.2295 10171.8359 -6174.0049 10171.8496 C-6173.8721 10171.7988 -6174.0024 10171.6758 -6173.8384 10171.6016 C-6172.9453 10171.3535 -6172.0303 10171.8574 -6171.2188 10171.7939 C-6169.7754 10171.5361 -6168.2695 10171.666 -6166.8867 10171.623 C-6166.9023 10171.7207 L-6166.4395 10171.3477 -6165.8159 10172.1025 -6165.4463 10171.541 C-6165.3369 10171.6338 -6165.0283 10171.5859 -6165.1094 10171.7734 C-6164.7407 10171.5098 -6164.0771 10172.0215 -6163.5439 10171.6865 C-6163.5928 10171.6777 -6163.6211 10171.6973 -6163.6777 10171.7393 C-6163.1392 10171.9551 -6162.6641 10171.6602 -6162.0957 10171.8555 C-6162.1533 10171.8975 -6162.2583 10171.9277 -6162.2754 10172.0254 C-6162.0557 10172.2129 -6161.7549 10171.6133 -6161.6348 10172.0859 C-6161.5088 10172.0801 -6161.5449 10171.8477 -6161.6221 10171.8613 C-6160.3779 10172.0449 -6159.0498 10171.7441 -6157.7549 10171.6367 C-6156.8271 10171.9189 -6157.6982 10172.4297 -6156.9663 10172.0781 C-6156.9063 10172.1689 -6156.9229 10171.8984 -6156.9131 10171.9961 C-6156.6299 10171.8643 -6156.4717 10172.5215 -6156.2754 10172.2754 C-6156.3564 10171.9863 -6156.1445 10172.1133 -6156.1387 10171.9375 C-6155.5713 10172.125 -6155.4575 10172.3857 -6155.0098 10172.166 C-6155.0435 10172.3184 L-6154.5186 10171.8887 -6153.9102 10172.1191 -6153.4673 10171.623 C-6150.5728 10171.5332 -6147.7983 10171.2578 -6144.9761 10171.2002 C-6142.1865 10171.2949 -6139.4551 10171.0723 -6136.6221 10171.3359 C-6135.9585 10171.7354 -6135.9087 10171.7246 -6135.1797 10171.5625 C-6135.2095 10171.6279 -6135.2549 10171.6426 -6135.2061 10171.7031 C-6135.1699 10171.375 -6134.6929 10171.6719 -6134.6235 10171.3594 C-6133.5762 10171.4199 -6132.6113 10171.3301 -6131.5337 10171.3281 C-6131.7041 10171.3633 -6131.7896 10171.6309 -6131.5869 10171.6094 C-6131.3755 10171.4004 L-6131.3408 10171.4922 L-6131.2021 10171.4434 -6131.0513 10171.2813 -6131.1943 10171.1758 C-6128.4873 10170.8926 -6125.8242 10171.5508 -6123.1729 10171.4697 C-6122.5435 10171.6064 -6121.6475 10171.4814 -6120.9629 10171.4141 C-6118.9355 10171.8516 -6117.1079 10172.2041 -6115.0479 10171.8984 C-6115.3169 10172.7461 -6116.1675 10172.9414 Vf-6206.2578 10172.7422 m-6206.1855 10172.9063 -6205.9497 10172.9961 -6206.1377 10173.2148 C-6206.1611 10173.0605 -6206.2822 10172.8887 -6206.2578 10172.7422 Cf-6199.9619 10174.4297 m-6199.9536 10174.3809 -6199.8721 10174.4961 -6199.8521 10174.5225 C-6199.9297 10174.5352 -6200.0024 10174.6729 -6200.0645 10174.5879 C-6199.9854 10174.5762 -6199.9976 10174.498 -6199.9619 10174.4297 Cf-6198.3521 10174.5273 m-6198.3765 10174.6729 -6198.7207 10174.7891 -6198.9238 10174.8066 C-6198.3521 10174.5273 Lf-6196.8521 10175.1289 m-6196.7227 10175.2529 -6196.7583 10175.3193 -6196.9326 10175.3154 C-6196.9453 10175.2383 -6196.8877 10175.1992 -6196.8521 10175.1289 Cf-6196.7456 10174.7969 m-6196.6211 10174.7939 -6196.5591 10174.8789 -6196.4985 10174.9629 C-6196.5029 10174.8369 -6196.7871 10175.041 -6196.7456 10174.7969 Cf-6193.4893 10175.2207 m-6193.4111 10175.21 -6193.2417 10175.0879 -6193.1689 10175.25 C-6193.2505 10175.1367 -6193.5498 10175.4346 -6193.4893 10175.2207 Cf-6191.9761 10175 m-6191.9272 10175.0098 -6191.9072 10175.0361 -6191.8506 10174.9961 C-6191.7607 10175.0625 -6191.8555 10175.1689 -6191.9312 10175.1826 C-6191.9761 10175 Lf-6164.4287 10174.4141 m-6164.5923 10174.4863 L-6164.5684 10174.3418 L-6164.4287 10174.4141 Lf-6152.3574 10174.4063 m-6152.1943 10174.3145 -6152.2441 10174.5439 -6152.2168 10174.5645 C-6152.3643 10174.5801 -6152.1621 10174.3848 -6152.3574 10174.4063 Cf-6145.8486 10173.6777 m-6145.8984 10173.6816 L-6145.8818 10173.3828 L-6145.8486 10173.6777 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-6180.9727 10175.5 m-6180.9727 10149.4717 L-6207 10149.4717 L-6207 10175.5 L-6180.9727 10175.5 Ln0 Ap0 R0.7084 0.636438 0.515526 0.381872 K1.125 w-6207 10158.1465 m-6180.9727 10158.1465 lS0.64 0.650477 0.701045 0.510735 K-6207 10166.8242 m-6180.9727 10166.8242 lS0.597742 0.537865 0.64184 0.350469 K0.375 w-6207 10162.4854 m-6180.9727 10162.4854 lS0 O0.597742 0.537865 0.64184 0.350469 k1 w-6185.5742 10162.5117 m-6185.3442 10162.2402 -6185.6914 10161.9541 -6186 10161.7432 c-6186.1118 10161.666 -6186.5215 10161.8789 -6186.7466 10161.7129 c-6187.0439 10161.4951 -6187.1826 10161.4082 -6187.4824 10161.4141 c-6187.6455 10161.4189 -6188.0435 10161.5479 -6188.1895 10161.5781 c-6188.5679 10161.6543 -6188.8022 10161.8516 -6189.3672 10161.7549 c-6189.7344 10161.6914 -6189.8286 10161.6006 -6189.9233 10161.6484 c-6190.1118 10161.79 -6190.2202 10162.0137 -6190.4258 10162.0625 c-6190.9575 10162.1895 -6191.3535 10162.2334 -6191.8818 10162.2227 c-6192.3047 10162.2129 -6193.4185 10162.2813 -6194.2866 10162.1816 c-6194.6226 10162.1416 -6194.6025 10161.7168 -6194.7695 10161.7129 c-6194.8618 10161.7109 -6194.7646 10162.0264 -6194.8306 10162.0469 c-6195.1694 10162.1533 -6195.4702 10161.0029 -6195.6943 10161.0723 c-6195.8047 10161.1074 -6195.5562 10161.6533 -6195.6729 10161.6816 c-6195.8975 10161.7373 -6196.2178 10160.7188 -6196.4321 10160.7813 c-6196.5635 10160.8184 -6196.2886 10161.2383 -6196.4375 10161.3066 c-6196.6655 10161.4111 -6196.9087 10160.5352 -6197.1064 10160.6338 C-6197.1543 10160.6816 -6196.7295 10161.4375 -6197.1685 10161.3789 c-6197.2871 10161.3613 -6197.5054 10160.8135 -6197.5801 10160.8398 c-6197.6919 10160.8799 -6197.3535 10161.3018 -6197.4897 10161.4277 C-6197.7681 10161.6543 -6198.3711 10160.6631 -6198.4575 10160.7344 c-6198.5791 10160.8359 -6198.1279 10161.5977 -6198.2695 10161.666 C-6198.4497 10161.9297 -6199.0142 10161.0527 -6199.0889 10161.1016 c-6199.1777 10161.1602 -6198.9058 10161.5381 -6198.8799 10161.7334 c-6198.8545 10161.9277 -6198.9966 10162.0615 -6199.2144 10162.0098 c-6199.4736 10161.9473 -6199.8696 10161.1416 -6199.9727 10161.2354 C-6200.0791 10161.291 -6199.8682 10161.5781 -6199.7954 10161.8125 c-6199.7583 10161.9277 -6199.8882 10162.1016 -6200.0298 10162.1016 c-6200.3135 10162.1494 -6200.6255 10161.498 -6200.7065 10161.6025 c-6200.7524 10161.6621 -6200.5898 10161.9902 -6200.7295 10162.0879 c-6200.8994 10162.2061 -6201.3115 10161.7383 -6201.4521 10161.7939 C-6201.5361 10161.8418 -6201.4126 10162.0967 -6201.4927 10162.1533 c-6201.7295 10162.3193 -6202.0039 10161.9209 -6202.0513 10161.9688 C-6202.1167 10161.9912 -6202.1201 10162.0361 -6202.2793 10162.1406 c-6202.4736 10162.2676 -6202.5254 10162.3486 -6202.5425 10162.4648 c-6202.5654 10162.583 -6202.3135 10162.875 -6202.1655 10162.8496 c-6201.8223 10162.79 -6201.8662 10163.3496 -6201.6328 10163.2158 c-6201.5679 10163.1797 -6201.6592 10162.7588 -6201.4199 10162.7656 c-6201.0488 10162.7783 -6200.9858 10163.3213 -6200.7817 10163.3105 c-6200.6406 10163.3037 -6200.8521 10162.6836 -6200.6328 10162.7607 c-6200.4751 10162.8164 -6200.0063 10163.8018 -6199.9795 10163.71 c-6199.8975 10163.4424 -6200.0703 10162.8984 -6199.9409 10162.9082 c-6199.7568 10162.9229 -6199.5078 10163.8174 -6199.2544 10163.9375 c-6199.1826 10163.9727 -6199.3774 10163.1006 -6199.1958 10163.0967 C-6199.0898 10163.1465 -6198.7578 10163.9492 -6198.6274 10163.998 C-6198.5591 10163.9824 -6198.5879 10163.625 -6198.5176 10163.6045 c-6198.4688 10163.5898 -6198.2817 10164.0654 -6198.21 10164.0234 c-6198.1055 10163.9629 -6198.2471 10163.4922 -6198.0889 10163.4229 c-6197.9175 10163.3486 -6197.4878 10164.3926 -6197.3486 10164.2979 c-6197.2769 10164.25 -6197.3574 10163.71 -6197.21 10163.7461 c-6197.0718 10163.7783 -6196.9414 10164.1143 -6196.8081 10164.1426 c-6196.7295 10164.1582 -6196.7935 10163.6914 -6196.7495 10163.6738 c-6196.5889 10163.6152 -6196.2329 10164.1719 -6196.0688 10164.0234 c-6195.8584 10163.8359 -6195.9395 10163.4697 -6195.8345 10163.4824 c-6195.6274 10163.5059 -6195.4912 10163.7432 -6195.4146 10163.6836 c-6195.2642 10163.5684 -6195.3281 10163.2793 -6195.0527 10163.1924 c-6194.8975 10163.1426 -6194.7935 10163.4346 -6194.7495 10163.4307 c-6194.6738 10163.4277 -6194.6782 10163.3301 -6194.6665 10163.2246 c-6194.6328 10162.9609 -6194.6064 10162.8994 -6194.4878 10162.8779 c-6194.0854 10162.8535 -6193.5625 10162.7842 -6193.1807 10162.7754 c-6192.6274 10162.7607 -6191.2607 10162.7373 -6191.1182 10162.7373 c-6191 10162.7129 -6190.7432 10162.8945 -6190.6689 10162.9609 c-6190.4678 10163.1455 -6190.2998 10163.3594 -6189.9858 10163.6201 c-6189.8906 10163.7012 -6189.8081 10163.6807 -6189.7378 10163.6563 c-6189.5249 10163.5859 -6189.4585 10163.5332 -6189.2202 10163.5029 c-6188.9175 10163.46 -6188.4272 10163.5488 -6188.1245 10163.6426 c-6187.6035 10163.8018 -6187.5264 10163.8242 -6187.0977 10163.7754 c-6186.6992 10163.7295 -6186.0586 10163.6582 -6186.0479 10163.3105 c-6186.0415 10163.0957 -6185.9414 10162.9434 -6185.5742 10162.5117 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-6180.9722 10175.5 m-6180.9722 10149.4727 L-6207 10149.4727 L-6207 10175.5 L-6180.9722 10175.5 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-6189.6455 10162.4893 m-6180.9736 10162.4893 lS-6193.9839 10175.5 m-6193.9839 10166.8242 lS0.7084 0.636438 0.515526 0.381872 K1.125 w-6189.7202 10158.1504 m-6180.9727 10158.1504 lS-6198.3232 10175.499 m-6198.3232 10166.1455 lS0.64 0.650477 0.701045 0.510735 K-6189.6504 10175.499 m-6189.6504 10173.0869 l-6186.9937 10172.8633 -6185.3096 10171.1602 v-6183.6064 10169.4336 -6183.3774 10166.8281 y-6180.9727 10166.8281 lS*u1 D0 O0.7084 0.636438 0.515526 0.381872 k1 w-6197.8418 10159.6855 m-6197.8418 10159.75 -6197.8218 10159.791 -6197.7783 10159.791 c-6197.6943 10159.791 -6197.4634 10159.4541 -6197.3994 10159.4541 c-6197.3154 10159.4541 -6197.2729 10159.4961 -6197.2729 10159.6016 c-6197.2729 10159.6855 -6197.5264 10160.5928 y-6197.5264 10160.6338 -6197.5264 10160.6338 -6197.5049 10160.6338 c-6197.4414 10160.6338 -6197.0615 10160.0869 -6196.9351 10160.0869 c-6196.9146 10160.0869 -6196.8936 10160.1074 -6196.8936 10160.1289 c-6197.1675 10161.0352 -6197.1675 10161.2256 v-6197.1675 10161.2891 -6197.1675 10161.3105 -6197.1465 10161.3105 c-6197.1055 10161.3105 -6196.6826 10160.7402 -6196.5562 10160.7402 c-6196.5352 10160.7402 -6196.5137 10160.7607 -6196.5137 10160.7822 c-6196.5137 10160.8457 -6196.7666 10161.5859 -6196.7666 10161.7529 c-6196.7666 10161.7949 -6196.7666 10161.7949 -6196.7446 10161.7949 c-6196.6826 10161.7949 -6196.4722 10161.5859 -6196.4297 10161.5859 c-6196.4082 10161.5859 -6196.3882 10161.6055 -6196.3882 10161.6279 c-6196.3882 10161.6465 -6196.4927 10162.0059 -6196.4927 10162.0898 c-6196.4927 10162.1113 -6196.4927 10162.1113 -6196.4722 10162.1113 c-6196.4297 10162.1113 -6196.0918 10161.7529 -6196.0078 10161.7529 c-6195.9658 10161.7529 -6195.9233 10161.7949 -6195.9233 10161.8789 c-6195.9233 10162.0273 -6196.1138 10162.7441 -6196.1138 10162.7861 c-6196.1138 10162.8701 -6196.0918 10162.9121 -6196.0498 10162.9121 c-6195.9658 10162.9121 -6195.7119 10162.5957 -6195.6494 10162.5957 c-6195.5854 10162.5957 -6195.5439 10162.6162 -6195.5439 10162.6807 c-6195.5854 10163.1016 L-6195.5854 10163.166 -6195.5854 10163.1855 -6195.5654 10163.1855 c-6195.5225 10163.1855 -6195.2915 10162.8916 -6195.2065 10162.8916 c-6195.1006 10162.8916 -6195.1006 10163.3779 -6195.1006 10163.4395 c-6195.1006 10163.5449 -6195.0166 10163.6289 -6194.8896 10163.6289 c-6194.8057 10163.6289 -6194.4678 10163.3975 -6194.4473 10163.3975 c-6194.3623 10163.3975 -6194.3198 10163.8398 -6194.2568 10163.8398 c-6194.1943 10163.8398 -6193.9199 10163.7129 -6193.8564 10163.7129 c-6193.6455 10163.7129 -6193.6035 10163.7988 -6193.6035 10163.9668 c-6193.6255 10164.1143 L-6193.6255 10164.1563 -6193.6035 10164.1563 -6193.5835 10164.1563 c-6193.4985 10164.1563 -6193.2241 10163.8818 -6193.1392 10163.8818 c-6192.9287 10163.8818 -6190.8198 10165.9492 -6190.5454 10166.2227 c-6190.3984 10166.3906 -6190.3984 10166.6865 -6190.3984 10166.8135 c-6190.3984 10167.6777 -6190.3984 10167.7617 -6190.2295 10167.8457 c-6189.5977 10168.0996 -6189.5127 10168.2471 -6188.7334 10169.5332 c-6188.6479 10169.6807 -6187.7407 10170.2939 -6187.5942 10170.2939 c-6187.4878 10170.2939 -6187.1094 10170.0391 -6187.0239 10170.0391 c-6186.9194 10170.0391 -6186.8135 10170.1025 -6186.8135 10170.2705 c-6186.8135 10170.7139 -6187.3408 10171.2207 -6187.9312 10171.2207 c-6188.7534 10171.2207 -6189.0913 10170.5234 -6189.1338 10170.125 c-6189.1543 10169.9766 -6189.2393 10169.8916 -6189.3447 10169.8916 c-6189.3862 10169.8916 -6189.4287 10169.9121 -6189.4702 10169.9766 c-6189.9561 10170.7773 -6190.9473 10171.2207 -6191.7065 10171.2207 c-6192.7393 10171.2207 -6193.8774 10170.5879 -6194.3418 10170.3145 c-6194.7842 10170.0615 -6195.4814 10169.8916 -6195.8809 10169.8916 c-6196.3242 10169.8916 -6196.3662 10170.0391 -6196.3662 10170.2939 c-6196.3662 10170.4404 -6195.9023 10170.8818 -6195.9023 10171.0098 c-6195.9023 10171.1357 -6196.0498 10171.2207 -6196.4082 10171.2207 c-6196.8936 10171.2207 -6197.5679 10170.5029 -6197.5679 10169.7236 c-6197.5679 10169.1113 -6196.7666 10168.5859 -6196.3022 10168.5859 c-6195.3755 10168.5859 -6195.0942 10168.9434 -6194.5264 10169.4072 c-6194.4414 10169.4697 -6194.3774 10169.4922 -6194.3359 10169.4922 c-6194.1895 10169.4922 -6194.1895 10168.3945 -6194.1895 10168.2695 c-6194.1895 10168.1201 -6194.2729 10168.0576 -6194.3774 10168.0576 c-6196.7822 10168.0576 -6201.6592 10166.8359 -6203.3672 10160.6777 c-6203.4297 10160.4658 -6203.5361 10160.3613 -6203.6406 10160.3613 c-6203.7881 10160.3613 -6204.7793 10161.2041 -6204.7793 10162.7861 c-6204.7793 10164.6201 -6203.5767 10165.5898 -6202.9873 10165.5898 c-6202.8398 10165.5898 -6202.6494 10165.5693 -6202.6494 10165.4209 c-6202.6494 10165.3584 -6202.6929 10165.2949 -6202.7759 10165.1895 c-6203.1143 10164.8535 -6203.3672 10164.2197 -6203.3672 10163.9033 c-6203.3672 10163.6914 -6203.2607 10163.5234 -6203.1143 10163.5234 c-6202.9033 10163.5234 -6202.5654 10164.4727 -6202.46 10164.6201 c-6202.3335 10164.8311 -6201.9546 10165.2109 -6201.2378 10165.7383 c-6200.4995 10166.2637 -6199.0654 10167.5723 -6199.0654 10168.8369 c-6199.0654 10170.21 -6200.1191 10171.1152 -6200.9209 10171.1152 c-6201.7007 10171.1152 -6202.6714 10170.5879 -6203.0713 10170.1025 c-6203.7041 10169.3652 -6204.3154 10168.7949 -6204.8218 10168.7949 c-6205.1592 10168.7949 -6205.3066 10169.0059 -6205.3066 10169.2168 c-6205.3066 10169.5537 -6205.0537 10169.7861 -6204.5479 10169.8281 c-6203.9575 10169.8711 -6203.8936 10170.2939 -6203.8936 10170.6289 c-6203.8936 10170.9033 -6204.4209 10171.2207 -6204.8433 10171.2207 c-6205.4751 10171.2207 -6206.2974 10170.5234 -6206.2974 10168.6904 c-6206.2974 10167.1924 -6205.0537 10166.7295 -6204.5679 10166.7295 c-6204.1265 10166.7295 -6203.4722 10166.8135 -6203.0928 10167.1504 c-6201.8066 10168.3535 -6201.1318 10168.5625 -6200.5835 10168.5625 c-6200.3721 10168.5625 -6200.2881 10168.5625 -6200.2881 10168.7109 c-6200.2881 10169.0273 -6201.0474 10169.2168 -6201.1318 10169.2383 c-6201.3423 10169.3008 -6201.5103 10169.5332 -6201.5103 10169.7441 c-6201.5103 10170.2295 -6201.2378 10170.25 -6200.8774 10170.25 c-6200.5215 10170.25 -6199.8042 10169.8916 -6199.8042 10168.6904 c-6199.8042 10167.6992 -6200.9424 10166.5391 -6201.4058 10166.3076 c-6201.7007 10166.1377 -6202.5874 10166.1602 -6202.9458 10166.1172 c-6203.6406 10166.0322 -6205.4121 10165.0859 -6205.4121 10162.5957 c-6205.4336 10161.1826 -6204.1265 10159.8555 -6203.8511 10159.666 c-6203.6826 10159.5586 -6203.5986 10159.4326 -6203.5986 10159.2637 c-6203.5986 10159.0527 -6203.6626 10156.1221 -6203.9995 10156.1221 c-6204.4424 10156.1221 -6204.5054 10156.1221 -6204.5054 10156.3135 c-6204.21 10157.4082 -6204.21 10157.6406 v-6204.21 10157.957 -6204.4424 10159.4326 -6205.3066 10159.4326 c-6205.5806 10159.4326 -6206.0449 10159.2002 -6206.0449 10158.8848 c-6206.0449 10158.5898 -6205.3486 10157.3877 -6205.3486 10157.1133 c-6205.3486 10156.6279 -6205.3921 10156.6074 -6206.0654 10155.9961 c-6206.2559 10155.8486 -6206.3193 10155.7227 -6206.3193 10155.5313 c-6206.3193 10155.3633 -6206.2134 10155.2354 -6206.0449 10155.2354 c-6205.8975 10155.2354 -6205.3281 10155.5117 -6205.2017 10155.5313 c-6205.0752 10155.5313 -6204.8433 10155.5527 -6204.6538 10155.5527 c-6204.2734 10155.5527 -6204.0845 10155.4258 -6204.0845 10155.2998 c-6204.0845 10155.0674 -6204.0845 10154.3936 -6204.9263 10152.9375 c-6205.1167 10152.6006 -6206.2974 10151.2725 -6206.2974 10150.9346 c-6206.2974 10150.7656 -6206.2134 10150.7461 -6206.1089 10150.7461 c-6205.9185 10150.7461 -6205.4966 10151.1689 -6205.3706 10151.3145 c-6204.1265 10152.6426 -6203.3042 10154.0762 -6202.9238 10155.3418 c-6202.8398 10155.6582 -6202.7344 10155.5742 -6202.5654 10155.5957 c-6200.4155 10156.1016 -6198.3271 10158.6104 -6198.3271 10158.6318 c-6198.4326 10158.9053 -6198.4326 10158.9688 v-6198.4326 10159.0957 -6198.3271 10159.1172 -6198.3057 10159.1172 c-6198.2432 10159.1172 -6198.0527 10158.9053 -6198.0103 10158.9053 c-6197.9058 10158.9053 -6197.7783 10158.9902 -6197.7783 10159.1377 C-6197.8418 10159.6855 lf0 D-6201.1104 10158.1895 m-6200.5215 10158.1895 -6200.0986 10158.2949 -6199.6982 10158.5684 c-6199.6553 10158.5898 -6199.6138 10158.6104 -6199.5928 10158.6104 c-6199.5498 10158.6104 -6199.5498 10158.5898 -6199.5498 10158.5469 c-6199.5498 10158.1279 -6201.4272 10156.166 -6202.5654 10156.166 c-6202.6289 10156.166 -6202.6714 10156.207 -6202.6714 10156.2695 c-6202.6714 10156.46 -6202.5874 10158.4629 -6202.2495 10158.4629 c-6202.1865 10158.4629 -6202.1016 10158.4414 -6202.0386 10158.4004 c-6201.7007 10158.2529 -6201.4902 10158.1895 -6201.1104 10158.1895 cf-6200.5835 10160.9512 m-6200.5835 10160.5293 -6200.5625 10160.0654 -6199.8662 10160.0654 c-6199.2334 10160.0654 -6198.6431 10160.7197 -6198.4961 10160.8672 c-6198.4326 10160.9092 -6198.3906 10160.9297 -6198.3486 10160.9297 c-6198.3271 10160.9297 -6198.2847 10160.8877 -6198.2847 10160.8457 c-6198.2847 10160.4023 -6199.6553 10158.7373 -6201.0049 10158.7373 c-6201.2578 10158.7373 -6202.2705 10158.9053 -6202.2705 10159.4541 c-6202.2705 10159.707 -6201.8906 10161.0781 -6201.2793 10162.1533 c-6199.9087 10164.6416 -6195.7119 10166.2002 -6193.8145 10166.2002 c-6192.9072 10166.2227 -6192.6118 10165.9063 -6192.4863 10165.8848 c-6192.4648 10165.8848 -6192.4438 10165.8643 -6192.4233 10165.8643 c-6192.3174 10165.8643 -6192.1904 10165.9277 -6192.1904 10166.0752 c-6192.1904 10166.0967 -6192.2119 10166.0967 v-6192.3594 10167.2344 -6192.4014 10167.6357 -6192.4014 10168.8994 c-6192.4014 10170.2939 -6192.4014 10170.4189 -6191.4321 10170.4189 c-6190.1455 10170.4189 -6189.8506 10169.3438 -6189.8506 10169.1113 c-6189.8506 10168.6904 -6190.4399 10168.3945 -6190.5889 10168.3945 c-6190.7358 10168.3945 -6190.9058 10168.5029 -6190.9058 10168.6904 c-6190.9058 10168.9854 -6190.9473 10169.1328 -6191.2207 10169.1328 c-6191.4951 10169.1328 -6191.4951 10168.7744 -6191.4951 10168.6689 c-6191.4951 10168.416 -6191.3896 10168.1631 -6191.1782 10168.0361 c-6190.7998 10167.7832 -6190.7998 10167.3828 -6190.7998 10167.1719 c-6190.7998 10167.0664 -6190.7998 10166.9395 -6190.8198 10166.8359 c-6190.8418 10166.666 -6192.7817 10164.6201 -6193.0977 10164.6201 c-6193.2446 10164.6201 -6193.5615 10164.7666 -6194.4258 10164.7666 c-6196.5767 10164.7666 -6197.5474 10163.0391 -6197.7378 10162.5117 c-6197.9897 10161.7949 -6198.7915 10161.499 -6199.0225 10161.499 c-6199.2129 10161.499 -6199.2129 10161.5439 -6199.2129 10161.9424 c-6199.2129 10162.0273 -6199.4238 10162.3633 y-6199.4238 10162.5537 -6198.3906 10162.8066 -6198.3906 10162.9961 c-6198.3906 10163.166 -6198.5801 10163.1855 -6198.7271 10163.1855 c-6198.8115 10163.1855 -6199.8882 10163.1855 -6200.3306 10162.3633 c-6200.5415 10161.9629 -6200.5835 10161.3945 -6200.5835 10160.9512 cf1 D-6196.4927 10158.6953 m-6196.4927 10158.6514 -6196.5137 10158.6318 -6196.5352 10158.6318 c-6196.5986 10158.6318 -6196.7666 10158.9688 -6196.8506 10158.9688 c-6196.9146 10158.9688 -6196.9995 10158.8848 -6197.0415 10158.7783 c-6197.0615 10158.6953 -6197.1255 10158.2305 -6197.21 10158.2305 c-6197.2524 10158.2305 -6197.4209 10158.4629 -6197.4634 10158.4629 c-6197.6104 10158.4629 -6197.7158 10158.2305 -6197.7158 10158.0215 c-6197.7158 10157.915 -6197.7783 10157.915 -6197.9263 10157.915 c-6198.5166 10157.915 -6200.1406 10155.7432 -6200.5625 10153.9922 c-6200.6055 10153.8242 -6200.5835 10153.6768 -6200.8994 10153.5703 c-6203.0713 10152.8359 -6205.5176 10150.6816 -6205.5176 10150.5557 c-6205.5176 10150.4082 -6205.4336 10150.3242 -6205.3066 10150.3242 c-6205.2432 10150.3242 -6205.1592 10150.3242 -6204.6538 10150.6602 c-6203.7681 10151.2529 -6201.7217 10152.5381 -6200.8994 10152.5381 c-6200.6265 10152.5381 -6200.6055 10152.1797 -6200.6055 10151.9258 c-6200.6055 10151.7354 -6200.6265 10151.5039 -6200.6265 10151.3574 c-6200.6465 10151.083 -6200.9634 10150.7656 -6200.9634 10150.5977 c-6200.9634 10150.4502 -6200.8154 10150.3447 -6200.6465 10150.3447 c-6200.4575 10150.3447 -6200.3306 10150.3662 -6200.1606 10150.5557 c-6199.8662 10150.8926 -6199.7402 10151.041 -6199.4238 10151.041 c-6199.1914 10151.041 -6198.1377 10150.3242 -6197.8838 10150.3242 c-6197.5679 10150.3242 -6197.1895 10150.8086 -6197.1895 10151.1045 c-6197.1895 10151.8418 -6198.0942 10152.4326 -6198.6431 10152.4326 c-6199.0225 10152.4326 -6199.4438 10152.3066 -6199.6353 10152.0742 c-6199.6982 10152.0098 -6199.7607 10151.9688 -6199.8242 10151.9688 c-6199.9937 10151.9688 -6200.1191 10152.4326 -6200.1191 10152.4746 c-6200.1191 10152.8975 -6197.2729 10152.96 -6196.9146 10152.96 c-6196.7666 10152.96 -6196.6401 10152.875 -6196.5352 10152.7061 c-6196.3447 10152.4121 -6195.1855 10151.1895 -6193.6255 10151.1895 c-6191.79 10151.1895 -6190.0825 10152.4521 -6190.0825 10154.3506 c-6190.0825 10154.457 -6190.1245 10155.0039 -6190.1245 10155.0264 c-6190.1245 10155.0898 -6189.0063 10156.8389 -6187.6782 10156.8389 c-6186.6245 10156.8389 -6186.2656 10156.25 -6186.2656 10155.7637 c-6186.2656 10155.5313 -6186.3711 10154.8789 -6186.8984 10154.8789 c-6187.1094 10154.8789 -6187.2144 10155.0898 -6187.2144 10155.4688 c-6187.2144 10155.5527 -6187.0039 10155.9326 -6187.0039 10156.0381 c-6187.0039 10156.0801 -6187.0239 10156.1016 -6187.0879 10156.1016 c-6187.4258 10156.1016 -6187.9521 10155.7432 -6188.1846 10155.0898 c-6188.4595 10154.373 -6188.8594 10153.6768 -6189.1958 10153.2754 c-6189.5127 10152.9189 -6189.6182 10152.3262 -6189.6182 10151.9893 c-6189.6182 10151.5039 -6189.1338 10150.3447 -6187.4878 10150.3447 c-6186.2871 10150.3447 -6185.4434 10151.083 -6185.4434 10151.6943 c-6185.4434 10152.3066 -6185.7598 10152.6855 -6186.2026 10152.6855 c-6186.6455 10152.6855 -6186.9824 10152.3477 -6186.9824 10152.0098 c-6186.9824 10151.3359 -6187.1514 10151.1895 -6187.4878 10151.1895 c-6187.6992 10151.1895 -6187.8896 10151.3145 -6187.8896 10151.6309 c-6187.8896 10151.8633 -6187.8896 10152.2422 -6186.3711 10153.5078 c-6185.8857 10153.9082 -6185.4214 10154.6055 -6185.4214 10155.3848 c-6185.4214 10156.1445 -6186.4561 10157.3447 -6187.6362 10157.3447 c-6188.8594 10157.3447 -6189.6401 10156.5654 -6190.2515 10155.8486 c-6190.5454 10155.5117 -6191.9814 10153.8242 -6192.0439 10153.8018 c-6192.2334 10153.6543 -6192.3174 10153.5293 -6192.3174 10153.4023 c-6192.3174 10153.2969 -6192.2119 10153.1914 -6192.0854 10153.1914 c-6191.8535 10153.1914 -6190.9058 10154.1406 -6190.8198 10154.1406 c-6190.7568 10154.1406 -6190.7153 10154.0762 -6190.7153 10153.9922 c-6190.7153 10153.2334 -6191.8535 10151.7578 -6193.6255 10151.7578 c-6195.1006 10151.7578 -6195.9863 10152.875 -6195.9863 10152.9189 c-6195.9863 10153.0439 -6195.8394 10153.1689 -6195.5225 10153.2334 c-6191.6426 10153.9717 -6188.3955 10157.5215 -6188.3955 10162.1377 c-6188.3955 10162.2441 -6188.2256 10162.2705 -6188.0786 10162.2705 c-6187.7202 10162.2705 -6187.0879 10162.3496 -6187.0879 10162.0762 c-6187.0879 10161.9697 -6187.1294 10161.8438 -6187.1934 10161.7168 c-6187.5518 10161.1465 -6187.8682 10160.9727 -6187.8682 10160.0215 c-6187.8682 10159.5586 -6187.4878 10159.0322 -6186.8984 10159.0322 c-6185.8657 10159.0322 -6185.4214 10160.0654 -6185.4214 10160.2969 c-6185.4214 10160.4658 -6185.5073 10160.5293 -6185.5903 10160.5293 c-6185.7178 10160.5293 -6186.2241 10160.0029 -6186.3711 10160.0029 c-6186.5615 10160.0029 -6186.7085 10160.0439 -6186.7085 10160.5293 c-6186.7085 10160.8672 -6185.4214 10164.5781 -6185.4214 10165.3789 c-6185.4214 10165.9492 -6185.7598 10166.6455 -6186.6455 10167.1504 c-6186.6875 10167.1719 -6186.7085 10167.1924 -6186.7085 10167.2344 c-6186.7085 10167.3184 -6186.5615 10167.4248 -6186.4126 10167.4658 c-6185.8018 10167.6357 -6185.4214 10167.7412 -6185.4214 10168.6904 c-6185.4214 10169.0488 -6185.7598 10169.7236 -6186.0127 10169.7236 c-6186.2026 10169.7236 -6186.2026 10169.6807 -6186.2026 10169.3223 c-6186.2026 10169.1748 -6186.2446 10169.0693 -6186.3926 10168.9639 c-6186.7085 10168.7529 -6186.7295 10168.7109 -6186.8135 10168.2266 c-6186.8774 10167.9102 -6187.0039 10167.8242 -6188.1426 10167.1924 c-6188.5854 10166.9189 -6188.6904 10166.6865 -6188.7744 10166.4551 c-6188.8594 10166.2637 -6188.9233 10166.2637 -6189.4287 10166.2637 c-6189.9561 10166.2637 -6192.5073 10163.5449 -6192.5073 10163.4189 c-6192.5073 10163.3555 -6192.3809 10163.0596 -6192.3809 10162.9961 c-6192.3809 10162.9336 -6192.4014 10162.8916 -6192.4438 10162.8916 c-6192.4863 10162.8916 -6192.6338 10163.1016 -6192.6758 10163.1016 c-6192.7817 10163.1016 -6192.7817 10162.9121 -6192.7817 10162.7637 c-6192.7817 10162.6602 -6192.5703 10162.0898 -6192.5703 10161.9424 c-6192.5703 10161.8584 -6192.5918 10161.7949 -6192.6338 10161.7949 c-6192.7178 10161.7949 -6192.9072 10162.2578 -6192.9922 10162.2578 c-6193.0342 10162.2578 -6193.0762 10162.2168 -6193.0762 10162.0898 c-6193.0762 10161.9424 -6192.8862 10161.2256 y-6192.8862 10161.1621 -6192.9072 10161.0566 -6192.9502 10161.0566 c-6193.0342 10161.0566 -6193.1826 10161.457 -6193.2666 10161.457 c-6193.3286 10161.457 -6193.3926 10161.373 -6193.3926 10161.2256 c-6193.3926 10161.1406 -6193.2446 10160.7197 -6193.2446 10160.6143 c-6193.2446 10160.5508 -6193.2666 10160.4863 -6193.3086 10160.4863 c-6193.3506 10160.4863 -6193.5835 10161.0996 -6193.7095 10161.0996 c-6193.7935 10161.0996 -6193.8994 10160.9922 -6193.8994 10160.8877 c-6193.8994 10160.8037 -6193.7729 10160.4453 -6193.7729 10160.3613 c-6193.7729 10160.3184 -6193.7729 10160.2969 -6193.7935 10160.2969 c-6193.8774 10160.2969 -6194.0254 10160.7822 -6194.1104 10160.7822 c-6194.3418 10160.7822 -6194.3623 10160.3613 -6194.3623 10160.1709 c-6194.3623 10160.0869 -6194.2998 10159.75 -6194.2998 10159.6855 c-6194.2998 10159.623 -6194.3198 10159.6016 -6194.3418 10159.6016 c-6194.4897 10159.6016 -6194.6782 10160.4023 -6194.8271 10160.4023 c-6195.0386 10160.4023 -6195.0386 10160.2129 -6195.0386 10159.9814 c-6195.0166 10159.4541 L-6195.0166 10159.4326 -6195.0386 10159.4121 y-6195.0586 10159.4121 -6195.1006 10159.4326 -6195.1226 10159.4961 c-6195.1855 10159.707 -6195.3115 10160.1289 -6195.5225 10160.1289 c-6195.6694 10160.1289 -6195.8174 10159.96 -6195.8174 10159.8135 c-6195.8174 10159.5801 -6195.7119 10159.2002 -6195.7119 10158.9688 c-6195.7119 10158.9053 -6195.7334 10158.8848 -6195.7754 10158.8848 c-6195.8608 10158.8848 -6195.9863 10159.3262 -6196.0278 10159.4121 c-6196.0918 10159.4961 -6196.1553 10159.5176 -6196.2192 10159.5176 c-6196.5352 10159.5176 -6196.5352 10159.2002 -6196.5352 10159.0527 C-6196.4927 10158.6953 lf0 D-6197.8633 10154.3301 m-6197.8633 10154.0977 -6199.8042 10153.9082 -6199.8662 10153.9082 c-6199.9722 10153.9082 -6200.0352 10153.9717 -6200.0352 10154.0762 c-6200.0352 10154.9414 -6198.2847 10157.1768 -6197.8633 10157.1768 c-6197.7998 10157.1768 -6197.7783 10157.1563 -6197.7783 10157.0928 c-6198.2002 10155.8486 -6198.2002 10155.5957 v-6198.2002 10155.2158 -6198.0942 10154.9629 -6197.9058 10154.541 c-6197.8838 10154.457 -6197.8633 10154.3936 -6197.8633 10154.3301 cf-6189.1338 10165.7793 m-6188.9858 10165.7793 -6188.4795 10165.2744 -6188.3325 10165.2744 c-6188.2065 10165.2744 -6188.0791 10165.3584 -6188.0791 10165.5059 c-6188.0791 10165.5898 -6188.2695 10166.0322 -6188.2695 10166.1377 c-6188.2695 10166.4961 -6187.8896 10166.7939 -6187.5098 10166.7939 c-6187.1094 10166.7939 -6185.9702 10166.4756 -6185.9702 10165.2529 c-6185.9702 10164.1563 -6186.3926 10164.1563 -6188.0366 10164.1563 c-6188.3955 10164.1563 -6190.0615 10164.3457 -6190.3145 10164.3457 c-6190.4399 10164.3457 -6190.4834 10164.1768 -6190.4834 10164.0498 c-6190.4834 10164.0088 -6190.4834 10163.9668 -6190.4614 10163.9453 c-6190.3984 10163.5664 -6190.1675 10163.0176 -6190.1675 10162.6377 c-6190.1675 10158.1895 -6194.2998 10154.3301 -6196.7666 10154.3301 c-6197.4209 10154.3301 -6197.6519 10155.1318 -6197.6519 10155.5527 c-6197.6519 10157.2822 -6195.6694 10158.3145 -6195.4175 10158.3145 c-6195.3545 10158.3145 -6195.3335 10158.2949 -6195.3335 10158.2529 c-6195.3335 10158.21 -6195.3545 10158.1689 -6195.3975 10158.1279 c-6195.5225 10157.957 -6196.0498 10157.3447 -6196.0498 10156.7129 c-6196.0498 10156.375 -6195.7554 10155.9326 -6194.9951 10155.9326 c-6193.7305 10155.9326 -6193.1826 10157.2822 -6193.1826 10157.6406 c-6193.1826 10157.7891 -6193.2446 10157.999 -6193.4561 10157.999 c-6193.6035 10157.999 -6194.0049 10157.3447 -6194.1519 10157.3447 c-6194.2158 10157.3447 -6194.4473 10157.4717 -6194.5103 10157.4717 c-6194.5942 10157.4717 -6194.6582 10157.4512 -6194.7422 10157.4512 c-6194.8057 10157.4512 -6194.8481 10157.5137 -6194.8481 10157.6191 c-6194.8481 10157.9785 -6194.3623 10158.5469 -6193.8774 10158.8008 c-6192.9722 10159.2637 -6191.6226 10160.5928 -6191.6226 10162.0479 c-6191.6226 10162.4688 -6191.6846 10162.8701 -6191.6846 10163.207 c-6191.6846 10163.7559 -6190.7568 10164.6201 -6189.8081 10165.5059 c-6189.6401 10165.6533 -6189.3862 10165.7793 -6189.1338 10165.7793 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-6180.9722 10175.5 m-6180.9722 10149.4727 L-6207 10149.4727 L-6207 10175.5 L-6180.9722 10175.5 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-6189.6455 10162.4893 m-6180.9736 10162.4893 lS-6193.9839 10175.5 m-6193.9839 10166.8242 lS0.64 0.650477 0.701045 0.510735 K1.125 w-6189.7202 10158.1504 m-6180.9727 10158.1504 lS-6198.3232 10175.5 m-6198.3232 10166.1455 lS0.7084 0.636438 0.515526 0.381872 K-6189.6504 10175.5 m-6189.6504 10173.0869 l-6186.9937 10172.8633 -6185.3096 10171.1602 v-6183.6064 10169.4336 -6183.3774 10166.8281 y-6180.9727 10166.8281 lS*u0 O0.7084 0.636438 0.515526 0.381872 k1 w-6197.7783 10159.1377 m-6197.7783 10158.9902 -6197.9058 10158.9053 -6198.0103 10158.9053 c-6198.0527 10158.9053 -6198.2432 10159.1172 -6198.3057 10159.1172 c-6198.3271 10159.1172 -6198.4326 10159.0957 -6198.4326 10158.9688 c-6198.4326 10158.9053 -6198.3271 10158.6318 y-6198.3271 10158.6104 -6200.4155 10156.1016 -6202.5654 10155.5957 c-6202.7344 10155.5742 -6202.8398 10155.6582 -6202.9238 10155.3418 c-6203.3042 10154.0762 -6204.1265 10152.6426 -6205.3706 10151.3145 c-6205.4966 10151.1689 -6205.9185 10150.7461 -6206.1089 10150.7461 c-6206.2134 10150.7461 -6206.2974 10150.7656 -6206.2974 10150.9346 c-6206.2974 10151.2725 -6205.1167 10152.6006 -6204.9263 10152.9375 c-6204.0845 10154.3936 -6204.0845 10155.0674 -6204.0845 10155.2998 c-6204.0845 10155.4258 -6204.2734 10155.5527 -6204.6538 10155.5527 c-6204.8433 10155.5527 -6205.0752 10155.5313 -6205.2017 10155.5313 c-6205.3281 10155.5117 -6205.8975 10155.2354 -6206.0449 10155.2354 c-6206.2134 10155.2354 -6206.3193 10155.3633 -6206.3193 10155.5313 c-6206.3193 10155.7227 -6206.2559 10155.8486 -6206.0654 10155.9961 c-6205.3921 10156.6074 -6205.3486 10156.6279 -6205.3486 10157.1133 c-6205.3486 10157.3877 -6206.0449 10158.5898 -6206.0449 10158.8848 c-6206.0449 10159.2002 -6205.5806 10159.4326 -6205.3066 10159.4326 c-6204.4424 10159.4326 -6204.21 10157.957 -6204.21 10157.6406 c-6204.21 10157.4082 -6204.5054 10156.3135 y-6204.5054 10156.1221 -6204.4424 10156.1221 -6203.9995 10156.1221 c-6203.6626 10156.1221 -6203.5986 10159.0527 -6203.5986 10159.2637 c-6203.5986 10159.4326 -6203.6826 10159.5586 -6203.8511 10159.666 c-6204.1265 10159.8555 -6205.4336 10161.1826 -6205.4121 10162.5957 c-6205.4121 10165.0859 -6203.6406 10166.0322 -6202.9458 10166.1172 c-6202.5874 10166.1602 -6201.7007 10166.1377 -6201.4058 10166.3076 c-6200.9424 10166.5391 -6199.8042 10167.6992 -6199.8042 10168.6904 c-6199.8042 10169.8916 -6200.5215 10170.25 -6200.8774 10170.25 c-6201.2378 10170.25 -6201.5103 10170.2295 -6201.5103 10169.7441 c-6201.5103 10169.5332 -6201.3423 10169.3008 -6201.1318 10169.2383 c-6201.0474 10169.2168 -6200.2881 10169.0273 -6200.2881 10168.7109 c-6200.2881 10168.5625 -6200.3721 10168.5625 -6200.5835 10168.5625 c-6201.1318 10168.5625 -6201.8066 10168.3535 -6203.0928 10167.1504 c-6203.4722 10166.8135 -6204.1265 10166.7295 -6204.5679 10166.7295 c-6205.0537 10166.7295 -6206.2974 10167.1924 -6206.2974 10168.6904 c-6206.2974 10170.5234 -6205.4751 10171.2207 -6204.8433 10171.2207 c-6204.4209 10171.2207 -6203.8936 10170.9033 -6203.8936 10170.6289 c-6203.8936 10170.2939 -6203.9575 10169.8711 -6204.5479 10169.8281 c-6205.0537 10169.7861 -6205.3066 10169.5537 -6205.3066 10169.2168 c-6205.3066 10169.0059 -6205.1592 10168.7949 -6204.8218 10168.7949 c-6204.3154 10168.7949 -6203.7041 10169.3652 -6203.0713 10170.1025 c-6202.6714 10170.5879 -6201.7007 10171.1152 -6200.9209 10171.1152 c-6200.1191 10171.1152 -6199.0654 10170.21 -6199.0654 10168.8369 c-6199.0654 10167.5723 -6200.4995 10166.2637 -6201.2378 10165.7383 c-6201.9546 10165.2109 -6202.3335 10164.8311 -6202.46 10164.6201 c-6202.5654 10164.4727 -6202.9033 10163.5234 -6203.1143 10163.5234 c-6203.2607 10163.5234 -6203.3672 10163.6914 -6203.3672 10163.9033 c-6203.3672 10164.2197 -6203.1143 10164.8535 -6202.7759 10165.1895 c-6202.6929 10165.2949 -6202.6494 10165.3584 -6202.6494 10165.4209 c-6202.6494 10165.5693 -6202.8398 10165.5898 -6202.9873 10165.5898 c-6203.5767 10165.5898 -6204.7793 10164.6201 -6204.7793 10162.7861 c-6204.7793 10161.2041 -6203.7881 10160.3613 -6203.6406 10160.3613 c-6203.5361 10160.3613 -6203.4297 10160.4658 -6203.3672 10160.6777 c-6201.6592 10166.8359 -6196.7822 10168.0576 -6194.3774 10168.0576 c-6194.2729 10168.0576 -6194.1895 10168.1201 -6194.1895 10168.2695 c-6194.1895 10168.3945 -6194.1895 10169.4922 -6194.3359 10169.4922 c-6194.3774 10169.4922 -6194.4414 10169.4697 -6194.5264 10169.4072 c-6195.0942 10168.9434 -6195.3755 10168.5859 -6196.3022 10168.5859 c-6196.7666 10168.5859 -6197.5679 10169.1113 -6197.5679 10169.7236 c-6197.5679 10170.5029 -6196.8936 10171.2207 -6196.4082 10171.2207 c-6196.0498 10171.2207 -6195.9023 10171.1357 -6195.9023 10171.0098 c-6195.9023 10170.8818 -6196.3662 10170.4404 -6196.3662 10170.2939 c-6196.3662 10170.0391 -6196.3242 10169.8916 -6195.8809 10169.8916 c-6195.4814 10169.8916 -6194.7842 10170.0615 -6194.3418 10170.3145 c-6193.8774 10170.5879 -6192.7393 10171.2207 -6191.7065 10171.2207 c-6190.9473 10171.2207 -6189.9561 10170.7773 -6189.4702 10169.9766 c-6189.4287 10169.9121 -6189.3862 10169.8916 -6189.3447 10169.8916 c-6189.2393 10169.8916 -6189.1543 10169.9766 -6189.1338 10170.125 c-6189.0913 10170.5234 -6188.7534 10171.2207 -6187.9312 10171.2207 c-6187.3408 10171.2207 -6186.8135 10170.7139 -6186.8135 10170.2705 c-6186.8135 10170.1025 -6186.9194 10170.0391 -6187.0239 10170.0391 c-6187.1094 10170.0391 -6187.4878 10170.2939 -6187.5942 10170.2939 c-6187.7407 10170.2939 -6188.6479 10169.6807 -6188.7334 10169.5332 c-6189.5127 10168.2471 -6189.5977 10168.0996 -6190.2295 10167.8457 c-6190.3984 10167.7617 -6190.3984 10167.6777 -6190.3984 10166.8135 c-6190.3984 10166.6865 -6190.3984 10166.3906 -6190.5454 10166.2227 c-6190.8198 10165.9492 -6192.9287 10163.8818 -6193.1392 10163.8818 c-6193.2241 10163.8818 -6193.4985 10164.1563 -6193.5835 10164.1563 c-6193.6035 10164.1563 -6193.6255 10164.1563 -6193.6255 10164.1143 C-6193.6035 10163.9668 l-6193.6035 10163.7988 -6193.6455 10163.7129 -6193.8564 10163.7129 c-6193.9199 10163.7129 -6194.1943 10163.8398 -6194.2568 10163.8398 c-6194.3198 10163.8398 -6194.3623 10163.3975 -6194.4473 10163.3975 c-6194.4678 10163.3975 -6194.8057 10163.6289 -6194.8896 10163.6289 c-6195.0166 10163.6289 -6195.1006 10163.5449 -6195.1006 10163.4395 c-6195.1006 10163.3779 -6195.1006 10162.8916 -6195.2065 10162.8916 c-6195.2915 10162.8916 -6195.5225 10163.1855 -6195.5654 10163.1855 c-6195.5854 10163.1855 -6195.5854 10163.166 -6195.5854 10163.1016 C-6195.5439 10162.6807 l-6195.5439 10162.6162 -6195.5854 10162.5957 -6195.6494 10162.5957 c-6195.7119 10162.5957 -6195.9658 10162.9121 -6196.0498 10162.9121 c-6196.0918 10162.9121 -6196.1138 10162.8701 -6196.1138 10162.7861 c-6196.1138 10162.7441 -6195.9233 10162.0273 -6195.9233 10161.8789 c-6195.9233 10161.7949 -6195.9658 10161.7529 -6196.0078 10161.7529 c-6196.0918 10161.7529 -6196.4297 10162.1113 -6196.4722 10162.1113 c-6196.4927 10162.1113 -6196.4927 10162.1113 -6196.4927 10162.0898 c-6196.4927 10162.0059 -6196.3882 10161.6465 -6196.3882 10161.6279 c-6196.3882 10161.6055 -6196.4082 10161.5859 -6196.4297 10161.5859 c-6196.4722 10161.5859 -6196.6826 10161.7949 -6196.7446 10161.7949 c-6196.7666 10161.7949 -6196.7666 10161.7949 -6196.7666 10161.7529 c-6196.7666 10161.5859 -6196.5137 10160.8457 -6196.5137 10160.7822 c-6196.5137 10160.7607 -6196.5352 10160.7402 -6196.5562 10160.7402 c-6196.6826 10160.7402 -6197.1055 10161.3105 -6197.1465 10161.3105 c-6197.1675 10161.3105 -6197.1675 10161.2891 -6197.1675 10161.2256 c-6197.1675 10161.0352 -6196.8936 10160.1289 y-6196.8936 10160.1074 -6196.9146 10160.0869 -6196.9351 10160.0869 c-6197.0615 10160.0869 -6197.4414 10160.6338 -6197.5049 10160.6338 c-6197.5264 10160.6338 -6197.5264 10160.6338 -6197.5264 10160.5928 c-6197.2729 10159.6855 -6197.2729 10159.6016 v-6197.2729 10159.4961 -6197.3154 10159.4541 -6197.3994 10159.4541 c-6197.4634 10159.4541 -6197.6943 10159.791 -6197.7783 10159.791 c-6197.8218 10159.791 -6197.8418 10159.75 -6197.8418 10159.6855 c-6197.7783 10159.1377 Lf1 D-6202.0386 10158.4004 m-6202.1016 10158.4414 -6202.1865 10158.4629 -6202.2495 10158.4629 c-6202.5874 10158.4629 -6202.6714 10156.46 -6202.6714 10156.2695 c-6202.6714 10156.207 -6202.6289 10156.166 -6202.5654 10156.166 c-6201.4272 10156.166 -6199.5498 10158.1279 -6199.5498 10158.5469 c-6199.5498 10158.5898 -6199.5498 10158.6104 -6199.5928 10158.6104 c-6199.6138 10158.6104 -6199.6553 10158.5898 -6199.6982 10158.5684 c-6200.0986 10158.2949 -6200.5215 10158.1895 -6201.1104 10158.1895 c-6201.4902 10158.1895 -6201.7007 10158.2529 -6202.0386 10158.4004 cf-6200.3306 10162.3633 m-6199.8882 10163.1855 -6198.8115 10163.1855 -6198.7271 10163.1855 c-6198.5801 10163.1855 -6198.3906 10163.166 -6198.3906 10162.9961 c-6198.3906 10162.8066 -6199.4238 10162.5537 -6199.4238 10162.3633 c-6199.2129 10162.0273 -6199.2129 10161.9424 v-6199.2129 10161.5439 -6199.2129 10161.5 -6199.0225 10161.5 c-6198.7915 10161.5 -6197.9897 10161.7949 -6197.7378 10162.5117 c-6197.5474 10163.0391 -6196.5767 10164.7666 -6194.4258 10164.7666 c-6193.5615 10164.7666 -6193.2446 10164.6201 -6193.0977 10164.6201 c-6192.7817 10164.6201 -6190.8418 10166.666 -6190.8198 10166.8359 c-6190.7998 10166.9395 -6190.7998 10167.0664 -6190.7998 10167.1719 c-6190.7998 10167.3828 -6190.7998 10167.7832 -6191.1782 10168.0361 c-6191.3896 10168.1631 -6191.4951 10168.416 -6191.4951 10168.6689 c-6191.4951 10168.7744 -6191.4951 10169.1328 -6191.2207 10169.1328 c-6190.9473 10169.1328 -6190.9058 10168.9854 -6190.9058 10168.6904 c-6190.9058 10168.5029 -6190.7358 10168.3945 -6190.5889 10168.3945 c-6190.4399 10168.3945 -6189.8506 10168.6904 -6189.8506 10169.1113 c-6189.8506 10169.3438 -6190.1455 10170.4189 -6191.4321 10170.4189 c-6192.4014 10170.4189 -6192.4014 10170.2939 -6192.4014 10168.8994 c-6192.4014 10167.6357 -6192.3594 10167.2344 -6192.2119 10166.0967 c-6192.1904 10166.0967 -6192.1904 10166.0752 y-6192.1904 10165.9277 -6192.3174 10165.8643 -6192.4233 10165.8643 c-6192.4438 10165.8643 -6192.4648 10165.8848 -6192.4863 10165.8848 c-6192.6118 10165.9063 -6192.9072 10166.2227 -6193.8145 10166.2002 c-6195.7119 10166.2002 -6199.9087 10164.6416 -6201.2793 10162.1533 c-6201.8906 10161.0781 -6202.2705 10159.707 -6202.2705 10159.4541 c-6202.2705 10158.9053 -6201.2578 10158.7373 -6201.0049 10158.7373 c-6199.6553 10158.7373 -6198.2847 10160.4023 -6198.2847 10160.8457 c-6198.2847 10160.8877 -6198.3271 10160.9297 -6198.3486 10160.9297 c-6198.3906 10160.9297 -6198.4326 10160.9092 -6198.4961 10160.8672 c-6198.6431 10160.7197 -6199.2334 10160.0654 -6199.8662 10160.0654 c-6200.5625 10160.0654 -6200.5835 10160.5293 -6200.5835 10160.9512 c-6200.5835 10161.3945 -6200.5415 10161.9629 -6200.3306 10162.3633 cf0 D-6196.5352 10159.0527 m-6196.5352 10159.2002 -6196.5352 10159.5176 -6196.2192 10159.5176 c-6196.1553 10159.5176 -6196.0918 10159.4961 -6196.0278 10159.4121 c-6195.9863 10159.3262 -6195.8608 10158.8848 -6195.7754 10158.8848 c-6195.7334 10158.8848 -6195.7119 10158.9053 -6195.7119 10158.9688 c-6195.7119 10159.2002 -6195.8174 10159.5801 -6195.8174 10159.8135 c-6195.8174 10159.96 -6195.6694 10160.1289 -6195.5225 10160.1289 c-6195.3115 10160.1289 -6195.1855 10159.707 -6195.1226 10159.4961 c-6195.1006 10159.4326 -6195.0586 10159.4121 -6195.0386 10159.4121 c-6195.0166 10159.4326 -6195.0166 10159.4541 V-6195.0386 10159.9814 l-6195.0386 10160.2129 -6195.0386 10160.4023 -6194.8271 10160.4023 c-6194.6782 10160.4023 -6194.4897 10159.6016 -6194.3418 10159.6016 c-6194.3198 10159.6016 -6194.2998 10159.623 -6194.2998 10159.6855 c-6194.2998 10159.75 -6194.3623 10160.0869 -6194.3623 10160.1709 c-6194.3623 10160.3613 -6194.3418 10160.7822 -6194.1104 10160.7822 c-6194.0254 10160.7822 -6193.8774 10160.2969 -6193.7935 10160.2969 c-6193.7729 10160.2969 -6193.7729 10160.3184 -6193.7729 10160.3613 c-6193.7729 10160.4453 -6193.8994 10160.8037 -6193.8994 10160.8877 c-6193.8994 10160.9922 -6193.7935 10161.0996 -6193.7095 10161.0996 c-6193.5835 10161.0996 -6193.3506 10160.4863 -6193.3086 10160.4863 c-6193.2666 10160.4863 -6193.2446 10160.5508 -6193.2446 10160.6143 c-6193.2446 10160.7197 -6193.3926 10161.1406 -6193.3926 10161.2256 c-6193.3926 10161.373 -6193.3286 10161.457 -6193.2666 10161.457 c-6193.1826 10161.457 -6193.0342 10161.0566 -6192.9502 10161.0566 c-6192.9072 10161.0566 -6192.8862 10161.1621 -6192.8862 10161.2256 c-6193.0762 10161.9424 -6193.0762 10162.0898 v-6193.0762 10162.2168 -6193.0342 10162.2578 -6192.9922 10162.2578 c-6192.9072 10162.2578 -6192.7178 10161.7949 -6192.6338 10161.7949 c-6192.5918 10161.7949 -6192.5703 10161.8584 -6192.5703 10161.9424 c-6192.5703 10162.0898 -6192.7817 10162.6602 -6192.7817 10162.7637 c-6192.7817 10162.9121 -6192.7817 10163.1016 -6192.6758 10163.1016 c-6192.6338 10163.1016 -6192.4863 10162.8916 -6192.4438 10162.8916 c-6192.4014 10162.8916 -6192.3809 10162.9336 -6192.3809 10162.9961 c-6192.3809 10163.0596 -6192.5073 10163.3555 -6192.5073 10163.4189 c-6192.5073 10163.5449 -6189.9561 10166.2637 -6189.4287 10166.2637 c-6188.9233 10166.2637 -6188.8594 10166.2637 -6188.7744 10166.4551 c-6188.6904 10166.6865 -6188.5854 10166.9189 -6188.1426 10167.1924 c-6187.0039 10167.8242 -6186.8774 10167.9102 -6186.8135 10168.2266 c-6186.7295 10168.7109 -6186.7085 10168.7529 -6186.3926 10168.9639 c-6186.2446 10169.0693 -6186.2026 10169.1748 -6186.2026 10169.3223 c-6186.2026 10169.6807 -6186.2026 10169.7236 -6186.0127 10169.7236 c-6185.7598 10169.7236 -6185.4214 10169.0488 -6185.4214 10168.6904 c-6185.4214 10167.7412 -6185.8018 10167.6357 -6186.4126 10167.4658 c-6186.5615 10167.4248 -6186.7085 10167.3184 -6186.7085 10167.2344 c-6186.7085 10167.1924 -6186.6875 10167.1719 -6186.6455 10167.1504 c-6185.7598 10166.6455 -6185.4214 10165.9492 -6185.4214 10165.3789 c-6185.4214 10164.5781 -6186.7085 10160.8672 -6186.7085 10160.5293 c-6186.7085 10160.0439 -6186.5615 10160.0029 -6186.3711 10160.0029 c-6186.2241 10160.0029 -6185.7178 10160.5293 -6185.5903 10160.5293 c-6185.5073 10160.5293 -6185.4214 10160.4658 -6185.4214 10160.2969 c-6185.4214 10160.0654 -6185.8657 10159.0322 -6186.8984 10159.0322 c-6187.4878 10159.0322 -6187.8682 10159.5586 -6187.8682 10160.0215 c-6187.8682 10160.9727 -6187.5518 10161.1465 -6187.1934 10161.7168 c-6187.1294 10161.8438 -6187.0879 10161.9697 -6187.0879 10162.0762 c-6187.0879 10162.3496 -6187.7202 10162.2705 -6188.0786 10162.2705 c-6188.2256 10162.2705 -6188.3955 10162.2441 -6188.3955 10162.1377 c-6188.3955 10157.5215 -6191.6426 10153.9717 -6195.5225 10153.2334 c-6195.8394 10153.1689 -6195.9863 10153.0439 -6195.9863 10152.9189 c-6195.9863 10152.875 -6195.1006 10151.7578 -6193.6255 10151.7578 c-6191.8535 10151.7578 -6190.7153 10153.2334 -6190.7153 10153.9922 c-6190.7153 10154.0762 -6190.7568 10154.1406 -6190.8198 10154.1406 c-6190.9058 10154.1406 -6191.8535 10153.1914 -6192.0854 10153.1914 c-6192.2119 10153.1914 -6192.3174 10153.2969 -6192.3174 10153.4023 c-6192.3174 10153.5293 -6192.2334 10153.6543 -6192.0439 10153.8018 c-6191.9814 10153.8242 -6190.5454 10155.5117 -6190.2515 10155.8486 c-6189.6401 10156.5654 -6188.8594 10157.3447 -6187.6362 10157.3447 c-6186.4561 10157.3447 -6185.4214 10156.1445 -6185.4214 10155.3848 c-6185.4214 10154.6055 -6185.8857 10153.9082 -6186.3711 10153.5078 c-6187.8896 10152.2422 -6187.8896 10151.8633 -6187.8896 10151.6309 c-6187.8896 10151.3145 -6187.6992 10151.1895 -6187.4878 10151.1895 c-6187.1514 10151.1895 -6186.9824 10151.3359 -6186.9824 10152.0098 c-6186.9824 10152.3477 -6186.6455 10152.6855 -6186.2026 10152.6855 c-6185.7598 10152.6855 -6185.4434 10152.3066 -6185.4434 10151.6943 c-6185.4434 10151.0859 -6186.2871 10150.3447 -6187.4878 10150.3447 c-6189.1338 10150.3447 -6189.6182 10151.5039 -6189.6182 10151.9893 c-6189.6182 10152.3262 -6189.5127 10152.9189 -6189.1958 10153.2754 c-6188.8594 10153.6768 -6188.4595 10154.373 -6188.1846 10155.0898 c-6187.9521 10155.7432 -6187.4258 10156.1016 -6187.0879 10156.1016 c-6187.0239 10156.1016 -6187.0039 10156.0801 -6187.0039 10156.0381 c-6187.0039 10155.9326 -6187.2144 10155.5527 -6187.2144 10155.4688 c-6187.2144 10155.0898 -6187.1094 10154.8789 -6186.8984 10154.8789 c-6186.3711 10154.8789 -6186.2656 10155.5313 -6186.2656 10155.7637 c-6186.2656 10156.25 -6186.6245 10156.8389 -6187.6782 10156.8389 c-6189.0063 10156.8389 -6190.1245 10155.0898 -6190.1245 10155.0264 c-6190.1245 10155.0039 -6190.0825 10154.457 -6190.0825 10154.3506 c-6190.0825 10152.4521 -6191.79 10151.1895 -6193.6255 10151.1895 c-6195.1855 10151.1895 -6196.3447 10152.4121 -6196.5352 10152.7061 c-6196.6401 10152.875 -6196.7666 10152.96 -6196.9146 10152.96 c-6197.2729 10152.96 -6200.1191 10152.8975 -6200.1191 10152.4746 c-6200.1191 10152.4326 -6199.9937 10151.9688 -6199.8242 10151.9688 c-6199.7607 10151.9688 -6199.6982 10152.0098 -6199.6353 10152.0742 c-6199.4438 10152.3066 -6199.0225 10152.4326 -6198.6431 10152.4326 c-6198.0942 10152.4326 -6197.1895 10151.8418 -6197.1895 10151.1045 c-6197.1895 10150.8086 -6197.5679 10150.3242 -6197.8838 10150.3242 c-6198.1377 10150.3242 -6199.1914 10151.041 -6199.4238 10151.041 c-6199.7402 10151.041 -6199.8662 10150.8926 -6200.1606 10150.5557 c-6200.3306 10150.3662 -6200.4575 10150.3447 -6200.6465 10150.3447 c-6200.8154 10150.3447 -6200.9634 10150.4502 -6200.9634 10150.5977 c-6200.9634 10150.7656 -6200.6465 10151.0859 -6200.6265 10151.3574 c-6200.6265 10151.5039 -6200.6055 10151.7354 -6200.6055 10151.9258 c-6200.6055 10152.1797 -6200.6265 10152.5381 -6200.8994 10152.5381 c-6201.7217 10152.5381 -6203.7681 10151.2529 -6204.6538 10150.6602 c-6205.1592 10150.3242 -6205.2432 10150.3242 -6205.3066 10150.3242 c-6205.4336 10150.3242 -6205.5176 10150.4082 -6205.5176 10150.5557 c-6205.5176 10150.6816 -6203.0713 10152.8359 -6200.8994 10153.5703 c-6200.5835 10153.6768 -6200.6055 10153.8242 -6200.5625 10153.9922 c-6200.1406 10155.7432 -6198.5166 10157.916 -6197.9263 10157.916 c-6197.7783 10157.916 -6197.7158 10157.916 -6197.7158 10158.0215 c-6197.7158 10158.2305 -6197.6104 10158.4629 -6197.4634 10158.4629 c-6197.4209 10158.4629 -6197.2524 10158.2305 -6197.21 10158.2305 c-6197.1255 10158.2305 -6197.0615 10158.6953 -6197.0415 10158.7783 c-6196.9995 10158.8848 -6196.9146 10158.9688 -6196.8506 10158.9688 c-6196.7666 10158.9688 -6196.5986 10158.6318 -6196.5352 10158.6318 c-6196.5137 10158.6318 -6196.4927 10158.6514 -6196.4927 10158.6953 c-6196.5352 10159.0527 Lf1 D-6197.9058 10154.541 m-6198.0942 10154.9629 -6198.2002 10155.2158 -6198.2002 10155.5957 c-6198.2002 10155.8486 -6197.7783 10157.0928 y-6197.7783 10157.1563 -6197.7998 10157.1768 -6197.8633 10157.1768 c-6198.2847 10157.1768 -6200.0352 10154.9414 -6200.0352 10154.0762 c-6200.0352 10153.9717 -6199.9722 10153.9082 -6199.8662 10153.9082 c-6199.8042 10153.9082 -6197.8633 10154.0977 -6197.8633 10154.3301 c-6197.8633 10154.3936 -6197.8838 10154.457 -6197.9058 10154.541 cf-6189.8081 10165.5059 m-6190.7568 10164.6201 -6191.6846 10163.7559 -6191.6846 10163.207 c-6191.6846 10162.8701 -6191.6226 10162.4688 -6191.6226 10162.0479 c-6191.6226 10160.5928 -6192.9722 10159.2637 -6193.8774 10158.8008 c-6194.3623 10158.5469 -6194.8481 10157.9785 -6194.8481 10157.6191 c-6194.8481 10157.5137 -6194.8057 10157.4512 -6194.7422 10157.4512 c-6194.6582 10157.4512 -6194.5942 10157.4717 -6194.5103 10157.4717 c-6194.4473 10157.4717 -6194.2158 10157.3447 -6194.1519 10157.3447 c-6194.0049 10157.3447 -6193.6035 10158 -6193.4561 10158 c-6193.2446 10158 -6193.1826 10157.7891 -6193.1826 10157.6406 c-6193.1826 10157.2822 -6193.7305 10155.9326 -6194.9951 10155.9326 c-6195.7554 10155.9326 -6196.0498 10156.375 -6196.0498 10156.7129 c-6196.0498 10157.3447 -6195.5225 10157.957 -6195.3975 10158.1279 c-6195.3545 10158.1689 -6195.3335 10158.21 -6195.3335 10158.2529 c-6195.3335 10158.2949 -6195.3545 10158.3145 -6195.4175 10158.3145 c-6195.6694 10158.3145 -6197.6519 10157.2822 -6197.6519 10155.5527 c-6197.6519 10155.1318 -6197.4209 10154.3301 -6196.7666 10154.3301 c-6194.2998 10154.3301 -6190.1675 10158.1895 -6190.1675 10162.6377 c-6190.1675 10163.0176 -6190.3984 10163.5664 -6190.4614 10163.9453 c-6190.4834 10163.9668 -6190.4834 10164.0088 -6190.4834 10164.0498 c-6190.4834 10164.1768 -6190.4399 10164.3457 -6190.3145 10164.3457 c-6190.0615 10164.3457 -6188.3955 10164.1563 -6188.0366 10164.1563 c-6186.3926 10164.1563 -6185.9702 10164.1563 -6185.9702 10165.2529 c-6185.9702 10166.4756 -6187.1094 10166.7939 -6187.5098 10166.7939 c-6187.8896 10166.7939 -6188.2695 10166.4961 -6188.2695 10166.1377 c-6188.2695 10166.0322 -6188.0791 10165.5898 -6188.0791 10165.5059 c-6188.0791 10165.3584 -6188.2065 10165.2744 -6188.3325 10165.2744 c-6188.4795 10165.2744 -6188.9858 10165.7793 -6189.1338 10165.7793 c-6189.3862 10165.7793 -6189.6401 10165.6533 -6189.8081 10165.5059 cf*UU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Ovalado/ Adobe Calligrap) -(hic Brush Tool/ 5 pt. Ovalado/ Adobe Calligraphic Brush Tool/ ) -(Plano 5 pt./ Adobe Calligraphic Brush Tool/ Redondo 3 pt./ Ado) -(be Calligraphic Brush Tool/ Redondo 7 pt./ Adobe Calligraphic ) -(Brush Tool/ Redondo 15 pt./ Adobe ArtOnPath Brush Tool/ Carbon) -(cillo/ Adobe ArtOnPath Brush Tool/ Trazo ahusado/ Adobe ArtOnP) -(ath Brush Tool/ Radio floral/ Adobe PatternOnPath Brush Tool/ ) -(Pincel de flecha roja / Adobe PatternOnPath Brush Tool/ G\227tico) -(/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Ovalado)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Ovalado)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Plano 5 pt.)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Redondo 15 pt.)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Redondo 3 pt.)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Redondo 7 pt.)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Carboncillo)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Radio floral)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Trazo ahusado)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(G\627tico)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Pincel de flecha roja )(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registro]) 0 Xs([Registro])Pc0 0 0 0 k(Blanco)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 1 1 0 k(Rojo CMYK)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0 0 0.1 k(K=10)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Capa 1) Ln0 A1 Ap0 D0 O0 J 0 j 1 w 4 M []0 d0 XR3968.5 0 m0 0 L0 3968.5 L3968.5 3968.5 L3968.5 0 LBb0 0 0 0 Bh1 (Unnamed gradient 12) 1984.25 1984.25 0 1984.25 1 0 0 1 0 0 Bg1984.25 0 0 -1984.25 1984.25 1984.25 Bmf0 BB*u0 Ap1 D0 0 0 1 k3560.6221 1658.627 m3443.0059 1658.627 3347.3184 1562.9209 3347.3184 1445.2813 c3347.3184 1402.8057 3359.8242 1361.748 3383.499 1326.5244 C3385.002 1324.3145 L3424.9541 1266.4727 3490.6064 1231.9395 3560.6221 1231.9395 c3630.6719 1231.9395 3696.3428 1266.4727 3736.3125 1324.3477 C3737.8145 1326.5605 L3761.4678 1361.7529 3773.9697 1402.8057 3773.9697 1445.2813 c3773.9697 1562.9209 3678.2627 1658.627 3560.6221 1658.627 cf0 D3747.6123 1426.3193 m3744.7979 1398.5166 3735.6934 1371.4521 3721.1035 1347.5742 C3700.4893 1347.5742 L3709.8818 1372.1914 3715.5361 1398.627 3717.3291 1426.3193 C3747.6123 1426.3193 Lf3599.7451 1322.1563 m3587.7734 1277.4629 3571.6699 1257.3682 3560.6221 1257.3682 c3549.5879 1257.3682 3533.5 1277.4639 3521.5322 1322.1563 C3599.7451 1322.1563 Lf3432.1777 1322.1563 m3437.5791 1311.8057 3443.5967 1302.1924 3450.1885 1293.375 C3438.7119 1301.7529 3428.1533 1311.4287 3418.8154 1322.1563 C3432.1777 1322.1563 Lf3403.9404 1426.3213 m3405.7344 1398.627 3411.3877 1372.1914 3420.7783 1347.5742 C3400.1953 1347.5742 L3385.6074 1371.4492 3376.5029 1398.5146 3373.6865 1426.3213 C3403.9404 1426.3213 Lf3372.8506 1451.7676 m3373.7998 1479.1279 3380.7852 1506.1748 3393.1875 1530.4697 C3416.3857 1530.4697 L3408.3555 1505.5605 3403.9951 1479.1426 3403.3984 1451.7676 C3372.8506 1451.7676 Lf3695.1357 1555.915 m3688.3809 1570.9746 3680.2119 1584.9209 3670.9258 1597.3232 C3686.7842 1585.7979 3700.8066 1571.832 3712.4404 1555.915 C3695.1357 1555.915 Lf3613.7871 1426.3193 m3612.9189 1398.2314 3610.1436 1371.7861 3605.5234 1347.5742 C3515.7559 1347.5742 L3511.1406 1371.7988 3508.3682 1398.2441 3507.5 1426.3193 C3613.7871 1426.3193 Lf3507.2412 1451.7676 m3507.5273 1479.4971 3509.6523 1505.9248 3513.5703 1530.4697 C3607.7119 1530.4697 L3611.6318 1505.9287 3613.7578 1479.501 3614.0439 1451.7676 C3507.2412 1451.7676 Lf3482.0596 1426.3193 m3482.9199 1399.0322 3485.6279 1372.0332 3489.9551 1347.5742 C3448.0938 1347.5742 L3437.8271 1371.4678 3431.4229 1398.5195 3429.4453 1426.3193 C3482.0596 1426.3193 Lf3487.9121 1530.4697 m3484.1865 1505.5791 3482.0869 1478.5918 3481.793 1451.7676 C3428.8516 1451.7676 L3429.5205 1479.123 3434.4365 1506.1592 3443.166 1530.4697 C3487.9121 1530.4697 Lf3454.1846 1555.915 m3469.3877 1585.5332 3490.1035 1608.0371 3513.8857 1620.9365 C3505.2031 1604.1865 3497.9023 1582.1035 3492.4404 1555.915 C3454.1846 1555.915 Lf3631.3281 1347.5742 m3635.6592 1372.0459 3638.3701 1399.043 3639.2324 1426.3193 C3691.8584 1426.3193 L3689.875 1398.5176 3683.4668 1371.4658 3673.1963 1347.5742 C3631.3281 1347.5742 Lf3639.499 1451.7676 m3639.2051 1478.585 3637.1025 1505.5693 3633.3701 1530.4697 C3678.1289 1530.4697 L3686.8633 1506.1582 3691.7793 1479.1211 3692.4473 1451.7676 C3639.499 1451.7676 Lf3660.0957 1322.1563 m3645.7842 1298.7705 3627.5693 1280.6602 3607.4131 1269.6484 C3614.6816 1283.6143 3620.9131 1301.1924 3626.0195 1322.1563 C3660.0957 1322.1563 Lf3628.8359 1555.915 m3623.3672 1582.1035 3616.0615 1604.1875 3607.3721 1620.9365 C3631.1631 1608.0381 3651.8906 1585.5342 3667.1045 1555.915 C3628.8359 1555.915 Lf3518.4482 1555.915 m3530.457 1608.9414 3548.5195 1633.166 3560.6221 1633.166 c3572.7383 1633.166 3590.8164 1608.9414 3602.832 1555.915 C3518.4482 1555.915 Lf3450.3223 1597.2939 m3441.0459 1584.8994 3432.8828 1570.9629 3426.1318 1555.915 C3408.8545 1555.915 L3420.4795 1571.8213 3434.4854 1585.7754 3450.3223 1597.2939 Cf3495.2559 1322.1563 m3500.3574 1301.1875 3506.583 1283.6123 3513.8447 1269.6504 C3493.6953 1280.6621 3475.4912 1298.7715 3461.1875 1322.1563 C3495.2559 1322.1563 Lf3671.0576 1293.3457 m3677.6602 1302.1719 3683.6855 1311.7949 3689.0928 1322.1563 C3702.4785 1322.1563 L3693.127 1311.415 3682.5537 1301.7305 3671.0576 1293.3457 Cf3717.8701 1451.7676 m3717.2744 1479.1338 3712.9141 1505.5527 3704.8838 1530.4697 C3728.1094 1530.4697 L3740.5156 1506.1768 3747.5029 1479.1289 3748.4531 1451.7676 C3717.8701 1451.7676 Lf*U*u1 D819.0957 3865.415 m238.8188 3865.415 L215.3003 3865.415 196.2363 3846.3516 196.2363 3822.834 C196.2363 2960.3042 L196.2363 2936.7876 215.3003 2917.7222 238.8188 2917.7222 C819.0957 2917.7227 L842.6123 2917.7227 861.6777 2936.7876 861.6777 2960.3047 C861.6777 3822.834 L861.6777 3846.3516 842.6123 3865.415 819.0957 3865.415 Cf0 D528.958 2980.9824 m517.0464 2980.9824 507.3911 2990.6377 507.3911 3002.5488 c507.3911 3014.458 517.0464 3024.1123 528.958 3024.1123 c540.8677 3024.1123 550.522 3014.458 550.522 3002.5488 c550.522 2990.6377 540.8677 2980.9824 528.958 2980.9824 cf808.2104 3077.1836 m249.7021 3077.1836 L249.7021 3814.1055 L808.2104 3814.1055 L808.2104 3077.1836 Lf*U*u1 D2656.0332 3622.4189 m2358.0156 3622.4189 L2327.9141 3622.4189 2303.5107 3598.0166 2303.5107 3567.915 C2303.5107 2972.2275 L2303.5107 2942.125 2327.9141 2917.7227 2358.0156 2917.7227 C2656.0332 2917.7227 L2686.1367 2917.7227 2710.543 2942.125 2710.543 2972.228 C2710.543 3567.915 L2710.543 3598.0166 2686.1367 3622.4189 2656.0332 3622.4189 Cf0 D2507.0254 2947.8633 m2489.2324 2947.8643 2474.8135 2962.2856 2474.8135 2980.0781 c2474.8135 2997.8701 2489.2324 3012.292 2507.0254 3012.292 c2524.8174 3012.292 2539.2402 2997.8701 2539.2402 2980.0781 c2539.2402 2962.2856 2524.8174 2947.8633 2507.0254 2947.8633 cf2675.6924 3070.5205 m2675.6924 3056.751 2664.5303 3045.5918 2650.7637 3045.5918 C2363.2861 3045.5918 L2349.5186 3045.5918 2338.3555 3056.752 2338.3555 3070.52 C2338.3555 3512.1104 L2338.3555 3525.877 2349.5186 3537.0376 2363.2861 3537.0376 C2650.7637 3537.0376 L2664.5303 3537.0376 2675.6924 3525.877 2675.6924 3512.1104 C2675.6924 3070.5205 Lf*Uu*u1 D829.5864 609.5986 m829.5864 630.5811 L760.8989 630.5811 L760.8989 609.5986 L638.5928 609.5986 L617.4932 674.1641 L473.6475 674.1641 L452.5557 609.5986 L370.6572 609.5986 L370.6572 641.4365 L267.8979 641.4365 L267.8979 609.5986 L196.2363 609.5986 L196.2363 212.3135 L896.9575 212.3135 L896.9575 609.5986 L829.5864 609.5986 Lf0 D272.834 261.958 m261.5747 261.958 252.4541 271.0869 252.4541 282.3398 c252.4541 293.5918 261.5747 302.7275 272.834 302.7275 c284.0889 302.7275 293.2109 293.5918 293.2109 282.3398 c293.2109 271.0869 284.0889 261.958 272.834 261.958 cf546.5986 249.6338 m458.2993 249.6338 386.7114 321.2178 386.7114 409.5176 c386.7114 497.8271 458.2993 569.4043 546.5986 569.4043 c634.9004 569.4043 706.4907 497.8271 706.4907 409.5176 c706.4907 321.2178 634.9004 249.6338 546.5986 249.6338 cf*U*u1 D546.5986 541.3525 m473.7959 541.3525 414.7681 482.3281 414.7681 409.5176 c414.7681 336.7109 473.7959 277.6865 546.5986 277.6865 c619.4048 277.6865 678.4331 336.7109 678.4331 409.5176 c678.4331 482.3281 619.4048 541.3525 546.5986 541.3525 cf0 D546.5986 324.8613 m499.8428 324.8613 461.9399 362.7588 461.9399 409.5176 c461.9399 456.2813 499.8428 494.1816 546.5986 494.1816 c593.3574 494.1816 631.2598 456.2813 631.2598 409.5176 c631.2598 362.7588 593.3574 324.8613 546.5986 324.8613 cf*UUuu*u1935.5273 3244.6543 m1183.3467 3244.6543 L1183.3467 3677.9053 L1935.5273 3677.9053 L1935.5273 3244.6543 Lf1 D1913.7583 3727.0059 m1205.1133 3727.0059 L1166.1206 3727.0059 1134.2524 3695.1372 1134.2524 3656.1396 C1134.2524 3266.4229 L1134.2524 3227.46 1166.1206 3195.5605 1205.1133 3195.5605 C1488.5723 3195.5605 L1488.5723 3140.8652 L1472.8965 3140.8652 1460.1992 3140.8652 1453.1416 3140.8652 c1417.7109 3140.8652 1417.7109 3105.4346 Y1701.165 3105.4346 L1701.165 3140.8652 1665.7324 3140.8652 Y1651.377 3140.8652 1630.3008 3140.8652 V1630.3008 3195.5605 L1913.7583 3195.5605 L1952.7207 3195.5605 1984.623 3227.46 1984.623 3266.4229 C1984.623 3656.1411 L1984.623 3695.1372 1952.7207 3727.0059 1913.7583 3727.0059 Cf*UUu*u1957.2915 2917.7227 m1996.252 2917.7227 2028.1543 2927.8643 2028.1543 2940.249 C1984.623 3064.1338 L1984.623 3076.5298 1952.7207 3086.6621 1913.7583 3086.6621 C1205.1133 3086.6621 L1166.1206 3086.6631 1134.2524 3076.5322 1134.2524 3064.1362 C1090.7183 2940.2495 L1090.7183 2927.8652 1122.5864 2917.7227 1161.5801 2917.7227 C1957.2915 2917.7227 Lf*UUU*u0.746094 0.675781 0.667969 0.898438 k3038.2158 2671.8223 m3032.4854 2676.2207 3025.3643 2678.7832 3017.7871 2678.7832 c3017.7705 2678.7832 3017.6729 2678.7832 3017.6563 2678.7832 C3017.4619 2678.7822 L3016.5205 2678.8438 3015.5742 2678.8867 3014.6172 2678.8867 C2531.416 2678.8867 L2507.6553 2678.8867 2488.3252 2659.5508 2488.3252 2635.7832 C2488.3252 2336.9688 L2488.3252 2313.2017 2507.6553 2293.8662 2531.416 2293.8662 C3014.6172 2293.8662 L3038.3789 2293.8662 3057.7109 2313.2017 3057.7109 2336.9688 C3057.7109 2635.7832 L3057.7109 2650.8408 3049.9453 2664.1123 3038.2158 2671.8223 Cf0 D2555.4463 2578.6416 m2748.0615 2426.1968 L2753.959 2421.521 2761.3623 2418.9463 2768.9092 2418.9463 c2776.3096 2418.9463 2783.6055 2421.4404 2789.4492 2425.9678 C2990.5859 2581.7051 L2990.5859 2360.999 L2555.4463 2360.999 L2555.4463 2578.6416 Lf2919.085 2611.2368 m2769.1182 2495.127 L2624 2609.9834 L2919.085 2611.2368 Lf*Uu*u1 D3724.8525 2689.0806 m3680.9893 2732.9434 3622.6699 2757.0996 3560.6377 2757.0996 c3498.6104 2757.0996 3440.2949 2732.9434 3396.4326 2689.0801 c3352.5684 2645.2148 3328.4111 2586.8931 3328.4111 2524.8574 c3328.4111 2396.8071 3432.5879 2292.6309 3560.6377 2292.6309 c3688.6943 2292.6309 3792.876 2396.8071 3792.876 2524.8574 c3792.876 2586.894 3768.7178 2645.2163 3724.8525 2689.0806 cf0 D3560.6377 2352.6309 m3465.6719 2352.6309 3388.4111 2429.8916 3388.4111 2524.8574 c3388.4111 2619.832 3465.6719 2697.0996 3560.6377 2697.0996 c3655.6104 2697.0996 3732.876 2619.832 3732.876 2524.8574 c3732.876 2429.8916 3655.6104 2352.6309 3560.6377 2352.6309 cf*U3684.957 2567.2178 m3682.248 2579.8208 3671.4727 2588.6226 3658.7539 2588.6226 c3654.7158 2588.6226 3650.6689 2587.7368 3646.6436 2585.9531 C3580.3174 2556.0889 L3580.3174 2636.3809 L3580.3174 2651.7236 3568.6836 2663.2944 3553.2559 2663.2944 c3537.835 2663.2944 3525.7549 2651.4727 3525.7549 2636.3359 C3526.126 2512.4121 L3526.126 2497.0674 3538.6758 2484.5835 3554.1016 2484.583 c3558.541 2484.583 3562.8438 2485.6162 3566.8936 2487.6538 C3669.5645 2537.4038 L3681.4414 2542.8691 3687.6221 2554.8198 3684.957 2567.2178 cfU*uu1 D0 0 0 1 k1 XR2066.4355 896.9707 m1743.2227 896.9707 L1723.4355 896.9707 1707.2236 880.5068 1707.2236 860.3936 C1707.2236 257.2188 L1707.2236 237.1045 1723.4355 220.6484 1743.2227 220.6484 C2066.4355 220.6484 L2086.2393 220.6484 2102.4346 237.1045 2102.4346 257.2188 C2102.4346 860.3936 L2102.4346 880.5068 2086.2393 896.9707 2066.4355 896.9707 Cf0 D1750.1431 849.9648 m1750.1431 855.7148 1755.4473 860.4277 1761.9385 860.4277 C2047.7383 860.4277 L2054.209 860.4277 2059.5156 855.7148 2059.5156 849.9648 C2059.5156 645.4023 L2059.5156 639.6436 2054.209 634.9395 2047.7383 634.9395 C1761.9385 634.9395 L1755.4473 634.9395 1750.1431 639.6436 1750.1431 645.4023 C1750.1431 849.9648 Lf2064.3936 432.6875 m2064.375 432.6875 L2064.375 417.9502 2062.3926 403.6826 2058.6592 390.1328 c2057.4355 385.6611 2056.0342 381.3457 2054.4785 377.126 c2046.374 355.2549 2033.6582 335.6191 2017.4844 319.4658 c2013.4404 315.4219 2009.1641 311.5898 2004.6719 307.9541 c2000.2002 304.3594 1995.5166 300.9746 1990.6729 297.8652 c1966.3555 282.2354 1937.542 273.0195 1906.5728 272.5918 C1906.5728 272.5527 L1901.9277 272.5527 L1901.9277 272.5918 L1885.0713 272.8252 1868.8579 275.6631 1853.6367 280.7178 c1849.748 282.0205 1845.9175 283.4775 1842.1846 285.0332 c1822.9185 293.1602 1805.5596 304.9229 1791.0161 319.4658 C1791.0161 319.4834 L1786.9727 323.4873 1783.1416 327.7656 1779.5078 332.2754 c1775.9102 336.7461 1772.5283 341.4131 1769.4189 346.2734 c1753.8066 370.5742 1744.5713 399.4248 1744.145 430.374 C1744.1069 430.374 L1744.1069 435.0205 L1744.124 435.0205 L1744.3789 451.876 1747.2168 468.0889 1752.29 483.3115 c1753.5732 487.2002 1755.0127 491.0303 1756.5874 494.7637 c1764.7139 514.0283 1776.4766 531.3887 1791.0161 545.9316 c1795.0601 549.9746 1799.3364 553.8066 1803.8291 557.4316 c1808.3003 561.0371 1812.9639 564.4092 1817.8242 567.5215 c1842.1284 583.1396 1870.9561 592.3662 1901.9277 592.8125 C1901.9277 592.8438 L1906.5728 592.8438 L1906.5728 592.8125 L1923.4297 592.5713 1939.6426 589.7314 1954.8652 584.6582 c1958.7539 583.3652 1962.5811 581.9258 1966.3159 580.3516 c1985.582 572.2441 2002.9414 560.4736 2017.4844 545.9307 c2027.126 536.2881 2035.5625 525.4023 2042.5244 513.5049 c2045.0898 509.1104 2047.4424 504.6006 2049.5811 500.0127 c2051.7188 495.4248 2053.6641 490.6807 2055.373 485.8203 c2061.2061 469.1787 2064.375 451.3125 2064.375 432.709 C2064.3936 432.709 L2064.3936 432.6875 LfUu1 D2045.377 484.9209 m2037.7676 505.4512 2025.8066 523.8721 2010.626 539.0547 C2010.6064 539.0732 L2006.7832 542.8984 2002.7529 546.5137 1998.5889 549.875 c1994.3896 553.2559 1989.998 556.4297 1985.4414 559.3604 c1962.4453 574.1367 1935.1514 582.8184 1905.8418 583.1309 C1902.6753 583.1309 L1889.3799 583.001 1876.5137 581.1357 1864.252 577.7637 c1860.146 576.6318 1856.0771 575.3154 1852.0264 573.8262 c1831.4951 566.2266 1813.0742 554.2637 1797.874 539.0547 c1794.0498 535.2129 1790.4336 531.2207 1787.061 527.0391 c1783.6914 522.8359 1780.5078 518.4492 1777.5869 513.8906 c1762.5361 490.4775 1753.8174 462.6182 1753.8174 432.709 C1753.8174 432.6709 L1753.7964 432.6709 L1753.7964 418.8438 1755.6821 405.4316 1759.1846 392.6982 c1760.3154 388.5938 1761.6353 384.5244 1763.1221 380.4941 c1770.7109 359.9619 1782.6914 341.5215 1797.874 326.3213 C1797.8921 326.3213 L1801.7173 322.4785 1805.7275 318.8828 1809.9092 315.5107 c1814.1099 312.1201 1818.498 308.9541 1823.0576 306.0361 c1846.0557 291.249 1873.3486 282.5645 1902.6387 282.2637 C1905.8223 282.2637 L1919.1016 282.3955 1932.0059 284.2607 1944.2476 287.6328 c1948.3545 288.7627 1952.4229 290.0811 1956.4707 291.5684 c1976.9844 299.1602 1995.4238 311.1387 2010.626 326.3213 c2014.4473 330.1631 2018.0664 334.1758 2021.4189 338.3369 c2024.8086 342.5566 2027.9932 346.9277 2030.9102 351.4863 c2045.6807 374.5049 2054.3623 401.7598 2054.6826 431.0293 C2054.6826 434.4014 L2054.5332 447.6426 2052.668 460.4717 2049.3154 472.6953 c2048.1855 476.7822 2046.8643 480.8701 2045.377 484.9209 cf0 D1903.1729 375.4736 m1870.8413 375.4736 1844.6333 401.6826 1844.6333 434.0391 c1844.6333 466.3467 1870.8413 492.5752 1903.1729 492.5752 c1935.5254 492.5752 1961.7334 466.3467 1961.7334 434.0391 c1961.7334 401.6826 1935.5254 375.4736 1903.1729 375.4736 cfU*U*u1 D0 XR3775.5205 3715.4736 m2982.3877 3715.4736 L2960.8242 3715.4736 2943.2813 3697.9766 2943.2813 3676.4688 C2943.2813 3051.9365 L2943.2813 3030.415 2960.8242 3012.9063 2982.3877 3012.9063 C3268.6641 3012.9063 L3268.3711 3001.0586 3267.5391 2990.0869 3266.2207 2980.8691 C3266.1582 2980.5835 3266.1104 2980.2949 3266.0752 2980.0049 C3265.7871 2978.0449 L3265.7539 2977.876 3265.7256 2977.7061 3265.7012 2977.5361 C3265.6484 2977.1709 L3265.5898 2976.9302 3265.541 2976.6885 3265.5 2976.4434 c3264.5898 2970.9971 3263.4551 2966.1211 3262.124 2961.9512 c3262.0615 2961.7725 3262.0039 2961.5918 3261.9521 2961.4082 C3261.4482 2959.9634 L3261.4414 2959.9443 3261.4355 2959.9258 3261.4297 2959.9063 C3260.4307 2957.3447 L3260.2373 2956.9351 L3260.1387 2956.7271 3260.0479 2956.5146 3259.9639 2956.2983 C3259.8965 2956.1519 3259.832 2956.0049 3259.7715 2955.8555 C3259.2803 2954.8652 L3259.2607 2954.8286 3259.2422 2954.792 3259.2236 2954.7559 C3259.1035 2954.5205 L3259.0322 2954.3799 3258.9648 2954.2383 3258.8984 2954.0947 C3258.875 2954.0508 3258.8516 2954.0059 3258.8281 2953.9609 C3258.6758 2953.7095 L3258.5723 2953.5391 3258.4756 2953.3652 3258.3828 2953.1895 C3258.2656 2953.0034 L3258.168 2952.8496 3258.0742 2952.6934 3257.9863 2952.5332 C3257.1426 2951.2959 L3257.0313 2951.1572 3256.9229 2951.0171 3256.8164 2950.874 C3256.7998 2950.8555 3256.7822 2950.8359 3256.7637 2950.8164 C3256.5625 2950.6582 3256.2109 2950.4072 3255.6445 2950.0664 c3254.668 2949.48 3253.4365 2948.8809 3252.0723 2948.3291 C3252.0557 2948.3223 L3251.9053 2948.269 3251.7568 2948.2119 3251.6104 2948.1504 c3250.3115 2947.6191 3248.8184 2947.1235 3247.373 2946.645 C3247.2852 2946.6162 L3247.1826 2946.585 3247.082 2946.5518 3246.9805 2946.5176 C3246.7139 2946.4395 3246.4453 2946.3447 3246.1807 2946.2432 C3244.8135 2945.791 L3244.6152 2945.7412 3244.417 2945.6836 3244.2207 2945.6221 C3243.8691 2945.5254 3243.5234 2945.4102 3243.1836 2945.2764 C3242.8857 2945.1914 3242.5918 2945.0942 3242.3027 2944.9834 C3241.9521 2944.8672 3241.6074 2944.7324 3241.2725 2944.5791 C3234.5801 2942.21 3227.8623 2939.8906 3221.8066 2937.8564 c3218.8018 2936.8428 3216.1211 2935.8472 3213.7275 2933.9229 c3213.4531 2933.7021 3213.1084 2933.3887 3212.8574 2933.1406 C3212.7793 2933.0635 L3212.7607 2933.0449 3212.7432 2933.0273 3212.7246 2933.0088 C3212.3682 2932.6533 L3212.0908 2932.376 3211.8291 2932.083 3211.5869 2931.7759 C3211.4268 2931.5762 L3211.2402 2931.3428 3211.0645 2931.1016 3210.8984 2930.8535 c3210.2314 2929.8486 3209.7197 2928.8423 3209.3359 2927.7788 c3209.2666 2927.5884 3209.2051 2927.3945 3209.1465 2927.2002 c3209.0977 2927.0449 3209.0508 2926.8896 3209.0078 2926.7324 c3208.9521 2926.5459 3208.9033 2926.3564 3208.8574 2926.167 c3208.7969 2925.9326 3208.7451 2925.6948 3208.7012 2925.4561 C3208.6953 2925.4307 L3208.6455 2925.209 3208.6025 2924.9878 3208.5674 2924.7637 C3208.4785 2924.3135 3208.418 2923.8477 3208.3857 2923.3896 C3208.3477 2923.127 3208.3203 2922.8643 3208.3027 2922.5996 c3208.166 2920.5742 3207.9121 2916.8022 3208.7783 2913.0713 c3210.3848 2906.1504 3215.3086 2901.5537 3221.9443 2900.7773 c3222.1699 2900.75 3222.3945 2900.7319 3222.6201 2900.7202 C3222.7705 2900.7061 3222.9844 2900.6836 3223.2559 2900.6523 c3223.3438 2900.6426 3223.4316 2900.6338 3223.5195 2900.626 c3226.5801 2900.3584 3242.9678 2899.0117 3265.0645 2898.7974 c3302.6455 2898.3804 3340.4785 2898.1719 3378.3193 2898.1719 c3416.1523 2898.1719 3453.9951 2898.3799 3491.5586 2898.7959 c3514.3076 2899.0186 3531.2656 2900.4629 3533.126 2900.627 c3533.1875 2900.6323 3533.25 2900.6382 3533.3135 2900.645 c3533.6602 2900.6816 3533.9258 2900.708 3534.0908 2900.7217 c3534.3145 2900.7344 3534.54 2900.7534 3534.7637 2900.7808 c3540.9082 2901.5176 3545.6689 2905.6689 3547.4941 2911.8701 C3547.7305 2912.666 L3547.8145 2912.9512 3547.8857 2913.2393 3547.9463 2913.5303 c3548.6289 2916.8584 3548.5117 2920.1504 3548.3311 2922.6465 c3548.3242 2922.7451 3548.3164 2922.8428 3548.3057 2922.9404 C3548.2666 2923.3359 L3548.248 2923.5205 3548.2236 2923.7061 3548.1934 2923.8926 C3548.1338 2924.5352 3548.0156 2925.1719 3547.8379 2925.793 C3547.75 2926.2246 L3547.6875 2926.5244 3547.6074 2926.8286 3547.5146 2927.1318 c3547.4189 2927.4678 3547.3047 2927.7988 3547.1738 2928.124 c3547.0068 2928.5396 3546.7832 2929.0186 3546.5674 2929.4482 C3546.5146 2929.5552 L3546.4355 2929.7148 L3546.0928 2930.4028 3545.6768 2931.0518 3545.1924 2931.6484 c3544.7109 2932.2422 3544.1914 2932.7881 3543.6377 2933.2803 C3543.4551 2933.4575 3543.2666 2933.6274 3543.0713 2933.792 c3540.5625 2935.8911 3537.6719 2936.8818 3534.8125 2937.8623 c3529.2197 2939.7402 3522.8799 2941.9336 3515.4424 2944.5664 C3515.4023 2944.5835 L3515.3145 2944.6206 3515.2256 2944.6582 3515.1367 2944.6934 c3514.6553 2944.8975 3514.1582 2945.0645 3513.6484 2945.1934 c3513.627 2945.1992 3513.6055 2945.2061 3513.584 2945.2119 C3513.4492 2945.2622 3513.3135 2945.3096 3513.1777 2945.3545 C3510.4697 2946.2432 L3510.1982 2946.3477 3509.9238 2946.4414 3509.6445 2946.5234 c3509.5244 2946.5625 3509.4043 2946.6016 3509.2822 2946.6367 C3507.5459 2947.2031 3505.1748 2948.0127 3503.1074 2948.9297 C3502.9004 2949.0459 3502.6895 2949.1572 3502.4746 2949.2607 c3500.9443 2949.9922 3500.1826 2950.5664 3499.8965 2950.8086 C3499.8789 2950.8252 L3499.8477 2950.8564 3499.8154 2950.8911 3499.7852 2950.9209 C3499.7744 2950.9355 3499.7637 2950.9492 3499.7539 2950.9639 C3499.5459 2951.248 L3499.4678 2951.3633 3499.3887 2951.4766 3499.3057 2951.5879 C3499.2617 2951.6553 3499.2168 2951.7222 3499.1699 2951.7876 C3498.8516 2952.2427 L3498.8281 2952.2783 L3498.7129 2952.4736 3498.5918 2952.666 3498.4629 2952.8535 C3498.4131 2952.9297 L3498.3223 2953.0908 3498.2275 2953.2524 3498.1279 2953.4092 C3498.0537 2953.5557 L3497.96 2953.7412 3497.8623 2953.9238 3497.7588 2954.1045 C3497.6484 2954.333 3497.5293 2954.5586 3497.4033 2954.7793 C3496.8916 2955.7998 L3496.7793 2956.0791 3496.6563 2956.3555 3496.5195 2956.625 C3496.0703 2957.6948 L3496.0039 2957.8594 3495.9316 2958.0215 3495.8555 2958.1816 C3495.791 2958.3701 L3495.7197 2958.5771 3495.6406 2958.7822 3495.5557 2958.9844 C3495.5254 2959.0684 3495.4941 2959.1523 3495.4609 2959.2358 C3495.2734 2959.7251 L3495.2354 2959.8408 3495.1963 2959.9551 3495.1553 2960.0693 C3495.0059 2960.5063 L3494.9199 2960.791 3494.8213 2961.0718 3494.7119 2961.3477 C3494.6191 2961.6445 L3494.5742 2961.7842 3494.5283 2961.9229 3494.4795 2962.0615 C3494.4453 2962.1719 L3494.3779 2962.4092 3494.3008 2962.6406 3494.2168 2962.8711 C3494.0859 2963.3232 L3494.0674 2963.3906 3494.0469 2963.459 3494.0254 2963.5259 C3493.9502 2963.7656 L3493.915 2963.8809 3493.877 2963.9941 3493.8389 2964.1074 C3493.8047 2964.2515 3493.7686 2964.394 3493.7314 2964.5356 C3493.0361 2967.0874 L3493.0254 2967.127 3493.0156 2967.166 3493.0049 2967.2056 C3492.9951 2967.2461 L3492.9395 2967.5264 3492.873 2967.8066 3492.7949 2968.082 C3492.6426 2968.7393 L3492.627 2968.8022 3492.6123 2968.8643 3492.5957 2968.9268 C3492.498 2969.3184 L3492.457 2969.5693 3492.4072 2969.8193 3492.3496 2970.0674 c3492.1689 2970.8242 3491.9854 2971.6372 3491.8252 2972.4307 c3491.8193 2972.4717 3491.8125 2972.5137 3491.8037 2972.5542 C3491.7305 2972.9902 L3491.7158 2973.0703 3491.7012 2973.1499 3491.6855 2973.2295 c3491.2461 2975.4814 3490.833 2977.9697 3490.4258 2980.8389 c3490.3857 2981.1323 3490.3301 2981.4219 3490.2656 2981.7061 C3489.0439 2990.6104 3488.2949 3000.8784 3487.9844 3012.9063 C3775.5205 3012.9063 L3797.0859 3012.9063 3814.6309 3030.4141 3814.6309 3051.9365 C3814.6309 3676.4688 L3814.6309 3697.9756 3797.0859 3715.4736 3775.5205 3715.4736 Cf0 D3534.0449 2900.7197 m3533.7773 2900.7031 3533.5996 2900.7051 3533.5195 2900.7061 c3533.6953 2900.7061 3533.8691 2900.71 3534.0449 2900.7197 cf3758.4199 3191.6484 m2999.293 3191.6484 L2999.293 3658.6675 L3758.4199 3658.6675 L3758.4199 3191.6484 Lf*Uu*u1 D1066.625 1305.9854 m1067.8252 1348.5293 1058.376 1386.958 1039.1426 1417.5059 c1014.9985 1455.8428 976.9883 1479.5596 929.1943 1486.0957 c923.499 1486.8623 918.6787 1487.373 913.666 1487.373 c908.6631 1487.373 903.8462 1486.8623 898.1274 1486.0928 c850.3491 1479.5557 812.3423 1455.8379 788.2163 1417.5049 c768.9736 1386.9424 759.5239 1348.5088 760.7329 1305.9746 C742.8813 1293.0459 731.6895 1270.417 731.6895 1246.2246 C731.6895 1046.3594 L731.6895 1007.2959 759.813 975.5156 794.3809 975.5156 C1032.9805 975.5156 L1067.5474 975.5156 1095.6699 1007.2959 1095.6699 1046.3594 C1095.6699 1246.2246 L1095.6699 1270.4131 1084.4775 1293.0479 1066.625 1305.9854 Cf0 D942.0654 1156.252 m935.0601 1151.9951 930.918 1145.209 930.918 1137.9863 C930.918 1057.0664 L896.9829 1057.0664 L896.9829 1137.9863 L896.9829 1145.2031 892.8472 1151.9844 885.8521 1156.2393 c870.3086 1165.7002 861.0288 1181.8281 861.0288 1199.3828 c861.0288 1227.4922 884.7681 1250.3604 913.9478 1250.3604 c943.147 1250.3604 966.9023 1227.4922 966.9023 1199.3828 c966.9023 1181.8232 957.6182 1165.7002 942.0654 1156.252 cf826.3252 1317.084 m826.8604 1342.7344 832.8066 1365.1934 843.7329 1382.5449 c857.4102 1404.2383 878.6709 1417.1973 906.9663 1421.0654 c911.7764 1421.7412 915.5513 1421.7451 920.4238 1421.0596 c948.6841 1417.1973 969.9492 1404.2393 983.6216 1382.5566 c994.5454 1365.1885 1000.4878 1342.7295 1001.0215 1317.084 C826.3252 1317.084 Lf*UU*u1 D559.7886 1494.8486 m551.9209 1502.9072 544.7783 1508.4727 535.1392 1514.0547 c509.5889 1528.8643 483.1025 1536.374 456.416 1536.374 c439.6025 1536.374 422.7549 1533.3652 406.3408 1527.4307 c401.606 1525.7188 396.7456 1523.6865 391.896 1521.3887 c391.8716 1521.377 391.8472 1521.3652 391.8223 1521.3535 c360.8745 1506.5674 332.6353 1481.1465 310.1436 1447.8203 c306.9502 1443.0732 303.6602 1437.7959 300.3496 1432.1094 c295.958 1424.5234 294.7827 1415.6807 297.0396 1407.21 c299.2979 1398.7354 304.7197 1391.6494 312.3022 1387.2607 c317.2979 1384.3662 322.9805 1382.8359 328.7354 1382.8359 c340.416 1382.8359 351.3013 1389.1074 357.1333 1399.1875 c359.3975 1403.0859 361.9136 1407.0879 364.6191 1411.0928 c376.2949 1428.416 389.5327 1442.3838 403.9648 1452.6074 c411.9604 1458.2627 420.2788 1462.6729 428.6904 1465.7178 c437.6743 1468.9717 446.9141 1470.6221 456.1528 1470.6221 c471.4438 1470.6221 486.9482 1466.1289 502.2368 1457.2656 c506.3511 1454.8828 509.4097 1452.501 512.7778 1449.0625 c532.7534 1428.5957 541.5864 1405.2705 539.0322 1379.7324 c536.6055 1355.3867 524.3101 1329.9609 503.4331 1306.0674 C277.6626 1306.0674 L243.103 1306.0674 214.9868 1274.2803 214.9868 1235.208 C214.9868 1035.3447 L214.9868 996.2813 243.103 964.501 277.6626 964.501 C516.2778 964.501 L550.8374 964.501 578.9536 996.2813 578.9536 1035.3447 C578.9536 1235.208 L578.9536 1251.04 574.1689 1266.4492 565.5977 1278.8438 C587.7959 1308.8623 601.1382 1341.332 604.3237 1373.2715 c608.8291 1418.3311 593.4297 1460.3701 559.7886 1494.8486 cf0 D425.1484 1145.915 m418.1304 1141.6797 413.9678 1134.9063 413.9463 1127.6836 C413.7026 1046.7637 L379.7676 1046.8662 L380.0112 1127.7852 L380.0332 1135.002 375.918 1141.7959 368.9355 1146.0723 c353.4204 1155.5801 344.1895 1171.7354 344.2422 1189.29 c344.3267 1217.3994 368.1348 1240.1953 397.3145 1240.1074 c426.5137 1240.0205 450.1997 1217.0801 450.1152 1188.9717 c450.0625 1171.4121 440.73 1155.3164 425.1484 1145.915 cf*Uu*u1 D1886.6582 2089.3159 m1855 2089.3159 L1843.04 2089.3159 1833.2539 2079.5298 1833.2539 2067.5796 C1833.2539 1898.6992 L1833.2539 1886.7344 1843.04 1876.9648 1855 1876.9648 C1886.6582 1876.9648 L1898.6182 1876.9648 1908.4043 1886.75 1908.4043 1898.7012 C1908.4043 2067.5806 L1908.4043 2079.5474 1898.6182 2089.3159 1886.6582 2089.3159 Cf1789.7168 2089.3159 m1758.0581 2089.3159 L1746.0986 2089.3159 1736.3125 2079.5298 1736.3125 2067.5796 C1736.3125 1898.6992 L1736.3125 1886.7344 1746.0986 1876.9648 1758.0581 1876.9648 C1789.7168 1876.9648 L1801.6768 1876.9648 1811.4629 1886.75 1811.4629 1898.7012 C1811.4629 2067.5806 L1811.4629 2079.5474 1801.6768 2089.3159 1789.7168 2089.3159 Cf1994.3496 2089.3159 m1951.584 2089.3159 L1939.624 2089.3159 1929.8379 2079.5298 1929.8379 2067.5796 C1929.8379 1898.6992 L1929.8379 1886.7344 1939.624 1876.9648 1951.584 1876.9648 C1994.3496 1876.9648 L2020.3047 1866.7539 2135.4824 1725.3984 2135.4824 1811.2813 C2135.4824 2154.9819 L2135.4824 2258.1328 2017.248 2101.5645 1994.3496 2089.3159 Cf*UU*u3555.9893 1924.7617 m3562.6318 1924.7617 L3570.1904 1924.7813 3577.3096 1927.749 3582.6768 1933.1162 c3588.0654 1938.5039 3591.0439 1945.6426 3591.0635 1953.2607 C3591.0635 2139.4424 L3591.0439 2146.957 3588.083 2154.0708 3582.7051 2159.4907 c3577.2979 2164.877 3570.1572 2167.8545 3562.5469 2167.874 C3555.9043 2167.874 L3548.3369 2167.8545 3541.2178 2164.8779 3535.8701 2159.5088 c3530.4746 2154.1392 3527.4922 2146.9995 3527.4717 2139.3564 C3527.4717 1953.1787 L3527.4922 1945.6396 3530.4561 1938.5234 3535.8252 1933.1328 c3541.2275 1927.7344 3548.376 1924.7617 3555.9893 1924.7617 Cf3731.376 2060.2549 m3727.0088 2066.624 3722.1982 2072.8604 3717.0771 2078.79 c3712.0078 2084.6602 3706.5381 2090.3135 3700.8203 2095.5918 c3700.7568 2095.6504 3700.6904 2095.708 3700.623 2095.7646 C3698.918 2097.3496 3697.083 2098.9844 3695.0049 2100.7666 c3692.9453 2102.5244 3690.9492 2104.1689 3689.0811 2105.6514 c3686.3662 2107.8154 3683.8018 2109.8584 3680.7158 2111.3467 c3677.3643 2112.9658 3673.8857 2113.6875 3669.3467 2113.6875 c3659.5361 2113.6494 3650.3252 2109.8193 3643.417 2102.9092 c3636.4561 2095.9707 3632.6123 2086.7295 3632.5928 2076.8438 c3632.5928 2063.9453 3638.1465 2059.8877 3644.6162 2055.1602 c3645.8115 2054.2969 3647.2979 2053.2227 3649.0029 2051.8164 c3651.6631 2049.6484 3654.2119 2047.4092 3656.5518 2045.1846 C3659.458 2042.3496 L3670.1377 2031.6504 3678.9424 2019.4336 3685.623 2006.0371 c3685.6787 2005.9268 3685.7383 2005.8184 3685.8018 2005.7129 C3687.042 2003.2178 3688.2275 2000.6348 3689.3311 1998.0361 c3696.6016 1980.8281 3700.2891 1962.5713 3700.2891 1943.7715 C3704.7686 1943.7715 L3700.2891 1943.6143 L3700.2725 1906.376 3685.7471 1871.3418 3659.3887 1844.9648 c3633.0186 1818.5791 3597.9609 1804.0469 3560.6924 1804.0469 C3559.3418 1804.0625 L3559.3281 1804.0645 3559.3145 1804.0645 3559.2998 1804.0645 c3528.4512 1804.3516 3499.3037 1814.4941 3475.0059 1833.3984 c3470.46 1836.9229 3466.0557 1840.8086 3461.9189 1844.9453 c3435.5322 1871.334 3420.999 1906.3916 3420.999 1943.7012 c3420.999 1975.0352 3431.8799 2005.9697 3451.6494 2030.8164 c3455.3711 2035.5264 3459.4814 2040.0684 3463.8672 2044.3154 c3468.207 2048.5166 3472.8682 2052.4688 3477.7217 2056.0635 C3477.7939 2056.1123 3477.8633 2056.1641 3477.9307 2056.2168 c3480.9531 2058.4541 3484.002 2061.0449 3485.8838 2064.7803 c3487.4883 2067.9258 3488.1436 2071.4209 3488.1436 2076.8438 c3488.1436 2083.9932 3486.0811 2090.9395 3482.1846 2096.9209 c3481.4561 2098.0439 3480.6533 2099.1416 3479.8096 2100.1709 c3478.998 2101.165 3478.085 2102.1631 3477.0928 2103.1328 C3473.958 2099.9326 L3476.9717 2103.2539 L3474.165 2105.9805 3470.9229 2108.2451 3467.3428 2109.9844 c3466.5811 2110.3535 3465.8633 2110.6787 3465.2158 2110.9424 c3460.8682 2112.7188 3456.0869 2113.668 3451.2988 2113.6875 c3447.3486 2113.6875 3444.3135 2113.123 3441.4873 2111.8691 c3438.8516 2110.7227 3436.6992 2109.1455 3434.2002 2107.208 C3434.1123 2107.1494 3434.0283 2107.0879 3433.9453 2107.0244 c3430.2861 2104.1768 3426.749 2101.2314 3423.4268 2098.2617 C3421.4971 2096.5293 L3421.4668 2096.5029 3421.4326 2096.4717 3421.3994 2096.4395 C3419.5332 2094.7285 L3419.4844 2094.6846 3419.3838 2094.5859 3419.3369 2094.5381 c3419.332 2094.5332 3419.3252 2094.5283 3419.3193 2094.5215 C3402.3672 2078.6367 3388.3125 2060.1816 3377.5479 2039.6709 c3375.4512 2035.6963 3373.4463 2031.5645 3371.5879 2027.3857 c3359.9141 2001.0625 3353.9775 1973.0215 3353.9404 1944.041 C3353.9268 1943.8984 3353.9209 1943.7549 3353.9209 1943.6113 c3353.9209 1943.4658 3353.9287 1943.3223 3353.9404 1943.1807 C3354.0674 1888.167 3375.5557 1836.4629 3414.4756 1797.5439 c3453.1396 1758.8613 3504.5439 1737.3613 3559.2207 1737.0059 C3560.1533 1736.9932 L3560.3115 1736.9766 3560.4717 1736.9678 3560.6338 1736.9678 C3560.7236 1736.9678 L3560.8691 1736.9678 3561.0127 1736.9756 3561.1543 1736.9883 C3616.167 1737.1152 3667.8721 1758.6035 3706.7939 1797.5244 c3745.7588 1836.4912 3767.2549 1888.2471 3767.3506 1943.2988 C3767.3623 1943.4316 3767.3682 1943.5664 3767.3682 1943.7012 c3767.3682 1985.499 3754.9229 2025.8008 3731.376 2060.2549 cf*U*u0 D1 XR3735.4541 904.5313 m3731.8428 904.1279 L3709.2041 901.501 L3708.6611 899.0352 3708.0576 896.5869 3707.4072 894.1709 c3706.085 889.2568 3704.5186 884.3105 3702.7217 879.375 c3693.665 854.5322 3679.2539 832.249 3660.9326 813.9297 C3660.9688 813.9111 L3660.8994 813.8398 L3660.8652 813.8398 L3656.3008 809.2773 3651.5078 804.9785 3646.5254 800.9658 c3641.5049 796.9307 3636.2539 793.1396 3630.8447 789.6709 c3610.0049 776.2832 3586.1689 767.1201 3560.5869 763.3135 c3555.498 762.5596 3550.3369 762.0127 3545.1055 761.6807 C3545.1055 761.2539 L3533.9697 761.2539 L3533.917 761.2539 L3533.8984 761.2539 L3522.7666 761.2539 L3522.7666 761.6807 L3506.8945 762.6475 3491.584 765.6758 3477.1025 770.5039 C3477.0498 770.5039 L3472.8213 771.9111 3468.5205 773.5332 3464.2236 775.3486 c3442.5742 784.4736 3423.1064 797.6484 3406.8467 813.9111 C3406.792 813.9658 L3406.792 814.0146 L3402.2314 818.5801 3397.9316 823.3711 3393.915 828.3398 c3389.8818 833.377 3386.0957 838.6104 3382.625 844.0352 c3366.5752 869.0332 3356.5527 898.3301 3354.6143 929.7773 C3354.2256 929.7773 L3354.2256 940.9307 L3354.2256 940.9629 L3354.2256 940.9805 L3354.2256 952.1152 L3354.6143 952.1152 L3355.583 967.9883 3358.6318 983.2939 3363.4541 997.7773 C3363.4541 997.832 L3364.8672 1002.0762 3366.4863 1006.3555 3368.2998 1010.6553 c3377.4287 1032.3076 3390.6025 1051.7744 3406.8643 1068.0352 C3406.9316 1068.085 L3406.9707 1068.085 L3411.5352 1072.6504 3416.3252 1076.9492 3421.3105 1080.9619 c3426.332 1085 3431.5635 1088.7852 3436.9893 1092.2549 c3461.9883 1108.3066 3491.2666 1118.3486 3522.7305 1120.2686 C3522.7305 1120.6738 L3533.8809 1120.6738 L3533.917 1120.6738 L3533.9346 1120.6738 L3545.0869 1120.6738 L3545.0869 1120.4063 L3547.2705 1120.2842 3549.5449 1120.1074 3551.8516 1119.8486 c3554.791 1119.5264 3557.7168 1119.1055 3560.5869 1118.4688 c3564.4307 1117.6436 3568.1631 1116.46 3571.6191 1114.9111 c3581.9912 1110.2061 3588.7051 1101.1348 3591.4697 1091.1104 C3591.4697 1091.0781 L3592.6338 1086.8281 3593.1084 1082.4082 3592.8447 1078.1445 C3592.8447 1078.0938 L3592.5801 1073.6523 3591.5225 1069.2666 3589.709 1065.2471 c3585.9043 1056.8457 3578.8408 1049.9951 3568.3232 1047.0859 C3568.1982 1047.0332 L3567.8809 1046.9639 L3565.5049 1046.3281 3563.0557 1045.9092 3560.5869 1045.6064 c3554.124 1044.8154 3547.4131 1044.9756 3540.9629 1045.1318 C3540.9268 1045.1318 L3540.9268 1045.1484 L3538.374 1045.2051 L3533.9346 1045.2051 L3533.8809 1045.2051 L3533.7949 1045.2051 L3530.498 1045.2051 L3522.0811 1044.9375 3513.9053 1043.6504 3506.1025 1041.502 c3503.4736 1040.7783 3500.6201 1039.8486 3497.6455 1038.7549 c3483.4443 1033.5049 3470.6709 1025.2217 3460.21 1014.7422 C3460.21 1014.6875 L3460.1377 1014.6387 L3460.1035 1014.6553 L3457.4951 1012.0459 3454.9922 1009.248 3452.6318 1006.3018 c3450.3096 1003.417 3448.1064 1000.3691 3446.0811 997.1934 c3436.2314 981.8506 3430.2959 963.7607 3429.6787 944.3613 C3429.6787 940.9307 L3429.6787 940.8389 L3429.624 940.8389 L3429.624 931.2754 3430.9463 921.9912 3433.3604 913.1807 C3433.3779 913.1807 L3434.0996 910.5596 3435.0166 907.7227 3436.124 904.7227 C3436.124 904.6924 L3441.377 890.4902 3449.6563 877.7383 3460.1738 867.2158 C3460.1885 867.2373 L3460.2432 867.1875 L3460.2246 867.1494 L3462.8496 864.5576 3465.6357 862.0381 3468.5771 859.6807 c3471.5889 857.248 3474.6201 855.0674 3477.6494 853.1055 C3477.7021 853.1055 L3493.2236 843.1719 3511.5449 837.2158 3531.1875 836.7061 C3533.9697 836.7061 L3534.0557 836.7061 L3534.0557 836.6748 L3542.9189 836.2334 3551.8516 837.1123 3560.5869 838.9629 c3596.3506 846.5381 3629.0293 870.8682 3640.9404 893.1514 C3610.7432 890.0537 L3610.709 890.0537 L3610.6045 890.0537 L3608.9834 889.752 3607.2725 889.5244 3605.4932 889.3779 c3603.7842 889.2568 3601.9365 889.2422 3599.998 889.3115 c3588.7939 889.8408 3578.1689 894.5098 3573.7686 907.4551 C3573.7119 907.5977 L3573.6445 907.8281 L3573.1338 909.376 3572.7266 910.9961 3572.4629 912.6719 c3572.2158 914.2217 3572.0586 915.8604 3572.041 917.5342 c3571.916 925.4092 3574.4873 933.1416 3578.8232 939.9785 C3578.873 939.9785 L3632.1123 1023.3057 L3632.0762 1023.3203 L3633.1865 1025.085 3634.5264 1026.7588 3636.0605 1028.3057 c3641.5225 1033.9102 3648.8652 1037.2568 3656.4258 1038.1367 c3663.9463 1039 3671.8389 1037.4336 3678.4473 1033.2061 c3680.2607 1032.041 3681.9326 1030.7422 3683.4111 1029.2959 C3754.3027 960.3271 L3757.4033 957.3125 3760.1172 954.0156 3762.1953 950.46 C3762.1953 950.4238 L3764.4854 946.4941 3766.0537 942.1807 3766.5967 937.5127 C3766.6143 937.5127 L3770.0352 909.1328 3753.4033 906.5039 3735.4541 904.5313 Cf*U*u1 D0 XR3118.9785 1947.6328 m3088.2275 1977.0957 3047.124 1996.5688 3002.2813 2003.1089 C2985.6494 2041.6646 2956.6182 2074.7534 2917.8252 2099.2314 c2875.8789 2125.6978 2826.2842 2139.687 2774.4053 2139.687 c2640.2432 2139.687 2531.0947 2045.4585 2531.0947 1929.6367 c2531.0947 1926.5371 2531.1924 1923.3887 2531.3906 1920.1641 C2530.249 1920.1895 2529.1143 1920.2031 2527.9814 1920.2031 c2443.667 1920.2031 2375.0723 1860.9746 2375.0723 1788.1719 c2375.0723 1715.3633 2443.667 1656.1289 2527.9814 1656.1289 C2728.5039 1656.1289 L2728.5029 1598.1914 L2670.4932 1606.5547 L2665.0889 1606.5547 2660.2207 1603.3105 2658.1641 1598.3223 c2657.4854 1596.6738 2657.167 1594.9414 2657.167 1593.2266 c2657.167 1589.7559 2658.5068 1586.3438 2661.0615 1583.7949 C2769.7412 1475.125 L2772.2227 1472.6426 2775.6436 1471.2051 2779.165 1471.2051 c2782.6738 1471.2051 2786.1221 1472.6426 2788.5869 1475.125 C2897.2588 1583.7949 L2901.0732 1587.5996 2902.2227 1593.334 2900.1494 1598.3223 c2898.0918 1603.3125 2893.2168 1606.5547 2887.8359 1606.5547 C2829.8252 1598.1914 L2829.8262 1656.1289 L2968.5527 1656.1289 L3080.1631 1656.1289 3170.9639 1734.5254 3170.9639 1830.8906 c3170.9639 1874.0547 3152.502 1915.5156 3118.9785 1947.6328 cf0 D2968.5527 1726.6191 m2527.9814 1726.6191 L2488.6572 1726.6191 2456.6631 1754.2305 2456.6631 1788.1719 c2456.6631 1822.1055 2488.6572 1849.7129 2527.9814 1849.7129 c2536.0088 1849.7129 2543.8057 1848.5781 2551.2363 1846.3359 C2560.9238 1826.9688 2563.2051 1822.1699 2578.8516 1806.2734 c2581.8438 1803.2344 2586.1152 1801.3496 2590.7207 1801.0313 c2595.333 1800.7227 2599.8916 1801.9961 2603.4023 1804.5879 C2639.04 1830.9004 L2642.5439 1833.4863 2644.7129 1837.168 2645.0703 1841.1348 c2645.4277 1845.1016 2643.9424 1849.0293 2640.9453 1852.0508 c2615.9268 1877.2734 2612.6797 1896.416 2612.6797 1929.6367 c2612.6797 2006.5835 2685.2295 2069.1851 2774.4053 2069.1851 c2833.21 2069.1851 2886.3057 2042.0864 2914.7627 1998.8433 C2901.0068 1995.4575 2887.0293 1990.7476 2872.5098 1984.6216 c2872.4443 1984.5933 2872.3779 1984.5659 2872.3125 1984.5366 C2851.8857 1975.2617 L2847.7607 1973.4668 2844.6338 1970.3262 2843.1963 1966.5352 c2841.7607 1962.7461 2842.1318 1958.6172 2844.2285 1955.0645 C2865.5059 1919.0137 L2869.8516 1911.6504 2880.2793 1908.7051 2888.8311 1912.4316 C2908.5654 1921.418 L2930.3271 1930.5957 2949.9482 1935.0586 2968.5527 1935.0586 c3035.1738 1935.0586 3089.374 1888.3281 3089.374 1830.8906 c3089.374 1773.3945 3035.1738 1726.6191 2968.5527 1726.6191 Cf*U*u1 D3118.9785 1116.002 m3088.2275 1145.4648 3047.124 1164.9375 3002.2813 1171.4775 C2985.6494 1210.0332 2956.6182 1243.1221 2917.8252 1267.5996 c2875.8789 1294.0664 2826.2842 1308.0557 2774.4053 1308.0557 c2640.2432 1308.0557 2531.0947 1213.8271 2531.0947 1098.0049 c2531.0947 1094.9063 2531.1924 1091.7568 2531.3906 1088.5332 C2530.249 1088.5586 2529.1143 1088.5713 2527.9814 1088.5713 c2443.667 1088.5713 2375.0723 1029.3428 2375.0723 956.54 c2375.0723 883.7314 2443.667 824.4971 2527.9814 824.4971 C2968.5527 824.4971 L3080.1631 824.4971 3170.9639 902.8945 3170.9639 999.2588 c3170.9639 1042.4229 3152.502 1083.8838 3118.9785 1116.002 cf0 D2968.5527 894.9873 m2829.6963 894.9873 L2829.7764 896.0586 2829.8311 897.1631 2829.8311 898.3428 c2829.8311 898.5664 2829.7979 898.7842 2829.7979 899.0039 C2829.8311 899.0039 L2829.832 960.5684 L2887.8418 952.2051 L2893.2461 952.2051 2898.1143 955.4482 2900.1709 960.4365 c2900.8496 962.0859 2901.168 963.8174 2901.168 965.5332 c2901.168 969.0039 2899.8281 972.415 2897.2734 974.9639 C2788.5938 1083.6348 L2786.1123 1086.1162 2782.6914 1087.5547 2779.1699 1087.5547 c2775.6611 1087.5547 2772.2129 1086.1162 2769.748 1083.6348 C2661.0771 974.9639 L2657.2627 971.1592 2656.1123 965.4258 2658.1865 960.4365 c2660.2432 955.4473 2665.1182 952.2051 2670.499 952.2051 C2728.5107 960.5684 L2728.5088 899.0039 L2728.542 899.0039 L2728.542 898.7842 2728.5088 898.5664 2728.5088 898.3428 c2728.5088 897.1631 2728.5635 896.0586 2728.6436 894.9873 C2527.9814 894.9873 L2488.6572 894.9873 2456.6631 922.5996 2456.6631 956.54 c2456.6631 990.4736 2488.6572 1018.0811 2527.9814 1018.0811 c2536.0088 1018.0811 2543.8057 1016.9473 2551.2363 1014.7041 C2560.9238 995.3369 2563.2051 990.5391 2578.8516 974.6426 c2581.8438 971.6035 2586.1152 969.7178 2590.7207 969.4004 c2595.333 969.0908 2599.8916 970.3643 2603.4023 972.9561 C2639.04 999.2686 L2642.5439 1001.8555 2644.7129 1005.5371 2645.0703 1009.5039 c2645.4277 1013.4707 2643.9424 1017.3975 2640.9453 1020.4199 c2615.9268 1045.6416 2612.6797 1064.7842 2612.6797 1098.0049 c2612.6797 1174.9521 2685.2295 1237.5537 2774.4053 1237.5537 c2833.21 1237.5537 2886.3057 1210.4551 2914.7627 1167.2119 C2901.0068 1163.8262 2887.0293 1159.1162 2872.5098 1152.9902 c2872.4443 1152.9619 2872.3779 1152.9346 2872.3125 1152.9053 C2851.8857 1143.6309 L2847.7607 1141.835 2844.6338 1138.6943 2843.1963 1134.9043 c2841.7607 1131.1143 2842.1318 1126.9863 2844.2285 1123.4326 C2865.5059 1087.3818 L2869.8516 1080.0186 2880.2793 1077.0742 2888.8311 1080.7998 C2908.5654 1089.7861 L2930.3271 1098.9648 2949.9482 1103.4268 2968.5527 1103.4268 c3035.1738 1103.4268 3089.374 1056.6973 3089.374 999.2588 c3089.374 941.7637 3035.1738 894.9873 2968.5527 894.9873 Cf*U*u1 D3130.7842 563.666 m2500.8232 563.666 L2494.6396 563.666 2489.627 558.6543 2489.627 552.4707 C2489.627 480.8613 L2454.0547 480.8613 L2426.4863 480.8613 2404.0566 458.4375 2404.0566 430.874 C2404.0566 373.543 L2404.0566 345.9854 2426.4863 323.5664 2454.0547 323.5664 C2489.627 323.5664 L2489.627 251.7324 L2489.627 245.5498 2494.6396 240.5371 2500.8232 240.5371 C3130.7842 240.5371 L3136.9678 240.5371 3141.9805 245.5498 3141.9805 251.7324 C3141.9805 552.4707 L3141.9805 558.6543 3136.9678 563.666 3130.7842 563.666 Cf0 D2489.627 384.7383 m2465.251 384.7383 L2465.251 419.6777 L2489.627 419.6777 L2489.627 384.7383 Lf3079.7891 417.0645 m2962.1973 301.6582 L2550.6191 301.8633 L2550.8105 503.5049 L3079.7891 503.5049 L3079.7891 417.0645 Lf*U2313.1123 2494.9595 m2308.7451 2498.6611 2302.9707 2500.2534 2297.3252 2499.3145 C2293.4385 2498.6694 L2262.543 2496.9395 L2254.7813 2498.2979 L2245.0459 2501.0332 L2244.9023 2501.0732 2244.7578 2501.1123 2244.6133 2501.1494 C2235.3135 2503.5332 L2225.8232 2507.4976 L2216.3564 2512.6938 L2206.6699 2518.895 L2196.9541 2525.8613 L2187.4297 2533.7188 L2173.2998 2548.5566 L2163.5684 2561.02 L2153.5898 2575.457 L2144.2686 2592.9912 L2144.2217 2593.0801 2144.1738 2593.1689 2144.125 2593.2568 C2133.7285 2612.1006 L2103.7598 2674.2217 L2103.6309 2674.4902 2103.4961 2674.7549 2103.3535 2675.0166 C2092.7012 2694.7354 L2092.6289 2694.8701 2092.5537 2695.0049 2092.4775 2695.1382 C2081.8447 2713.7524 L2081.8027 2713.8271 2081.7588 2713.9023 2081.7148 2713.9756 C2071.874 2730.6836 L2071.4092 2731.4736 2070.8906 2732.2285 2070.3184 2732.9443 C2059.4014 2746.6338 L2058.9502 2747.1992 2058.4668 2747.7393 2057.9551 2748.252 C2047.292 2758.9307 L2046.3896 2759.834 2045.4014 2760.6465 2044.3398 2761.3564 C2038.6162 2765.1855 L2038.2842 2765.4082 2037.9453 2765.6201 2037.5996 2765.8213 C2025.8594 2772.6704 L2025.5518 2772.8491 2025.2402 2773.02 2024.9238 2773.1816 C2013.1875 2779.1938 L2012.1328 2779.7334 2011.0313 2780.1763 2009.8975 2780.5156 C1997.0566 2784.3633 L1996.7051 2784.4688 1996.3496 2784.5645 1995.9932 2784.6494 C1983.4326 2787.6514 L1982.4258 2787.8916 1981.4023 2788.0518 1980.3701 2788.1294 C1954.9805 2790.0444 L1953.9434 2790.1226 1952.8984 2790.1172 1951.8604 2790.0288 C1939.0156 2788.9336 L1938.0898 2788.8545 1937.1719 2788.7095 1936.2676 2788.5 C1924.5225 2785.7744 L1924.2207 2785.7041 1923.9219 2785.6274 1923.625 2785.5435 C1912.9805 2782.5332 L1912.6006 2782.4258 1912.2236 2782.3066 1911.8506 2782.1758 C1900.9258 2778.3555 L1899.8379 2777.9746 1898.7871 2777.499 1897.7832 2776.9326 C1889.0547 2772.0078 L1888.2012 2771.5254 1887.3838 2770.9795 1886.6113 2770.374 C1878.9521 2764.3711 L1878.3926 2763.9326 1877.8574 2763.4639 1877.3486 2762.9668 C1866.4395 2752.2979 L1865.4365 2751.3179 1864.5439 2750.2324 1863.7744 2749.061 C1858.0391 2740.3232 L1857.624 2739.6924 1857.2461 2739.0371 1856.9082 2738.3618 C1851.9805 2728.5288 L1851.8857 2728.3408 1851.7939 2728.1504 1851.7061 2727.959 C1846.7891 2717.2988 L1846.4668 2716.6006 1846.1875 2715.8828 1845.9492 2715.1514 C1842.1416 2703.4126 L1841.9736 2702.8975 1841.8281 2702.375 1841.7051 2701.8477 C1838.6924 2688.9966 L1838.6719 2688.9111 1838.6523 2688.8252 1838.6338 2688.7402 C1835.625 2675.0771 L1835.5029 2674.5186 1835.4043 2673.9541 1835.3311 2673.3862 C1833.4229 2658.6284 L1833.3594 2658.1357 1833.3145 2657.6411 1833.2881 2657.145 C1832.4766 2641.5859 L1832.4658 2641.3818 1832.459 2641.1777 1832.4541 2640.9727 C1832.0195 2619.8838 L1764.8027 2619.8838 L1754.0449 2619.8838 1745.3242 2611.1631 1745.3242 2600.4053 C1745.3242 2424.7256 L1745.3242 2413.9683 1754.0449 2405.2476 1764.8027 2405.2476 C1770.8936 2405.2476 L1770.8936 2279.1099 L1770.8936 2268.3521 1779.6143 2259.6309 1790.3721 2259.6309 C1805.9248 2259.6309 L1816.6826 2259.6309 1825.4033 2268.3521 1825.4033 2279.1099 C1825.4033 2405.2036 L1896.1104 2405.2036 L1896.1104 2279.1099 L1896.1104 2268.3521 1904.8311 2259.6309 1915.5889 2259.6309 C1931.1299 2259.6309 L1941.8877 2259.6309 1950.6084 2268.3521 1950.6084 2279.1099 C1950.6084 2405.186 L1957.5107 2405.186 L1968.2686 2405.186 1976.9893 2413.9067 1976.9893 2424.6641 C1976.9893 2600.2266 L1976.9893 2610.9844 1968.2686 2619.7051 1957.5107 2619.7051 C1886.1699 2619.7051 L1886.8281 2629.8145 L1888.6563 2644.7563 L1890.4541 2658.5938 L1893.2344 2671.2368 L1895.9629 2682.6611 L1899.1621 2691.7656 L1903.3594 2700.8735 L1907.3408 2707.9575 L1911.5195 2713.7168 L1919.1563 2721.3535 L1923.8203 2724.7192 L1929.8242 2728.0952 L1935.5625 2729.8911 L1943.4883 2731.4194 L1951.3135 2732.2305 L1960.2588 2731.3267 L1960.418 2731.3105 1960.5781 2731.2964 1960.7373 2731.2842 C1969.6865 2730.6025 L1978.9121 2728.2495 L1987.502 2725.1631 L1997.4043 2720.1021 L2006.7578 2714.2461 L2014.6387 2708.1201 L2017.9082 2704.6572 L2027.8262 2692.998 L2036.46 2680.3086 L2045.3477 2663.4331 L2045.3965 2663.3408 2045.4453 2663.2495 2045.4961 2663.1582 C2055.3711 2645.1143 L2085.2871 2583.9551 L2085.3457 2583.835 2085.4053 2583.7148 2085.4668 2583.5962 C2095.5371 2564.0391 L2095.6719 2563.7773 2095.8125 2563.5186 2095.959 2563.2637 C2106.6113 2544.6943 L2106.7344 2544.48 2106.8613 2544.2676 2106.9922 2544.0576 C2117.9219 2526.584 L2117.9766 2526.4971 2118.0313 2526.4106 2118.0859 2526.3247 C2127.6426 2511.5674 L2128.3877 2510.416 2129.2529 2509.3467 2130.2227 2508.3774 C2146.8887 2491.7227 L2147.1348 2491.4756 2147.3887 2491.2363 2147.6484 2491.0029 C2158.3086 2481.4375 L2158.9746 2480.8394 2159.6816 2480.2881 2160.4238 2479.7871 C2172.1602 2471.8691 L2172.3457 2471.7446 2172.5332 2471.623 2172.7227 2471.5044 C2183.6406 2464.6729 L2184.1162 2464.375 2184.6055 2464.0977 2185.1055 2463.8428 C2196.8613 2457.8315 L2197.418 2457.5474 2197.9873 2457.2891 2198.5684 2457.0596 C2210.3096 2452.4199 L2210.5566 2452.3223 2210.8037 2452.23 2211.0537 2452.1426 C2222.7988 2448.0459 L2223.459 2447.8154 2224.1309 2447.6211 2224.8125 2447.4629 C2236.5605 2444.7373 L2236.8096 2444.6797 2237.0586 2444.627 2237.3086 2444.5791 C2248.7803 2442.3887 L2249.5352 2442.2446 2250.2969 2442.145 2251.0635 2442.0908 C2262.8008 2441.2627 L2263.7119 2441.1987 2264.6279 2441.1987 2265.54 2441.2627 C2277.2969 2442.0908 L2277.3936 2442.0977 2277.4893 2442.1055 2277.5859 2442.1133 C2290.4111 2443.209 L2291.4814 2443.2998 2292.542 2443.48 2293.582 2443.7461 C2305.3467 2446.7568 L2313.9668 2448.9619 2319.9961 2456.729 2319.9961 2465.627 C2319.9961 2480.0996 L2319.9961 2485.8242 2317.4785 2491.2588 2313.1123 2494.9595 cf*u1 D2132.6328 1324.1445 m2148.3662 1324.1445 2164.293 1335.8164 2164.293 1358.125 C2164.293 1359.7461 L2164.293 1377.7891 2150.6816 1391.3965 2132.6328 1391.3965 C2039.082 1391.3965 L2039.082 1401.2344 L2039.082 1416.1455 2026.9941 1428.2344 2012.082 1428.2344 C1835.7363 1428.2344 L1818.335 1428.2344 1804.3145 1423.0957 1794.0654 1412.9619 c1783.7383 1402.751 1778.502 1388.7598 1778.502 1371.3789 C1778.502 1339.4453 L1778.502 1318.1914 L1751.3701 1312.3838 1713.2949 1307.4512 1671.4492 1311.748 c1630.9063 1315.9131 1594.375 1327.7188 1561.9824 1347.0664 C1569.5801 1368.4746 1574.5801 1394.667 1577.1621 1426.3916 c1583.2988 1501.8086 1575.6973 1569.7617 1555.166 1622.9023 c1537.1094 1669.6494 1509.6348 1703.7676 1477.8066 1718.9697 c1448.916 1732.7676 1419.1328 1729.0752 1398.1465 1709.0898 c1358.6504 1671.4863 1359.9961 1589.5127 1401.7402 1489.8086 c1429.6523 1423.1445 1467.6836 1371.0039 1514.8926 1334.626 C1508.1602 1324.7598 1499.7734 1317.5723 1489.3438 1314.5977 c1452.332 1304.0459 1388.7559 1341.7871 1310.3223 1420.8682 c1247.1953 1484.5195 1196.3711 1552.9971 1195.8652 1553.6816 c1189.7852 1561.9082 1178.1875 1563.6445 1169.9629 1557.5645 c1161.7363 1551.4863 1159.9961 1539.8887 1166.0762 1531.6641 c1168.1973 1528.7939 1218.7832 1460.6094 1283.7402 1395.0645 c1322.3418 1356.1113 1358 1326.2891 1389.7129 1306.4268 c1432.4844 1279.6377 1469.4199 1270.4004 1499.4941 1278.9707 c1518.041 1284.2578 1533.5273 1295.9805 1545.6738 1313.8945 C1582.1934 1292.5664 1623.1172 1279.4727 1667.666 1274.8984 c1710.2969 1270.5215 1749.1133 1274.6602 1778.502 1280.3506 C1778.502 1243.8672 L1778.502 1222.9141 L1778.502 1186.1787 1800.4326 1163.3594 1835.7363 1163.3594 C2012.082 1163.3594 L2026.9941 1163.3594 2039.082 1175.4473 2039.082 1190.3594 C2039.082 1200.5762 L2132.6328 1200.5762 L2148.3662 1200.5762 2164.293 1212.2441 2164.293 1234.5469 C2164.293 1236.1777 L2164.293 1254.2148 2150.6816 1267.8184 2132.6328 1267.8184 C2039.082 1267.8184 L2039.082 1324.1445 L2132.6328 1324.1445 Lf0 D1540.2422 1429.3965 m1538.6582 1409.9531 1535.6777 1388.5957 1530.2168 1369.5498 C1491.5391 1401.6113 1460.0195 1446.5371 1435.9102 1504.1152 c1393.9785 1604.2676 1403.1172 1662.6777 1423.6875 1682.2617 c1436.1172 1694.0957 1451.2949 1690.5781 1461.8418 1685.54 c1507.8516 1663.5645 1552.0137 1574.0361 1540.2422 1429.3965 cf*Uu0.860075 0.849699 0.789548 1 k1304.665 369.7422 m1329.2671 369.7432 1349.2827 389.751 1349.2827 414.3428 c1349.2827 426.2637 1344.6411 437.4697 1336.2119 445.9004 c1327.7847 454.3301 1316.5801 458.9727 1304.665 458.9727 c1280.0615 458.9727 1260.0435 438.9512 1260.0435 414.3418 c1260.0435 389.75 1280.0615 369.7422 1304.665 369.7422 cf*u1 D1447.125 893.7139 m1162.1992 893.7139 L1131.7817 893.7139 1107.0356 868.9736 1107.0356 838.5645 C1107.0356 271.9023 L1107.0356 241.4668 1131.7817 216.7051 1162.1992 216.7051 C1447.125 216.7051 L1477.5483 216.7051 1502.2998 241.4668 1502.2998 271.9023 C1502.2998 838.5645 L1502.2998 868.9736 1477.5483 893.7139 1447.125 893.7139 Cf0 D1304.667 545.4121 m1376.9429 545.4121 1435.7441 486.6113 1435.7441 414.3359 c1435.7441 342.0605 1376.9429 283.2598 1304.667 283.2598 c1232.3926 283.2598 1173.5923 342.0596 1173.5923 414.335 c1173.5923 486.6113 1232.3926 545.4121 1304.667 545.4121 cf1435.7441 635.3672 m1435.7441 622.4639 1425.2446 611.9668 1412.3413 611.9668 C1196.9824 611.9668 L1184.0791 611.9668 1173.5811 622.4639 1173.5811 635.3672 C1173.5811 803.7549 L1173.5811 816.6602 1184.0791 827.1602 1196.9824 827.1602 C1412.3413 827.1602 L1425.2446 827.1602 1435.7441 816.6602 1435.7441 803.7549 C1435.7441 635.3672 Lf*UU*u1 D3560.6445 630.1514 m3470.5645 630.1514 3397.2783 556.8652 3397.2783 466.7852 c3397.2783 439.1426 3404.415 411.7842 3417.9414 387.4824 C3418.0977 387.1211 3418.2646 386.7627 3418.4395 386.4072 C3539.9033 140.9834 L3543.8018 133.1035 3551.834 128.1172 3560.626 128.1162 c3560.627 128.1162 3560.627 128.1162 y3569.4189 128.1162 3577.4512 133.1025 3581.3506 140.9805 C3702.8613 386.4043 L3703.0557 386.7959 3703.2373 387.1904 3703.4072 387.5898 C3716.8965 411.8145 3724.0107 439.1299 3724.0107 466.7852 c3724.0107 556.8652 3650.7256 630.1514 3560.6445 630.1514 cf0 D3560.6631 392.875 m3519.8857 392.875 3486.7119 426.0361 3486.7119 466.7969 c3486.7119 507.5723 3519.8857 540.7461 3560.6631 540.7461 c3601.4365 540.7461 3634.6084 507.5723 3634.6084 466.7969 c3634.6084 426.0361 3601.4365 392.875 3560.6631 392.875 cf*U*u1 D0.746094 0.675781 0.667969 0.898438 k1509.4956 2384.3784 m1501.7544 2395.3359 1492.5269 2404.0762 1482.0811 2410.3486 c1470.5327 2417.3027 1457.5503 2420.979 1444.4331 2420.979 C1117.5391 2420.979 L1113.5923 2436.3369 1109.0742 2461.5947 1111.9785 2489.8838 c1114.3442 2512.918 1121.0518 2533.6729 1132.0444 2552.0771 C1144.2075 2547.7598 1159.0884 2544.9199 1177.1138 2543.4521 c1219.9614 2539.9663 1258.5679 2544.2861 1288.7603 2555.9492 c1315.3198 2566.209 1334.7036 2581.8184 1343.3403 2599.9019 c1351.1802 2616.3164 1349.0815 2633.2358 1337.7271 2645.1611 c1316.3628 2667.5996 1269.79 2666.8359 1213.1431 2643.1182 c1175.2681 2627.2603 1145.644 2605.6533 1124.9761 2578.8301 C1119.3716 2582.6567 1115.2866 2587.4209 1113.5977 2593.3462 c1107.6021 2614.374 1129.0444 2650.4961 1173.9751 2695.0586 c1210.1372 2730.9238 1249.0444 2759.7983 1249.4331 2760.0854 c1254.106 2763.541 1255.0938 2770.1299 1251.6392 2774.8032 c1248.1851 2779.4756 1241.5962 2780.4644 1236.9233 2777.0098 c1235.2925 2775.8052 1196.5532 2747.0645 1159.314 2710.1592 c1137.1841 2688.2275 1120.2397 2667.9702 1108.9551 2649.9512 c1093.7354 2625.6514 1088.4868 2604.666 1093.3564 2587.5801 c1096.3599 2577.041 1103.02 2568.2432 1113.1978 2561.3438 C1101.0806 2540.5942 1093.6411 2517.3438 1091.0425 2492.0332 c1088.1304 2463.6719 1091.8501 2438.2764 1095.856 2420.979 C737.02 2420.979 L737.0151 2420.979 736.9048 2420.979 736.8984 2420.979 c723.8843 2420.979 710.9009 2417.3027 699.3535 2410.3467 c683.9751 2401.0791 671.1255 2386.3135 662.1865 2367.6309 c653.6147 2349.6416 649.0771 2328.7671 649.0659 2307.2603 C649.0659 2131.5342 L649.1055 2102.7588 657.2241 2075.3828 671.9453 2054.4248 c679.6904 2043.4736 688.9155 2034.7354 699.3618 2028.4561 c710.9136 2021.5107 723.8936 2017.8389 736.8984 2017.8389 C1444.4165 2017.8398 L1444.4219 2017.8398 1444.5332 2017.8398 1444.5386 2017.8398 c1457.5415 2017.8398 1470.521 2021.5107 1482.0874 2028.4634 c1497.4624 2037.7402 1510.3149 2052.5039 1519.2651 2071.1816 c1527.8247 2089.1763 1532.356 2110.0483 1532.3706 2131.5479 C1532.3706 2307.2734 L1532.3315 2336.0596 1524.2124 2363.436 1509.4956 2384.3784 cf0 D1221.2705 2623.7041 m1278.1724 2647.5293 1311.3579 2642.3359 1322.4854 2630.6484 c1329.2095 2623.5864 1327.2104 2614.9629 1324.3481 2608.9722 c1311.8618 2582.8306 1260.9966 2557.7402 1178.8203 2564.4297 c1167.7739 2565.3286 1155.6401 2567.0225 1144.8188 2570.124 C1163.0342 2592.0991 1188.5581 2610.0078 1221.2705 2623.7041 cf1312.9634 2334.7271 m1312.9634 2340.0225 1317.2563 2344.3164 1322.5522 2344.3164 C1352.8579 2344.3164 L1358.1538 2344.3164 1362.4468 2340.0225 1362.4468 2334.7271 C1362.4468 2304.4219 L1362.4468 2299.126 1358.1538 2294.833 1352.8579 2294.833 C1322.5522 2294.833 L1317.2563 2294.833 1312.9634 2299.126 1312.9634 2304.4219 C1312.9634 2334.7271 Lf1312.9634 2274.9678 m1312.9634 2280.2637 1317.2563 2284.5566 1322.5522 2284.5566 C1352.8579 2284.5566 L1358.1538 2284.5566 1362.4468 2280.2637 1362.4468 2274.9678 C1362.4468 2244.6626 L1362.4468 2239.3662 1358.1538 2235.0732 1352.8579 2235.0732 C1322.5522 2235.0732 L1317.2563 2235.0732 1312.9634 2239.3662 1312.9634 2244.6626 C1312.9634 2274.9678 Lf1312.9634 2215.2061 m1312.9634 2220.5024 1317.2563 2224.7959 1322.5522 2224.7959 C1352.8579 2224.7959 L1358.1538 2224.7959 1362.4468 2220.5024 1362.4468 2215.2061 C1362.4468 2184.9014 L1362.4468 2179.6055 1358.1538 2175.3125 1352.8579 2175.3125 C1322.5522 2175.3125 L1317.2563 2175.3125 1312.9634 2179.6055 1312.9634 2184.9014 C1312.9634 2215.2061 Lf1252.355 2334.7271 m1252.355 2340.0225 1256.6479 2344.3164 1261.9443 2344.3164 C1292.2476 2344.3164 L1297.5435 2344.3164 1301.8364 2340.0225 1301.8364 2334.7271 C1301.8364 2304.4219 L1301.8364 2299.126 1297.5435 2294.833 1292.2476 2294.833 C1261.9443 2294.833 L1256.6479 2294.833 1252.355 2299.126 1252.355 2304.4219 C1252.355 2334.7271 Lf1252.355 2274.9678 m1252.355 2280.2637 1256.6479 2284.5566 1261.9443 2284.5566 C1292.2476 2284.5566 L1297.5435 2284.5566 1301.8364 2280.2637 1301.8364 2274.9678 C1301.8364 2244.6626 L1301.8364 2239.3662 1297.5435 2235.0732 1292.2476 2235.0732 C1261.9443 2235.0732 L1256.6479 2235.0732 1252.355 2239.3662 1252.355 2244.6626 C1252.355 2274.9678 Lf1252.355 2215.2061 m1252.355 2220.5024 1256.6479 2224.7959 1261.9443 2224.7959 C1292.2476 2224.7959 L1297.5435 2224.7959 1301.8364 2220.5024 1301.8364 2215.2061 C1301.8364 2184.9014 L1301.8364 2179.6055 1297.5435 2175.3125 1292.2476 2175.3125 C1261.9443 2175.3125 L1256.6479 2175.3125 1252.355 2179.6055 1252.355 2184.9014 C1252.355 2215.2061 Lf1191.7446 2334.7271 m1191.7446 2340.0225 1196.0376 2344.3164 1201.334 2344.3164 C1231.6392 2344.3164 L1236.9351 2344.3164 1241.228 2340.0225 1241.228 2334.7271 C1241.228 2304.4219 L1241.228 2299.126 1236.9351 2294.833 1231.6392 2294.833 C1201.334 2294.833 L1196.0376 2294.833 1191.7446 2299.126 1191.7446 2304.4219 C1191.7446 2334.7271 Lf1191.7446 2274.9678 m1191.7446 2280.2637 1196.0376 2284.5566 1201.334 2284.5566 C1231.6392 2284.5566 L1236.9351 2284.5566 1241.228 2280.2637 1241.228 2274.9678 C1241.228 2244.6626 L1241.228 2239.3662 1236.9351 2235.0732 1231.6392 2235.0732 C1201.334 2235.0732 L1196.0376 2235.0732 1191.7446 2239.3662 1191.7446 2244.6626 C1191.7446 2274.9678 Lf1191.7446 2215.2061 m1191.7446 2220.5024 1196.0376 2224.7959 1201.334 2224.7959 C1231.6392 2224.7959 L1236.9351 2224.7959 1241.228 2220.5024 1241.228 2215.2061 C1241.228 2184.9014 L1241.228 2179.6055 1236.9351 2175.3125 1231.6392 2175.3125 C1201.334 2175.3125 L1196.0376 2175.3125 1191.7446 2179.6055 1191.7446 2184.9014 C1191.7446 2215.2061 Lf1131.147 2334.7271 m1131.147 2340.0225 1135.4399 2344.3164 1140.7358 2344.3164 C1171.0288 2344.3164 L1176.3247 2344.3164 1180.6177 2340.0225 1180.6177 2334.7271 C1180.6177 2304.4219 L1180.6177 2299.126 1176.3247 2294.833 1171.0288 2294.833 C1140.7358 2294.833 L1135.4399 2294.833 1131.147 2299.126 1131.147 2304.4219 C1131.147 2334.7271 Lf1131.147 2274.9678 m1131.147 2280.2637 1135.4399 2284.5566 1140.7358 2284.5566 C1171.0288 2284.5566 L1176.3247 2284.5566 1180.6177 2280.2637 1180.6177 2274.9678 C1180.6177 2244.6626 L1180.6177 2239.3662 1176.3247 2235.0732 1171.0288 2235.0732 C1140.7358 2235.0732 L1135.4399 2235.0732 1131.147 2239.3662 1131.147 2244.6626 C1131.147 2274.9678 Lf1131.147 2215.2061 m1131.147 2220.5024 1135.4399 2224.7959 1140.7358 2224.7959 C1171.0288 2224.7959 L1176.3247 2224.7959 1180.6177 2220.5024 1180.6177 2215.2061 C1180.6177 2184.9014 L1180.6177 2179.6055 1176.3247 2175.3125 1171.0288 2175.3125 C1140.7358 2175.3125 L1135.4399 2175.3125 1131.147 2179.6055 1131.147 2184.9014 C1131.147 2215.2061 Lf1070.5366 2334.7271 m1070.5366 2340.0225 1074.8296 2344.3164 1080.1255 2344.3164 C1110.4204 2344.3164 L1115.7163 2344.3164 1120.0098 2340.0225 1120.0098 2334.7271 C1120.0098 2304.4219 L1120.0098 2299.126 1115.7163 2294.833 1110.4204 2294.833 C1080.1255 2294.833 L1074.8296 2294.833 1070.5366 2299.126 1070.5366 2304.4219 C1070.5366 2334.7271 Lf1070.5366 2274.9678 m1070.5366 2280.2637 1074.8296 2284.5566 1080.1255 2284.5566 C1110.4204 2284.5566 L1115.7163 2284.5566 1120.0098 2280.2637 1120.0098 2274.9678 C1120.0098 2244.6626 L1120.0098 2239.3662 1115.7163 2235.0732 1110.4204 2235.0732 C1080.1255 2235.0732 L1074.8296 2235.0732 1070.5366 2239.3662 1070.5366 2244.6626 C1070.5366 2274.9678 Lf1070.5366 2215.2061 m1070.5366 2220.5024 1074.8296 2224.7959 1080.1255 2224.7959 C1110.4204 2224.7959 L1115.7163 2224.7959 1120.0098 2220.5024 1120.0098 2215.2061 C1120.0098 2184.9014 L1120.0098 2179.6055 1115.7163 2175.3125 1110.4204 2175.3125 C1080.1255 2175.3125 L1074.8296 2175.3125 1070.5366 2179.6055 1070.5366 2184.9014 C1070.5366 2215.2061 Lf1009.9282 2334.7271 m1009.9282 2340.0225 1014.2212 2344.3164 1019.5176 2344.3164 C1049.8208 2344.3164 L1055.1167 2344.3164 1059.4097 2340.0225 1059.4097 2334.7271 C1059.4097 2304.4219 L1059.4097 2299.126 1055.1167 2294.833 1049.8208 2294.833 C1019.5176 2294.833 L1014.2212 2294.833 1009.9282 2299.126 1009.9282 2304.4219 C1009.9282 2334.7271 Lf1009.9282 2274.9678 m1009.9282 2280.2637 1014.2212 2284.5566 1019.5176 2284.5566 C1049.8208 2284.5566 L1055.1167 2284.5566 1059.4097 2280.2637 1059.4097 2274.9678 C1059.4097 2244.6626 L1059.4097 2239.3662 1055.1167 2235.0732 1049.8208 2235.0732 C1019.5176 2235.0732 L1014.2212 2235.0732 1009.9282 2239.3662 1009.9282 2244.6626 C1009.9282 2274.9678 Lf1009.9282 2215.2061 m1009.9282 2220.5024 1014.2212 2224.7959 1019.5176 2224.7959 C1049.8208 2224.7959 L1055.1167 2224.7959 1059.4097 2220.5024 1059.4097 2215.2061 C1059.4097 2184.9014 L1059.4097 2179.6055 1055.1167 2175.3125 1049.8208 2175.3125 C1019.5176 2175.3125 L1014.2212 2175.3125 1009.9282 2179.6055 1009.9282 2184.9014 C1009.9282 2215.2061 Lf949.3184 2334.7271 m949.3184 2340.0225 953.6113 2344.3164 958.9072 2344.3164 C989.2124 2344.3164 L994.5083 2344.3164 998.8013 2340.0225 998.8013 2334.7271 C998.8013 2304.4219 L998.8013 2299.126 994.5083 2294.833 989.2124 2294.833 C958.9072 2294.833 L953.6113 2294.833 949.3184 2299.126 949.3184 2304.4219 C949.3184 2334.7271 Lf949.3184 2274.9678 m949.3184 2280.2637 953.6113 2284.5566 958.9072 2284.5566 C989.2124 2284.5566 L994.5083 2284.5566 998.8013 2280.2637 998.8013 2274.9678 C998.8013 2244.6626 L998.8013 2239.3662 994.5083 2235.0732 989.2124 2235.0732 C958.9072 2235.0732 L953.6113 2235.0732 949.3184 2239.3662 949.3184 2244.6626 C949.3184 2274.9678 Lf949.3184 2215.2061 m949.3184 2220.5024 953.6113 2224.7959 958.9072 2224.7959 C989.2124 2224.7959 L994.5083 2224.7959 998.8013 2220.5024 998.8013 2215.2061 C998.8013 2184.9014 L998.8013 2179.6055 994.5083 2175.3125 989.2124 2175.3125 C958.9072 2175.3125 L953.6113 2175.3125 949.3184 2179.6055 949.3184 2184.9014 C949.3184 2215.2061 Lf888.71 2334.7271 m888.71 2340.0225 893.0029 2344.3164 898.2988 2344.3164 C928.604 2344.3164 L933.9004 2344.3164 938.1934 2340.0225 938.1934 2334.7271 C938.1934 2304.4219 L938.1934 2299.126 933.9004 2294.833 928.604 2294.833 C898.2988 2294.833 L893.0029 2294.833 888.71 2299.126 888.71 2304.4219 C888.71 2334.7271 Lf888.71 2274.9678 m888.71 2280.2637 893.0029 2284.5566 898.2988 2284.5566 C928.604 2284.5566 L933.9004 2284.5566 938.1934 2280.2637 938.1934 2274.9678 C938.1934 2244.6626 L938.1934 2239.3662 933.9004 2235.0732 928.604 2235.0732 C898.2988 2235.0732 L893.0029 2235.0732 888.71 2239.3662 888.71 2244.6626 C888.71 2274.9678 Lf888.71 2215.2061 m888.71 2220.5024 893.0029 2224.7959 898.2988 2224.7959 C928.604 2224.7959 L933.9004 2224.7959 938.1934 2220.5024 938.1934 2215.2061 C938.1934 2184.9014 L938.1934 2179.6055 933.9004 2175.3125 928.604 2175.3125 C898.2988 2175.3125 L893.0029 2175.3125 888.71 2179.6055 888.71 2184.9014 C888.71 2215.2061 Lf828.0996 2334.7271 m828.0996 2340.0225 832.3926 2344.3164 837.6885 2344.3164 C867.9937 2344.3164 L873.29 2344.3164 877.583 2340.0225 877.583 2334.7271 C877.583 2304.4219 L877.583 2299.126 873.29 2294.833 867.9937 2294.833 C837.6885 2294.833 L832.3926 2294.833 828.0996 2299.126 828.0996 2304.4219 C828.0996 2334.7271 Lf828.0996 2274.9678 m828.0996 2280.2637 832.3926 2284.5566 837.6885 2284.5566 C867.9937 2284.5566 L873.29 2284.5566 877.583 2280.2637 877.583 2274.9678 C877.583 2244.6626 L877.583 2239.3662 873.29 2235.0732 867.9937 2235.0732 C837.6885 2235.0732 L832.3926 2235.0732 828.0996 2239.3662 828.0996 2244.6626 C828.0996 2274.9678 Lf828.0996 2215.2061 m828.0996 2220.5024 832.3926 2224.7959 837.6885 2224.7959 C867.9937 2224.7959 L873.29 2224.7959 877.583 2220.5024 877.583 2215.2061 C877.583 2184.9014 L877.583 2179.6055 873.29 2175.3125 867.9937 2175.3125 C837.6885 2175.3125 L832.3926 2175.3125 828.0996 2179.6055 828.0996 2184.9014 C828.0996 2215.2061 Lf767.5015 2334.7271 m767.5015 2340.0225 771.7949 2344.3164 777.0908 2344.3164 C807.3857 2344.3164 L812.6816 2344.3164 816.9746 2340.0225 816.9746 2334.7271 C816.9746 2304.4219 L816.9746 2299.126 812.6816 2294.833 807.3857 2294.833 C777.0908 2294.833 L771.7949 2294.833 767.5015 2299.126 767.5015 2304.4219 C767.5015 2334.7271 Lf767.5015 2274.9678 m767.5015 2280.2637 771.7949 2284.5566 777.0908 2284.5566 C807.3857 2284.5566 L812.6816 2284.5566 816.9746 2280.2637 816.9746 2274.9678 C816.9746 2244.6626 L816.9746 2239.3662 812.6816 2235.0732 807.3857 2235.0732 C777.0908 2235.0732 L771.7949 2235.0732 767.5015 2239.3662 767.5015 2244.6626 C767.5015 2274.9678 Lf767.5015 2215.2061 m767.5015 2220.5024 771.7949 2224.7959 777.0908 2224.7959 C807.3857 2224.7959 L812.6816 2224.7959 816.9746 2220.5024 816.9746 2215.2061 C816.9746 2184.9014 L816.9746 2179.6055 812.6816 2175.3125 807.3857 2175.3125 C777.0908 2175.3125 L771.7949 2175.3125 767.5015 2179.6055 767.5015 2184.9014 C767.5015 2215.2061 Lf1419.4175 2102.1958 m1419.4175 2096.8994 1415.1245 2092.6064 1409.8281 2092.6064 C777.0908 2092.6064 L771.7949 2092.6064 767.5015 2096.8994 767.5015 2102.1958 C767.5015 2126.3242 L767.5015 2131.6201 771.7949 2135.9131 777.0908 2135.9131 C1409.8281 2135.9131 L1415.1245 2135.9131 1419.4175 2131.6201 1419.4175 2126.3242 C1419.4175 2102.1958 Lf1424.0703 2184.9014 m1424.0703 2179.6055 1419.7773 2175.3125 1414.4814 2175.3125 C1384.1758 2175.3125 L1378.8799 2175.3125 1374.5869 2179.6055 1374.5869 2184.9014 C1374.5869 2215.2061 L1374.5869 2220.5024 1378.8799 2224.7959 1384.1758 2224.7959 C1414.4814 2224.7959 L1419.7773 2224.7959 1424.0703 2220.5024 1424.0703 2215.2061 C1424.0703 2184.9014 Lf1424.0703 2244.6626 m1424.0703 2239.3662 1419.7773 2235.0732 1414.4814 2235.0732 C1384.1758 2235.0732 L1378.8799 2235.0732 1374.5869 2239.3662 1374.5869 2244.6626 C1374.5869 2274.9678 L1374.5869 2280.2637 1378.8799 2284.5566 1384.1758 2284.5566 C1414.4814 2284.5566 L1419.7773 2284.5566 1424.0703 2280.2637 1424.0703 2274.9678 C1424.0703 2244.6626 Lf1424.0703 2304.4219 m1424.0703 2299.126 1419.7773 2294.833 1414.4814 2294.833 C1384.1758 2294.833 L1378.8799 2294.833 1374.5869 2299.126 1374.5869 2304.4219 C1374.5869 2334.7271 L1374.5869 2340.0225 1378.8799 2344.3164 1384.1758 2344.3164 C1414.4814 2344.3164 L1419.7773 2344.3164 1424.0703 2340.0225 1424.0703 2334.7271 C1424.0703 2304.4219 Lf*Uu438.8999 2223.3218 m438.8999 2272.376 401.4673 2312.2842 355.4565 2312.2842 C330.5493 2312.2842 L330.5493 2199.6318 L438.8999 2199.6318 L438.8999 2223.3218 Lf205.7119 2223.3218 m205.7119 2199.6318 L315.0967 2199.6318 L315.0967 2312.2842 L289.1553 2312.2842 L243.1445 2312.2842 205.7119 2272.376 205.7119 2223.3218 Cf*u1 D592.8633 2625.1357 m567.4854 2651.79 512.1631 2650.8818 444.875 2622.709 c399.8848 2603.8721 364.6953 2578.2056 340.1455 2546.3442 C333.4873 2550.8896 328.6357 2556.5483 326.6289 2563.5869 c319.5068 2588.5654 344.9775 2631.4731 398.3486 2684.4063 c441.3047 2727.0088 487.5205 2761.3076 487.9824 2761.6494 c493.5332 2765.7539 494.7061 2773.5806 490.6025 2779.1309 c486.5 2784.6826 478.6738 2785.8564 473.1221 2781.7534 c471.1846 2780.3218 425.1689 2746.1831 380.9336 2702.3442 c354.6465 2676.292 334.5195 2652.23 321.1143 2630.8262 c303.0352 2601.9604 296.8008 2577.0332 302.5859 2556.7373 c306.1533 2544.2188 314.0645 2533.7676 326.1543 2525.5723 C311.7607 2500.9248 302.9238 2473.3066 299.8369 2443.2412 c296.1172 2407.0117 301.5068 2374.8398 306.6328 2354.3447 C290.2354 2354.3447 L221.2256 2354.3447 165.083 2310.0713 165.083 2255.6445 C165.083 1952.0684 L165.083 1897.6426 221.2256 1853.3604 290.2354 1853.3604 C358.1396 1853.3604 L427.1592 1853.3604 483.2998 1897.6426 483.2998 1952.0684 C483.2998 2255.6445 L483.2998 2310.0713 427.1592 2354.3447 358.1396 2354.3447 C332.5127 2354.3447 L327.623 2371.8809 320.9561 2404.1641 324.7061 2440.6885 c327.5156 2468.0498 335.4834 2492.7041 348.541 2514.5645 C362.9893 2509.437 380.666 2506.0635 402.0771 2504.3203 c452.9736 2500.1792 498.833 2505.3105 534.6973 2519.1646 c566.2461 2531.3521 589.2715 2549.894 599.5303 2571.374 c608.8428 2590.8726 606.3506 2610.9702 592.8633 2625.1357 cf0 D355.4565 2324.2842 m408.084 2324.2842 450.8999 2278.9927 450.8999 2223.3218 C450.8999 2187.6318 L193.7119 2187.6318 L193.7119 2223.3218 L193.7119 2278.9927 236.5278 2324.2842 289.1553 2324.2842 C355.4565 2324.2842 Lf576.9707 2582.1484 m562.1387 2551.0957 501.7178 2521.292 404.1045 2529.2383 c390.9834 2530.3062 376.5693 2532.3179 363.7158 2536.0024 C385.3525 2562.1055 415.6709 2583.3784 454.5293 2599.6484 c522.1211 2627.9487 561.54 2621.7793 574.7578 2607.8975 c582.7451 2599.5083 580.3701 2589.2646 576.9707 2582.1484 cf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF